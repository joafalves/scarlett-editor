module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "build/build-es6";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 124);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/* exports provided: isObjectAssigned, isString, isNumber, isFunction, inheritsFrom, generateUID, splitCamelCase, capitalize, getType, isEqual */
/* exports used: isObjectAssigned, isString, isNumber, generateUID, isFunction, getType, inheritsFrom, splitCamelCase, capitalize, isEqual */
/*!*****************************!*\
  !*** ./src/common/utils.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return isObjectAssigned; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return isString; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return isNumber; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return isFunction; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return inheritsFrom; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return generateUID; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return splitCamelCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return capitalize; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return getType; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return isEqual; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_startCase__ = __webpack_require__(/*! lodash/startCase */ 116);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_lodash_startCase___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_lodash_startCase__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_capitalize__ = __webpack_require__(/*! lodash/capitalize */ 111);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_capitalize___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_capitalize__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_isNumber__ = __webpack_require__(/*! lodash/isNumber */ 114);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_lodash_isNumber___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_lodash_isNumber__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_isString__ = __webpack_require__(/*! lodash/isString */ 115);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_lodash_isString___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_lodash_isString__);\n\n\n\n /**\n                                          * Scarlett @ DevTeam\n                                          * Includes global utility functions that can be called from any context\n                                          */\n\n\n\n/**\n * Returns true if there is something assigned to the given object\n * @param obj\n * @returns {boolean}\n */\nfunction isObjectAssigned(obj) {\n  return typeof obj !== \"undefined\" && obj !== null;\n}\n\n/**\n * Validates if the given object is a string\n * @param obj\n * @returns {boolean}\n */\nfunction isString(obj) {\n  return __WEBPACK_IMPORTED_MODULE_3_lodash_isString___default()(obj);\n}\n\n/**\n * Validates if the given object is a number\n * @param obj\n * @returns {boolean}\n */\nfunction isNumber(obj) {\n  return __WEBPACK_IMPORTED_MODULE_2_lodash_isNumber___default()(obj);\n}\n\n/**\n * Validates if the given object is a function\n * @param obj\n * @returns {boolean}\n */\nfunction isFunction(obj) {\n  return typeof obj === \"function\";\n}\n\n/**\n * Creates inheritance between classes by cloning the prototype\n * @param child\n * @param parent\n */\nfunction inheritsFrom(child, parent) {\n  child.prototype = Object.create(parent.prototype);\n}\n\n/**\n * Generates a unique natural number\n * @type {number}\n * @private\n */\nlet _SS_UID = 0;\nfunction generateUID() {\n  return ++_SS_UID;\n}\n\n/**\n * Capitalizes a string\n * @param string\n * @returns {*}\n */\nfunction capitalize(string) {\n  return __WEBPACK_IMPORTED_MODULE_1_lodash_capitalize___default()(string);\n}\n\n/**\n * Split camel case\n * TODO: change to lodash startCase?\n * @param string\n * @returns {string}\n */\nfunction splitCamelCase(string) {\n  return __WEBPACK_IMPORTED_MODULE_0_lodash_startCase___default()(string);\n}\n\n/**\n * Gets the type of the object\n * @param object\n * @returns {*}\n */\nfunction getType(object) {\n  if (object === null) return \"[object Null]\"; // special case\n  if (object.getType) return object.getType();\n  return object.constructor.name || Object.prototype.toString.call(object);\n}\n\n/**\n * Compares by applying the 'equal' function if it exists in the first object\n * @param a\n * @param b\n */\nfunction isEqual(a, b) {\n  if (isFunction(a.equals)) {\n    return a.equals(b);\n  }\n\n  return a === b;\n}//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvY29tbW9uL3V0aWxzLmpzP2FhZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBTY2FybGV0dCBAIERldlRlYW1cbiAqIEluY2x1ZGVzIGdsb2JhbCB1dGlsaXR5IGZ1bmN0aW9ucyB0aGF0IGNhbiBiZSBjYWxsZWQgZnJvbSBhbnkgY29udGV4dFxuICovXG5cbmltcG9ydCBfIGZyb20gXCJsb2Rhc2hcIjtcblxuZXhwb3J0IHtcbiAgaXNPYmplY3RBc3NpZ25lZCxcbiAgaXNTdHJpbmcsXG4gIGlzTnVtYmVyLFxuICBpc0Z1bmN0aW9uLFxuICBpbmhlcml0c0Zyb20sXG4gIGdlbmVyYXRlVUlELFxuICBzcGxpdENhbWVsQ2FzZSxcbiAgY2FwaXRhbGl6ZSxcbiAgZ2V0VHlwZSxcbiAgaXNFcXVhbFxufTtcblxuLyoqXG4gKiBSZXR1cm5zIHRydWUgaWYgdGhlcmUgaXMgc29tZXRoaW5nIGFzc2lnbmVkIHRvIHRoZSBnaXZlbiBvYmplY3RcbiAqIEBwYXJhbSBvYmpcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc09iamVjdEFzc2lnbmVkKG9iaikge1xuICByZXR1cm4gdHlwZW9mIG9iaiAhPT0gXCJ1bmRlZmluZWRcIiAmJiBvYmogIT09IG51bGw7XG59XG5cbi8qKlxuICogVmFsaWRhdGVzIGlmIHRoZSBnaXZlbiBvYmplY3QgaXMgYSBzdHJpbmdcbiAqIEBwYXJhbSBvYmpcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc1N0cmluZyhvYmopIHtcbiAgcmV0dXJuIF8uaXNTdHJpbmcob2JqKTtcbn1cblxuLyoqXG4gKiBWYWxpZGF0ZXMgaWYgdGhlIGdpdmVuIG9iamVjdCBpcyBhIG51bWJlclxuICogQHBhcmFtIG9ialxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIGlzTnVtYmVyKG9iaikge1xuICByZXR1cm4gXy5pc051bWJlcihvYmopO1xufVxuXG4vKipcbiAqIFZhbGlkYXRlcyBpZiB0aGUgZ2l2ZW4gb2JqZWN0IGlzIGEgZnVuY3Rpb25cbiAqIEBwYXJhbSBvYmpcbiAqIEByZXR1cm5zIHtib29sZWFufVxuICovXG5mdW5jdGlvbiBpc0Z1bmN0aW9uKG9iaikge1xuICByZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJmdW5jdGlvblwiO1xufVxuXG4vKipcbiAqIENyZWF0ZXMgaW5oZXJpdGFuY2UgYmV0d2VlbiBjbGFzc2VzIGJ5IGNsb25pbmcgdGhlIHByb3RvdHlwZVxuICogQHBhcmFtIGNoaWxkXG4gKiBAcGFyYW0gcGFyZW50XG4gKi9cbmZ1bmN0aW9uIGluaGVyaXRzRnJvbShjaGlsZCwgcGFyZW50KSB7XG4gIGNoaWxkLnByb3RvdHlwZSA9IE9iamVjdC5jcmVhdGUocGFyZW50LnByb3RvdHlwZSk7XG59XG5cbi8qKlxuICogR2VuZXJhdGVzIGEgdW5pcXVlIG5hdHVyYWwgbnVtYmVyXG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQHByaXZhdGVcbiAqL1xubGV0IF9TU19VSUQgPSAwO1xuZnVuY3Rpb24gZ2VuZXJhdGVVSUQoKSB7XG4gIHJldHVybiArK19TU19VSUQ7XG59XG5cbi8qKlxuICogQ2FwaXRhbGl6ZXMgYSBzdHJpbmdcbiAqIEBwYXJhbSBzdHJpbmdcbiAqIEByZXR1cm5zIHsqfVxuICovXG5mdW5jdGlvbiBjYXBpdGFsaXplKHN0cmluZykge1xuICByZXR1cm4gXy5jYXBpdGFsaXplKHN0cmluZyk7XG59XG5cbi8qKlxuICogU3BsaXQgY2FtZWwgY2FzZVxuICogVE9ETzogY2hhbmdlIHRvIGxvZGFzaCBzdGFydENhc2U/XG4gKiBAcGFyYW0gc3RyaW5nXG4gKiBAcmV0dXJucyB7c3RyaW5nfVxuICovXG5mdW5jdGlvbiBzcGxpdENhbWVsQ2FzZShzdHJpbmcpIHtcbiAgcmV0dXJuIF8uc3RhcnRDYXNlKHN0cmluZyk7XG59XG5cbi8qKlxuICogR2V0cyB0aGUgdHlwZSBvZiB0aGUgb2JqZWN0XG4gKiBAcGFyYW0gb2JqZWN0XG4gKiBAcmV0dXJucyB7Kn1cbiAqL1xuZnVuY3Rpb24gZ2V0VHlwZShvYmplY3QpIHtcbiAgaWYgKG9iamVjdCA9PT0gbnVsbCkgcmV0dXJuIFwiW29iamVjdCBOdWxsXVwiOyAvLyBzcGVjaWFsIGNhc2VcbiAgaWYgKG9iamVjdC5nZXRUeXBlKSByZXR1cm4gb2JqZWN0LmdldFR5cGUoKTtcbiAgcmV0dXJuIG9iamVjdC5jb25zdHJ1Y3Rvci5uYW1lIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvYmplY3QpO1xufVxuXG4vKipcbiAqIENvbXBhcmVzIGJ5IGFwcGx5aW5nIHRoZSAnZXF1YWwnIGZ1bmN0aW9uIGlmIGl0IGV4aXN0cyBpbiB0aGUgZmlyc3Qgb2JqZWN0XG4gKiBAcGFyYW0gYVxuICogQHBhcmFtIGJcbiAqL1xuZnVuY3Rpb24gaXNFcXVhbChhLCBiKSB7XG4gIGlmIChpc0Z1bmN0aW9uKGEuZXF1YWxzKSkge1xuICAgIHJldHVybiBhLmVxdWFscyhiKTtcbiAgfVxuXG4gIHJldHVybiBhID09PSBiO1xufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb21tb24vdXRpbHMuanMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBOzs7OztBQU9BO0FBQ0E7QUFZQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 1 */
/* no static exports found */
/* all exports used */
/*!****************************************!*\
  !*** ./~/matter-js/src/core/Common.js ***!
  \****************************************/
/***/ (function(module, exports) {

eval("/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        args = Array.prototype.slice.call(arguments, argsStart);\n\n        for (var i = 0; i < args.length; i++) {\n            var source = args[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Returns a hex colour string made by lightening or darkening color by percent.\n     * @method shadeColor\n     * @param {string} color\n     * @param {number} percent\n     * @return {string} A hex colour\n     */\n    Common.shadeColor = function(color, percent) {   \n        // http://stackoverflow.com/questions/5560248/programmatically-lighten-or-darken-a-hex-color\n        var colorInteger = parseInt(color.slice(1),16), \n            amount = Math.round(2.55 * percent), \n            R = (colorInteger >> 16) + amount, \n            B = (colorInteger >> 8 & 0x00FF) + amount, \n            G = (colorInteger & 0x0000FF) + amount;\n        return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R :255) * 0x10000 \n                + (B < 255 ? B < 1 ? 0 : B : 255) * 0x100 \n                + (G < 255 ? G < 1 ? 0 : G : 255)).toString(16).slice(1);\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        // http://stackoverflow.com/questions/384286/javascript-isdom-how-do-you-check-if-a-javascript-object-is-a-dom-object\n        try {\n            return obj instanceof HTMLElement;\n        }\n        catch(e){\n            return (typeof obj===\"object\") &&\n              (obj.nodeType===1) && (typeof obj.style === \"object\") &&\n              (typeof obj.ownerDocument ===\"object\");\n        }\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp (high-res if available).\n     * @method now\n     * @return {number} the current timestamp (high-res if available)\n     */\n    Common.now = function() {\n        // http://stackoverflow.com/questions/221294/how-do-you-get-a-timestamp-in-javascript\n        // https://gist.github.com/davidwaterston/2982531\n\n        var performance = window.performance || {};\n\n        performance.now = (function() {\n            return performance.now    ||\n            performance.webkitNow     ||\n            performance.msNow         ||\n            performance.oNow          ||\n            performance.mozNow        ||\n            function() { return +(new Date()); };\n        })();\n              \n        return performance.now();\n    };\n\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * A wrapper for console.log, for providing errors and warnings.\n     * @method log\n     * @param {string} message\n     * @param {string} type\n     */\n    Common.log = function(message, type) {\n        if (!console || !console.log || !console.warn)\n            return;\n\n        switch (type) {\n\n        case 'warn':\n            console.warn('Matter.js:', message);\n            break;\n        case 'error':\n            console.log('Matter.js:', message);\n            break;\n\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    var _seededRandom = function() {\n        // https://gist.github.com/ngryman/3830489\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 2 */
/* no static exports found */
/* all exports used */
/*!********************************************!*\
  !*** ./~/matter-js/src/geometry/Bounds.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMi5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL34vbWF0dGVyLWpzL3NyYy9nZW9tZXRyeS9Cb3VuZHMuanM/ODgyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogVGhlIGBNYXR0ZXIuQm91bmRzYCBtb2R1bGUgY29udGFpbnMgbWV0aG9kcyBmb3IgY3JlYXRpbmcgYW5kIG1hbmlwdWxhdGluZyBheGlzLWFsaWduZWQgYm91bmRpbmcgYm94ZXMgKEFBQkIpLlxuKlxuKiBAY2xhc3MgQm91bmRzXG4qL1xuXG52YXIgQm91bmRzID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gQm91bmRzO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IGF4aXMtYWxpZ25lZCBib3VuZGluZyBib3ggKEFBQkIpIGZvciB0aGUgZ2l2ZW4gdmVydGljZXMuXG4gICAgICogQG1ldGhvZCBjcmVhdGVcbiAgICAgKiBAcGFyYW0ge3ZlcnRpY2VzfSB2ZXJ0aWNlc1xuICAgICAqIEByZXR1cm4ge2JvdW5kc30gQSBuZXcgYm91bmRzIG9iamVjdFxuICAgICAqL1xuICAgIEJvdW5kcy5jcmVhdGUgPSBmdW5jdGlvbih2ZXJ0aWNlcykge1xuICAgICAgICB2YXIgYm91bmRzID0geyBcbiAgICAgICAgICAgIG1pbjogeyB4OiAwLCB5OiAwIH0sIFxuICAgICAgICAgICAgbWF4OiB7IHg6IDAsIHk6IDAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIGlmICh2ZXJ0aWNlcylcbiAgICAgICAgICAgIEJvdW5kcy51cGRhdGUoYm91bmRzLCB2ZXJ0aWNlcyk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gYm91bmRzO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGVzIGJvdW5kcyB1c2luZyB0aGUgZ2l2ZW4gdmVydGljZXMgYW5kIGV4dGVuZHMgdGhlIGJvdW5kcyBnaXZlbiBhIHZlbG9jaXR5LlxuICAgICAqIEBtZXRob2QgdXBkYXRlXG4gICAgICogQHBhcmFtIHtib3VuZHN9IGJvdW5kc1xuICAgICAqIEBwYXJhbSB7dmVydGljZXN9IHZlcnRpY2VzXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHZlbG9jaXR5XG4gICAgICovXG4gICAgQm91bmRzLnVwZGF0ZSA9IGZ1bmN0aW9uKGJvdW5kcywgdmVydGljZXMsIHZlbG9jaXR5KSB7XG4gICAgICAgIGJvdW5kcy5taW4ueCA9IEluZmluaXR5O1xuICAgICAgICBib3VuZHMubWF4LnggPSAtSW5maW5pdHk7XG4gICAgICAgIGJvdW5kcy5taW4ueSA9IEluZmluaXR5O1xuICAgICAgICBib3VuZHMubWF4LnkgPSAtSW5maW5pdHk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2ZXJ0aWNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIHZlcnRleCA9IHZlcnRpY2VzW2ldO1xuICAgICAgICAgICAgaWYgKHZlcnRleC54ID4gYm91bmRzLm1heC54KSBib3VuZHMubWF4LnggPSB2ZXJ0ZXgueDtcbiAgICAgICAgICAgIGlmICh2ZXJ0ZXgueCA8IGJvdW5kcy5taW4ueCkgYm91bmRzLm1pbi54ID0gdmVydGV4Lng7XG4gICAgICAgICAgICBpZiAodmVydGV4LnkgPiBib3VuZHMubWF4LnkpIGJvdW5kcy5tYXgueSA9IHZlcnRleC55O1xuICAgICAgICAgICAgaWYgKHZlcnRleC55IDwgYm91bmRzLm1pbi55KSBib3VuZHMubWluLnkgPSB2ZXJ0ZXgueTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgaWYgKHZlbG9jaXR5KSB7XG4gICAgICAgICAgICBpZiAodmVsb2NpdHkueCA+IDApIHtcbiAgICAgICAgICAgICAgICBib3VuZHMubWF4LnggKz0gdmVsb2NpdHkueDtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgYm91bmRzLm1pbi54ICs9IHZlbG9jaXR5Lng7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmICh2ZWxvY2l0eS55ID4gMCkge1xuICAgICAgICAgICAgICAgIGJvdW5kcy5tYXgueSArPSB2ZWxvY2l0eS55O1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICBib3VuZHMubWluLnkgKz0gdmVsb2NpdHkueTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIHRydWUgaWYgdGhlIGJvdW5kcyBjb250YWlucyB0aGUgZ2l2ZW4gcG9pbnQuXG4gICAgICogQG1ldGhvZCBjb250YWluc1xuICAgICAqIEBwYXJhbSB7Ym91bmRzfSBib3VuZHNcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gcG9pbnRcbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIHRoZSBib3VuZHMgY29udGFpbiB0aGUgcG9pbnQsIG90aGVyd2lzZSBmYWxzZVxuICAgICAqL1xuICAgIEJvdW5kcy5jb250YWlucyA9IGZ1bmN0aW9uKGJvdW5kcywgcG9pbnQpIHtcbiAgICAgICAgcmV0dXJuIHBvaW50LnggPj0gYm91bmRzLm1pbi54ICYmIHBvaW50LnggPD0gYm91bmRzLm1heC54IFxuICAgICAgICAgICAgICAgJiYgcG9pbnQueSA+PSBib3VuZHMubWluLnkgJiYgcG9pbnQueSA8PSBib3VuZHMubWF4Lnk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgdHJ1ZSBpZiB0aGUgdHdvIGJvdW5kcyBpbnRlcnNlY3QuXG4gICAgICogQG1ldGhvZCBvdmVybGFwc1xuICAgICAqIEBwYXJhbSB7Ym91bmRzfSBib3VuZHNBXG4gICAgICogQHBhcmFtIHtib3VuZHN9IGJvdW5kc0JcbiAgICAgKiBAcmV0dXJuIHtib29sZWFufSBUcnVlIGlmIHRoZSBib3VuZHMgb3ZlcmxhcCwgb3RoZXJ3aXNlIGZhbHNlXG4gICAgICovXG4gICAgQm91bmRzLm92ZXJsYXBzID0gZnVuY3Rpb24oYm91bmRzQSwgYm91bmRzQikge1xuICAgICAgICByZXR1cm4gKGJvdW5kc0EubWluLnggPD0gYm91bmRzQi5tYXgueCAmJiBib3VuZHNBLm1heC54ID49IGJvdW5kc0IubWluLnhcbiAgICAgICAgICAgICAgICAmJiBib3VuZHNBLm1heC55ID49IGJvdW5kc0IubWluLnkgJiYgYm91bmRzQS5taW4ueSA8PSBib3VuZHNCLm1heC55KTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVHJhbnNsYXRlcyB0aGUgYm91bmRzIGJ5IHRoZSBnaXZlbiB2ZWN0b3IuXG4gICAgICogQG1ldGhvZCB0cmFuc2xhdGVcbiAgICAgKiBAcGFyYW0ge2JvdW5kc30gYm91bmRzXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHZlY3RvclxuICAgICAqL1xuICAgIEJvdW5kcy50cmFuc2xhdGUgPSBmdW5jdGlvbihib3VuZHMsIHZlY3Rvcikge1xuICAgICAgICBib3VuZHMubWluLnggKz0gdmVjdG9yLng7XG4gICAgICAgIGJvdW5kcy5tYXgueCArPSB2ZWN0b3IueDtcbiAgICAgICAgYm91bmRzLm1pbi55ICs9IHZlY3Rvci55O1xuICAgICAgICBib3VuZHMubWF4LnkgKz0gdmVjdG9yLnk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFNoaWZ0cyB0aGUgYm91bmRzIHRvIHRoZSBnaXZlbiBwb3NpdGlvbi5cbiAgICAgKiBAbWV0aG9kIHNoaWZ0XG4gICAgICogQHBhcmFtIHtib3VuZHN9IGJvdW5kc1xuICAgICAqIEBwYXJhbSB7dmVjdG9yfSBwb3NpdGlvblxuICAgICAqL1xuICAgIEJvdW5kcy5zaGlmdCA9IGZ1bmN0aW9uKGJvdW5kcywgcG9zaXRpb24pIHtcbiAgICAgICAgdmFyIGRlbHRhWCA9IGJvdW5kcy5tYXgueCAtIGJvdW5kcy5taW4ueCxcbiAgICAgICAgICAgIGRlbHRhWSA9IGJvdW5kcy5tYXgueSAtIGJvdW5kcy5taW4ueTtcbiAgICAgICAgICAgIFxuICAgICAgICBib3VuZHMubWluLnggPSBwb3NpdGlvbi54O1xuICAgICAgICBib3VuZHMubWF4LnggPSBwb3NpdGlvbi54ICsgZGVsdGFYO1xuICAgICAgICBib3VuZHMubWluLnkgPSBwb3NpdGlvbi55O1xuICAgICAgICBib3VuZHMubWF4LnkgPSBwb3NpdGlvbi55ICsgZGVsdGFZO1xuICAgIH07XG4gICAgXG59KSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L21hdHRlci1qcy9zcmMvZ2VvbWV0cnkvQm91bmRzLmpzXG4vLyBtb2R1bGUgaWQgPSAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 3 */
/* no static exports found */
/* all exports used */
/*!********************************************!*\
  !*** ./~/matter-js/src/geometry/Vector.js ***!
  \********************************************/
/***/ (function(module, exports) {

eval("/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @return {vector} A new vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        return {\n            x: vector.x * cos - vector.y * sin,\n            y: vector.x * sin + vector.y * cos\n        };\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle in radians between the two vectors relative to the x-axis.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [Vector.create(), Vector.create(), \n                    Vector.create(), Vector.create(), \n                    Vector.create(), Vector.create()];\n\n})();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 4 */
/* exports provided: default */
/* exports used: default */
/*!*********************************!*\
  !*** ./src/core/gameManager.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * Game Manager static class\r\n */\nclass GameManager {\n  //#region Static Properties\n\n  /**\r\n   * The active render context\r\n   * @type {renderContext}\r\n   */\n  static get renderContext() {\n    return this._renderContext;\n  }\n\n  /**\r\n   * The active render context\r\n   * @type {renderContext}\r\n   */\n  static set renderContext(value) {\n    this._renderContext = value;\n  }\n\n  static get activeScene() {\n    return this._activeScene;\n  }\n\n  static set activeScene(value) {\n    this._activeScene = value;\n  }\n\n  static get activeProject() {\n    return this._activeProject;\n  }\n\n  static set activeProject(value) {\n    this._activeProject = value;\n  }\n\n  static get activeGame() {\n    return this._activeGame;\n  }\n\n  static set activeGame(value) {\n    this._activeGame = value;\n  }\n\n  static get activeProjectPath() {\n    return this._activeProjectPath;\n  }\n\n  static set activeProjectPath(value) {\n    this._activeProjectPath = value;\n  }\n\n  //#endregion\n\n  //#region Constructors\n\n  constructor() {}\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = GameManager;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvY29yZS9nYW1lTWFuYWdlci5qcz84NjIzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBHYW1lIE1hbmFnZXIgc3RhdGljIGNsYXNzXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lTWFuYWdlciB7XHJcbiAgLy8jcmVnaW9uIFN0YXRpYyBQcm9wZXJ0aWVzXHJcblxyXG4gIC8qKlxyXG4gICAqIFRoZSBhY3RpdmUgcmVuZGVyIGNvbnRleHRcclxuICAgKiBAdHlwZSB7cmVuZGVyQ29udGV4dH1cclxuICAgKi9cclxuICBzdGF0aWMgZ2V0IHJlbmRlckNvbnRleHQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fcmVuZGVyQ29udGV4dDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIFRoZSBhY3RpdmUgcmVuZGVyIGNvbnRleHRcclxuICAgKiBAdHlwZSB7cmVuZGVyQ29udGV4dH1cclxuICAgKi9cclxuICBzdGF0aWMgc2V0IHJlbmRlckNvbnRleHQodmFsdWUpIHtcclxuICAgIHRoaXMuX3JlbmRlckNvbnRleHQgPSB2YWx1ZTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXQgYWN0aXZlU2NlbmUoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fYWN0aXZlU2NlbmU7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgc2V0IGFjdGl2ZVNjZW5lKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9hY3RpdmVTY2VuZSA9IHZhbHVlO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIGdldCBhY3RpdmVQcm9qZWN0KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2FjdGl2ZVByb2plY3Q7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgc2V0IGFjdGl2ZVByb2plY3QodmFsdWUpIHtcclxuICAgIHRoaXMuX2FjdGl2ZVByb2plY3QgPSB2YWx1ZTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBnZXQgYWN0aXZlR2FtZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9hY3RpdmVHYW1lO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIHNldCBhY3RpdmVHYW1lKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9hY3RpdmVHYW1lID0gdmFsdWU7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0IGFjdGl2ZVByb2plY3RQYXRoKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2FjdGl2ZVByb2plY3RQYXRoO1xyXG4gIH1cclxuXHJcbiAgc3RhdGljIHNldCBhY3RpdmVQcm9qZWN0UGF0aCh2YWx1ZSkge1xyXG4gICAgdGhpcy5fYWN0aXZlUHJvamVjdFBhdGggPSB2YWx1ZTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXHJcblxyXG4gIGNvbnN0cnVjdG9yKCkge31cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb3JlL2dhbWVNYW5hZ2VyLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF6REE7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 5 */
/* exports provided: default */
/* exports used: default */
/*!*****************************!*\
  !*** ./src/math/vector2.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__ = __webpack_require__(/*! common/setterDictionary */ 10);\n\n\n__WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__[\"a\" /* SetterDictionary */].addRule(\"vector2\", [\"x\", \"y\"]);\n\n/**\n * Vector2 Class for bi dimensional point references\n */\nclass Vector2 {\n  //#region Constructors\n\n  constructor(x, y) {\n    this.x = 0;\n    this.y = 0;\n\n    this.set(x, y);\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static restore(data) {\n    return new Vector2(data.x, data.y);\n  }\n\n  static add(vectorA, vectorB) {\n    return new Vector2(vectorA.x + vectorB.x, vectorA.y + vectorB.y);\n  }\n\n  static subtract(vectorA, vectorB) {\n    return new Vector2(vectorA.x - vectorB.x, vectorA.y - vectorB.y);\n  }\n\n  static multiply(vectorA, vectorB) {\n    return new Vector2(vectorA.x * vectorB.x, vectorA.y * vectorB.y);\n  }\n\n  /**\n     * Normalizes the given vector, returning it\n     * @param {Vector2} vector\n     * @returns {Vector2} the same vector, normalized\n     */\n  static normalize(vector) {\n    let val = 1.0 / vector.magnitude();\n    vector.x *= val;\n    vector.y *= val;\n\n    return vector;\n  }\n\n  /**\n     * The distance between the points represented by VectorA and VectorB\n     * @param {Vector2} vectorA\n     * @param {Vector2} vectorB\n     * @returns {number} the distance\n     */\n  static distance(vectorA, vectorB) {\n    return Math.sqrt(Vector2.sqrDistance(vectorA, vectorB));\n  }\n\n  /**\n     * The squared distance between the points \n     * represented by VectorA and VectorB\n     * @param {Vector2} vectorA\n     * @param {Vector2} vectorB\n     * @returns {number} the squared distance\n     */\n  static sqrDistance(vectorA, vectorB) {\n    let v1 = vectorA.x - vectorB.x;\n    let v2 = vectorA.y - vectorB.y;\n    return v1 * v1 + v2 * v2;\n  }\n\n  static transformMat4(vec2, mat) {\n    return new Vector2(mat[0] * vec2.x + mat[4] * vec2.y + mat[12], mat[1] * vec2.x + mat[5] * vec2.y + mat[13]);\n  }\n\n  static transformMat3(vec2, mat) {\n    return new Vector2(mat[0] * vec2.x + mat[3] * vec2.y + mat[6], mat[1] * vec2.x + mat[4] * vec2.y + mat[7]);\n  }\n\n  //#endregion\n\n  set(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  objectify() {\n    return {\n      x: this.x,\n      y: this.y\n    };\n  }\n\n  equals(obj) {\n    return obj.x === this.x && obj.y === this.y;\n  }\n\n  unload() {}\n\n  /**\n     * The magnitude, or length, of this vector.\n     * The magnitude is the L2 norm, or \n     * Euclidean distance between the origin and\n     * the point represented by the (x, y) components of this Vector object.\n     * @returns {number} the magnitude\n     */\n  magnitude() {\n    return Math.sqrt(this.sqrMagnitude());\n  }\n\n  /**\n     * The square of the magnitude, or length, of this vector.\n     * See http://docs.unity3d.com/ScriptReference/Vector3-sqrMagnitude.html\n     * @returns {number} the squared magnitude\n     */\n  sqrMagnitude() {\n    return this.x * this.x + this.y * this.y;\n  }\n\n  normalLeft() {\n    return new Vector2(this.y, -1 * this.x);\n  }\n\n  normalRight() {\n    return new Vector2(-1 * this.y, this.x);\n  }\n\n  normalize() {\n    return Vector2.normalize(this);\n  }\n\n  /**\n     * The dot product of this vector with another vector.\n     * @param vector\n     * @returns {number}\n     */\n  dot(vector) {\n    return this.x * vector.x + this.y * vector.y;\n  }\n\n  /**\n     * Calculates the magnitude of the vector \n     * that would result from a regular 3D cross product of the input vectors,\n     * taking their Z values implicitly as 0 \n     * (i.e., treating the 2D space as a plane in the 3D space).\n     * The 3D cross product will be perpendicular to that plane, \n     * and thus have 0 X & Y components\n     * (thus the scalar returned is the Z value of the 3D cross product vector).\n     * @param vector\n     */\n  cross(vector) {\n    return this.x * vector.y - this.y * vector.x;\n  }\n\n  /**\n     * The distance between the point represented by this Vector\n     * object and a point represented by the given Vector object.\n     * @param {Vector2} vector\n     * @returns {number}\n     */\n  distanceTo(vector) {\n    return Vector2.distance(this, vector);\n  }\n\n  multiply(vector) {\n    return Vector2.multiply(this, vector);\n  }\n\n  subtract(vector) {\n    return Vector2.subtract(this, vector);\n  }\n\n  add(vector) {\n    return Vector2.add(this, vector);\n  }\n\n  toString() {\n    return \"{x: \" + this.x + \"; y: \" + this.y + \"}\";\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Vector2;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvbWF0aC92ZWN0b3IyLmpzP2MzZjkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2V0dGVyRGljdGlvbmFyeSB9IGZyb20gXCJjb21tb24vc2V0dGVyRGljdGlvbmFyeVwiO1xuXG5TZXR0ZXJEaWN0aW9uYXJ5LmFkZFJ1bGUoXCJ2ZWN0b3IyXCIsIFtcInhcIiwgXCJ5XCJdKTtcblxuLyoqXG4gKiBWZWN0b3IyIENsYXNzIGZvciBiaSBkaW1lbnNpb25hbCBwb2ludCByZWZlcmVuY2VzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZlY3RvcjIge1xuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXG5cbiAgY29uc3RydWN0b3IoeCwgeSkge1xuICAgIHRoaXMueCA9IDA7XG4gICAgdGhpcy55ID0gMDtcblxuICAgIHRoaXMuc2V0KHgsIHkpO1xuICB9XG5cbiAgLy8jZW5kcmVnaW9uXG5cbiAgLy8jcmVnaW9uIE1ldGhvZHNcblxuICAvLyNyZWdpb24gU3RhdGljIE1ldGhvZHNcblxuICBzdGF0aWMgcmVzdG9yZShkYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyKGRhdGEueCwgZGF0YS55KTtcbiAgfVxuXG4gIHN0YXRpYyBhZGQodmVjdG9yQSwgdmVjdG9yQikge1xuICAgIHJldHVybiBuZXcgVmVjdG9yMih2ZWN0b3JBLnggKyB2ZWN0b3JCLngsIHZlY3RvckEueSArIHZlY3RvckIueSk7XG4gIH1cblxuICBzdGF0aWMgc3VidHJhY3QodmVjdG9yQSwgdmVjdG9yQikge1xuICAgIHJldHVybiBuZXcgVmVjdG9yMih2ZWN0b3JBLnggLSB2ZWN0b3JCLngsIHZlY3RvckEueSAtIHZlY3RvckIueSk7XG4gIH1cblxuICBzdGF0aWMgbXVsdGlwbHkodmVjdG9yQSwgdmVjdG9yQikge1xuICAgIHJldHVybiBuZXcgVmVjdG9yMih2ZWN0b3JBLnggKiB2ZWN0b3JCLngsIHZlY3RvckEueSAqIHZlY3RvckIueSk7XG4gIH1cblxuICAvKipcbiAgICAgKiBOb3JtYWxpemVzIHRoZSBnaXZlbiB2ZWN0b3IsIHJldHVybmluZyBpdFxuICAgICAqIEBwYXJhbSB7VmVjdG9yMn0gdmVjdG9yXG4gICAgICogQHJldHVybnMge1ZlY3RvcjJ9IHRoZSBzYW1lIHZlY3Rvciwgbm9ybWFsaXplZFxuICAgICAqL1xuICBzdGF0aWMgbm9ybWFsaXplKHZlY3Rvcikge1xuICAgIGxldCB2YWwgPSAxLjAgLyB2ZWN0b3IubWFnbml0dWRlKCk7XG4gICAgdmVjdG9yLnggKj0gdmFsO1xuICAgIHZlY3Rvci55ICo9IHZhbDtcblxuICAgIHJldHVybiB2ZWN0b3I7XG4gIH1cblxuICAvKipcbiAgICAgKiBUaGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgcG9pbnRzIHJlcHJlc2VudGVkIGJ5IFZlY3RvckEgYW5kIFZlY3RvckJcbiAgICAgKiBAcGFyYW0ge1ZlY3RvcjJ9IHZlY3RvckFcbiAgICAgKiBAcGFyYW0ge1ZlY3RvcjJ9IHZlY3RvckJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSB0aGUgZGlzdGFuY2VcbiAgICAgKi9cbiAgc3RhdGljIGRpc3RhbmNlKHZlY3RvckEsIHZlY3RvckIpIHtcbiAgICByZXR1cm4gTWF0aC5zcXJ0KFZlY3RvcjIuc3FyRGlzdGFuY2UodmVjdG9yQSwgdmVjdG9yQikpO1xuICB9XG5cbiAgLyoqXG4gICAgICogVGhlIHNxdWFyZWQgZGlzdGFuY2UgYmV0d2VlbiB0aGUgcG9pbnRzIFxuICAgICAqIHJlcHJlc2VudGVkIGJ5IFZlY3RvckEgYW5kIFZlY3RvckJcbiAgICAgKiBAcGFyYW0ge1ZlY3RvcjJ9IHZlY3RvckFcbiAgICAgKiBAcGFyYW0ge1ZlY3RvcjJ9IHZlY3RvckJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSB0aGUgc3F1YXJlZCBkaXN0YW5jZVxuICAgICAqL1xuICBzdGF0aWMgc3FyRGlzdGFuY2UodmVjdG9yQSwgdmVjdG9yQikge1xuICAgIGxldCB2MSA9IHZlY3RvckEueCAtIHZlY3RvckIueDtcbiAgICBsZXQgdjIgPSB2ZWN0b3JBLnkgLSB2ZWN0b3JCLnk7XG4gICAgcmV0dXJuIHYxICogdjEgKyB2MiAqIHYyO1xuICB9XG5cbiAgc3RhdGljIHRyYW5zZm9ybU1hdDQodmVjMiwgbWF0KSB7XG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyKG1hdFswXSAqIHZlYzIueCArIG1hdFs0XSAqIHZlYzIueSArIG1hdFsxMl0sIG1hdFsxXSAqIHZlYzIueCArIG1hdFs1XSAqIHZlYzIueSArIG1hdFsxM10pO1xuICB9XG5cbiAgc3RhdGljIHRyYW5zZm9ybU1hdDModmVjMiwgbWF0KSB7XG4gICAgcmV0dXJuIG5ldyBWZWN0b3IyKG1hdFswXSAqIHZlYzIueCArIG1hdFszXSAqIHZlYzIueSArIG1hdFs2XSwgbWF0WzFdICogdmVjMi54ICsgbWF0WzRdICogdmVjMi55ICsgbWF0WzddKTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxuXG4gIHNldCh4LCB5KSB7XG4gICAgdGhpcy54ID0geCB8fCAwO1xuICAgIHRoaXMueSA9IHkgfHwgMDtcbiAgfVxuXG4gIG9iamVjdGlmeSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgeDogdGhpcy54LFxuICAgICAgeTogdGhpcy55XG4gICAgfTtcbiAgfVxuXG4gIGVxdWFscyhvYmopIHtcbiAgICByZXR1cm4gb2JqLnggPT09IHRoaXMueCAmJiBvYmoueSA9PT0gdGhpcy55O1xuICB9XG5cbiAgdW5sb2FkKCkge31cblxuICAvKipcbiAgICAgKiBUaGUgbWFnbml0dWRlLCBvciBsZW5ndGgsIG9mIHRoaXMgdmVjdG9yLlxuICAgICAqIFRoZSBtYWduaXR1ZGUgaXMgdGhlIEwyIG5vcm0sIG9yIFxuICAgICAqIEV1Y2xpZGVhbiBkaXN0YW5jZSBiZXR3ZWVuIHRoZSBvcmlnaW4gYW5kXG4gICAgICogdGhlIHBvaW50IHJlcHJlc2VudGVkIGJ5IHRoZSAoeCwgeSkgY29tcG9uZW50cyBvZiB0aGlzIFZlY3RvciBvYmplY3QuXG4gICAgICogQHJldHVybnMge251bWJlcn0gdGhlIG1hZ25pdHVkZVxuICAgICAqL1xuICBtYWduaXR1ZGUoKSB7XG4gICAgcmV0dXJuIE1hdGguc3FydCh0aGlzLnNxck1hZ25pdHVkZSgpKTtcbiAgfVxuXG4gIC8qKlxuICAgICAqIFRoZSBzcXVhcmUgb2YgdGhlIG1hZ25pdHVkZSwgb3IgbGVuZ3RoLCBvZiB0aGlzIHZlY3Rvci5cbiAgICAgKiBTZWUgaHR0cDovL2RvY3MudW5pdHkzZC5jb20vU2NyaXB0UmVmZXJlbmNlL1ZlY3RvcjMtc3FyTWFnbml0dWRlLmh0bWxcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfSB0aGUgc3F1YXJlZCBtYWduaXR1ZGVcbiAgICAgKi9cbiAgc3FyTWFnbml0dWRlKCkge1xuICAgIHJldHVybiB0aGlzLnggKiB0aGlzLnggKyB0aGlzLnkgKiB0aGlzLnk7XG4gIH1cblxuICBub3JtYWxMZWZ0KCkge1xuICAgIHJldHVybiBuZXcgVmVjdG9yMih0aGlzLnksIC0xICogdGhpcy54KTtcbiAgfVxuXG4gIG5vcm1hbFJpZ2h0KCkge1xuICAgIHJldHVybiBuZXcgVmVjdG9yMigtMSAqIHRoaXMueSwgdGhpcy54KTtcbiAgfVxuXG4gIG5vcm1hbGl6ZSgpIHtcbiAgICByZXR1cm4gVmVjdG9yMi5ub3JtYWxpemUodGhpcyk7XG4gIH1cblxuICAvKipcbiAgICAgKiBUaGUgZG90IHByb2R1Y3Qgb2YgdGhpcyB2ZWN0b3Igd2l0aCBhbm90aGVyIHZlY3Rvci5cbiAgICAgKiBAcGFyYW0gdmVjdG9yXG4gICAgICogQHJldHVybnMge251bWJlcn1cbiAgICAgKi9cbiAgZG90KHZlY3Rvcikge1xuICAgIHJldHVybiB0aGlzLnggKiB2ZWN0b3IueCArIHRoaXMueSAqIHZlY3Rvci55O1xuICB9XG5cbiAgLyoqXG4gICAgICogQ2FsY3VsYXRlcyB0aGUgbWFnbml0dWRlIG9mIHRoZSB2ZWN0b3IgXG4gICAgICogdGhhdCB3b3VsZCByZXN1bHQgZnJvbSBhIHJlZ3VsYXIgM0QgY3Jvc3MgcHJvZHVjdCBvZiB0aGUgaW5wdXQgdmVjdG9ycyxcbiAgICAgKiB0YWtpbmcgdGhlaXIgWiB2YWx1ZXMgaW1wbGljaXRseSBhcyAwIFxuICAgICAqIChpLmUuLCB0cmVhdGluZyB0aGUgMkQgc3BhY2UgYXMgYSBwbGFuZSBpbiB0aGUgM0Qgc3BhY2UpLlxuICAgICAqIFRoZSAzRCBjcm9zcyBwcm9kdWN0IHdpbGwgYmUgcGVycGVuZGljdWxhciB0byB0aGF0IHBsYW5lLCBcbiAgICAgKiBhbmQgdGh1cyBoYXZlIDAgWCAmIFkgY29tcG9uZW50c1xuICAgICAqICh0aHVzIHRoZSBzY2FsYXIgcmV0dXJuZWQgaXMgdGhlIFogdmFsdWUgb2YgdGhlIDNEIGNyb3NzIHByb2R1Y3QgdmVjdG9yKS5cbiAgICAgKiBAcGFyYW0gdmVjdG9yXG4gICAgICovXG4gIGNyb3NzKHZlY3Rvcikge1xuICAgIHJldHVybiB0aGlzLnggKiB2ZWN0b3IueSAtIHRoaXMueSAqIHZlY3Rvci54O1xuICB9XG5cbiAgLyoqXG4gICAgICogVGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlIHBvaW50IHJlcHJlc2VudGVkIGJ5IHRoaXMgVmVjdG9yXG4gICAgICogb2JqZWN0IGFuZCBhIHBvaW50IHJlcHJlc2VudGVkIGJ5IHRoZSBnaXZlbiBWZWN0b3Igb2JqZWN0LlxuICAgICAqIEBwYXJhbSB7VmVjdG9yMn0gdmVjdG9yXG4gICAgICogQHJldHVybnMge251bWJlcn1cbiAgICAgKi9cbiAgZGlzdGFuY2VUbyh2ZWN0b3IpIHtcbiAgICByZXR1cm4gVmVjdG9yMi5kaXN0YW5jZSh0aGlzLCB2ZWN0b3IpO1xuICB9XG5cbiAgbXVsdGlwbHkodmVjdG9yKSB7XG4gICAgcmV0dXJuIFZlY3RvcjIubXVsdGlwbHkodGhpcywgdmVjdG9yKTtcbiAgfVxuXG4gIHN1YnRyYWN0KHZlY3Rvcikge1xuICAgIHJldHVybiBWZWN0b3IyLnN1YnRyYWN0KHRoaXMsIHZlY3Rvcik7XG4gIH1cblxuICBhZGQodmVjdG9yKSB7XG4gICAgcmV0dXJuIFZlY3RvcjIuYWRkKHRoaXMsIHZlY3Rvcik7XG4gIH1cblxuICB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gXCJ7eDogXCIgKyB0aGlzLnggKyBcIjsgeTogXCIgKyB0aGlzLnkgKyBcIn1cIjtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9tYXRoL3ZlY3RvcjIuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7OztBQVVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWpMQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 6 */
/* no static exports found */
/* all exports used */
/*!*******************************************!*\
  !*** ./~/matter-js/src/body/Composite.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = __webpack_require__(/*! ../core/Events */ 13);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\nvar Body = __webpack_require__(/*! ./Body */ 19);\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite'\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.log('Composite.add: skipped adding a compound body part (you must add its parent instead)', 'warn');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 7 */
/* no static exports found */
/* all exports used */
/*!**********************************************!*\
  !*** ./~/matter-js/src/geometry/Vertices.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = __webpack_require__(/*! ../geometry/Vector */ 3);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        radius = radius || [8];\n\n        if (!radius.length)\n            radius = [radius];\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i--) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 8 */
/* exports provided: AttributeDictionary */
/* exports used: AttributeDictionary */
/*!*******************************************!*\
  !*** ./src/common/attributeDictionary.js ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(/*! ./utils */ 0);\n\n\n// unique key\nconst _attributeDictionarySingleton = Symbol(\"attributeDictionarySingleton\");\n\n/**\r\n * Attribute Dictionary Singleton Class\r\n * Attribute dictionary for property definitions\r\n */\nclass AttributeDictionarySingleton {\n  //#region Constructors\n\n  constructor(attributeDictionarySingletonToken) {\n    if (_attributeDictionarySingleton !== attributeDictionarySingletonToken) {\n      throw new Error(\"Cannot instantiate directly.\");\n    }\n\n    this._rules = {};\n    this._inheritance = {};\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static get instance() {\n    if (!this[_attributeDictionarySingleton]) {\n      this[_attributeDictionarySingleton] = new AttributeDictionarySingleton(_attributeDictionarySingleton);\n    }\n\n    return this[_attributeDictionarySingleton];\n  }\n\n  //#endregion\n\n  /**\r\n     *\r\n     * @param context\r\n     * @param propertyName\r\n     * @param rule\r\n     * @returns {boolean}\r\n     */\n  addRule(context, propertyName, rule) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils__[\"a\" /* isObjectAssigned */])(context)) {\n      context = context.toLowerCase();\n\n      if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils__[\"a\" /* isObjectAssigned */])(this._rules[context])) {\n        this._rules[context] = {};\n      }\n\n      this._rules[context][propertyName] = rule;\n\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\r\n     *\r\n     * @param context\r\n     * @param propertyName\r\n     * @returns {*}\r\n     */\n  getRule(context, propertyName) {\n    context = context.toLowerCase();\n\n    // first check the first order rules:\n    if (this._rules[context] && this._rules[context][propertyName]) {\n      return this._rules[context][propertyName];\n    }\n\n    // maybe the parents have this rule?\n    if (this._inheritance[context]) {\n      // recursively try to get the rule from the parents:\n      for (let i = 0; i < this._inheritance[context].length; ++i) {\n        let result = this.getRule(this._inheritance[context][i], propertyName);\n        if (result != null) {\n          return result;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\r\n     *\r\n     * @param typeName\r\n     * @param parent\r\n     */\n  inherit(context, parent) {\n    context = context.toLowerCase();\n    parent = parent.toLowerCase();\n\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils__[\"a\" /* isObjectAssigned */])(this._inheritance[context])) {\n      this._inheritance[context] = [];\n    }\n\n    this._inheritance[context].push(parent);\n  }\n\n  //#endregion\n}\n\n/**\r\n * Attribute Dictionary alias to Attribute Dictionary Singleton instance\r\n * Attribute dictionary for property definitions\r\n */\nconst AttributeDictionary = AttributeDictionarySingleton.instance;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = AttributeDictionary;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOC5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvY29tbW9uL2F0dHJpYnV0ZURpY3Rpb25hcnkuanM/YTJhNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc09iamVjdEFzc2lnbmVkIH0gZnJvbSBcIi4vdXRpbHNcIjtcclxuXHJcbi8vIHVuaXF1ZSBrZXlcclxuY29uc3QgX2F0dHJpYnV0ZURpY3Rpb25hcnlTaW5nbGV0b24gPSBTeW1ib2woXCJhdHRyaWJ1dGVEaWN0aW9uYXJ5U2luZ2xldG9uXCIpO1xyXG5cclxuLyoqXHJcbiAqIEF0dHJpYnV0ZSBEaWN0aW9uYXJ5IFNpbmdsZXRvbiBDbGFzc1xyXG4gKiBBdHRyaWJ1dGUgZGljdGlvbmFyeSBmb3IgcHJvcGVydHkgZGVmaW5pdGlvbnNcclxuICovXHJcbmNsYXNzIEF0dHJpYnV0ZURpY3Rpb25hcnlTaW5nbGV0b24ge1xyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcclxuXHJcbiAgY29uc3RydWN0b3IoYXR0cmlidXRlRGljdGlvbmFyeVNpbmdsZXRvblRva2VuKSB7XHJcbiAgICBpZiAoX2F0dHJpYnV0ZURpY3Rpb25hcnlTaW5nbGV0b24gIT09IGF0dHJpYnV0ZURpY3Rpb25hcnlTaW5nbGV0b25Ub2tlbikge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgaW5zdGFudGlhdGUgZGlyZWN0bHkuXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX3J1bGVzID0ge307XHJcbiAgICB0aGlzLl9pbmhlcml0YW5jZSA9IHt9O1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBNZXRob2RzXHJcblxyXG4gIC8vI3JlZ2lvbiBTdGF0aWMgTWV0aG9kc1xyXG5cclxuICBzdGF0aWMgZ2V0IGluc3RhbmNlKCkge1xyXG4gICAgaWYgKCF0aGlzW19hdHRyaWJ1dGVEaWN0aW9uYXJ5U2luZ2xldG9uXSkge1xyXG4gICAgICB0aGlzW19hdHRyaWJ1dGVEaWN0aW9uYXJ5U2luZ2xldG9uXSA9IG5ldyBBdHRyaWJ1dGVEaWN0aW9uYXJ5U2luZ2xldG9uKF9hdHRyaWJ1dGVEaWN0aW9uYXJ5U2luZ2xldG9uKTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gdGhpc1tfYXR0cmlidXRlRGljdGlvbmFyeVNpbmdsZXRvbl07XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGNvbnRleHRcclxuICAgICAqIEBwYXJhbSBwcm9wZXJ0eU5hbWVcclxuICAgICAqIEBwYXJhbSBydWxlXHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gIGFkZFJ1bGUoY29udGV4dCwgcHJvcGVydHlOYW1lLCBydWxlKSB7XHJcbiAgICBpZiAoaXNPYmplY3RBc3NpZ25lZChjb250ZXh0KSkge1xyXG4gICAgICBjb250ZXh0ID0gY29udGV4dC50b0xvd2VyQ2FzZSgpO1xyXG5cclxuICAgICAgaWYgKCFpc09iamVjdEFzc2lnbmVkKHRoaXMuX3J1bGVzW2NvbnRleHRdKSkge1xyXG4gICAgICAgIHRoaXMuX3J1bGVzW2NvbnRleHRdID0ge307XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHRoaXMuX3J1bGVzW2NvbnRleHRdW3Byb3BlcnR5TmFtZV0gPSBydWxlO1xyXG5cclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGNvbnRleHRcclxuICAgICAqIEBwYXJhbSBwcm9wZXJ0eU5hbWVcclxuICAgICAqIEByZXR1cm5zIHsqfVxyXG4gICAgICovXHJcbiAgZ2V0UnVsZShjb250ZXh0LCBwcm9wZXJ0eU5hbWUpIHtcclxuICAgIGNvbnRleHQgPSBjb250ZXh0LnRvTG93ZXJDYXNlKCk7XHJcblxyXG4gICAgLy8gZmlyc3QgY2hlY2sgdGhlIGZpcnN0IG9yZGVyIHJ1bGVzOlxyXG4gICAgaWYgKHRoaXMuX3J1bGVzW2NvbnRleHRdICYmIHRoaXMuX3J1bGVzW2NvbnRleHRdW3Byb3BlcnR5TmFtZV0pIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3J1bGVzW2NvbnRleHRdW3Byb3BlcnR5TmFtZV07XHJcbiAgICB9XHJcblxyXG4gICAgLy8gbWF5YmUgdGhlIHBhcmVudHMgaGF2ZSB0aGlzIHJ1bGU/XHJcbiAgICBpZiAodGhpcy5faW5oZXJpdGFuY2VbY29udGV4dF0pIHtcclxuICAgICAgLy8gcmVjdXJzaXZlbHkgdHJ5IHRvIGdldCB0aGUgcnVsZSBmcm9tIHRoZSBwYXJlbnRzOlxyXG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX2luaGVyaXRhbmNlW2NvbnRleHRdLmxlbmd0aDsgKytpKSB7XHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IHRoaXMuZ2V0UnVsZSh0aGlzLl9pbmhlcml0YW5jZVtjb250ZXh0XVtpXSwgcHJvcGVydHlOYW1lKTtcclxuICAgICAgICBpZiAocmVzdWx0ICE9IG51bGwpIHtcclxuICAgICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIG51bGw7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdHlwZU5hbWVcclxuICAgICAqIEBwYXJhbSBwYXJlbnRcclxuICAgICAqL1xyXG4gIGluaGVyaXQoY29udGV4dCwgcGFyZW50KSB7XHJcbiAgICBjb250ZXh0ID0gY29udGV4dC50b0xvd2VyQ2FzZSgpO1xyXG4gICAgcGFyZW50ID0gcGFyZW50LnRvTG93ZXJDYXNlKCk7XHJcblxyXG4gICAgaWYgKCFpc09iamVjdEFzc2lnbmVkKHRoaXMuX2luaGVyaXRhbmNlW2NvbnRleHRdKSkge1xyXG4gICAgICB0aGlzLl9pbmhlcml0YW5jZVtjb250ZXh0XSA9IFtdO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX2luaGVyaXRhbmNlW2NvbnRleHRdLnB1c2gocGFyZW50KTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG59XHJcblxyXG4vKipcclxuICogQXR0cmlidXRlIERpY3Rpb25hcnkgYWxpYXMgdG8gQXR0cmlidXRlIERpY3Rpb25hcnkgU2luZ2xldG9uIGluc3RhbmNlXHJcbiAqIEF0dHJpYnV0ZSBkaWN0aW9uYXJ5IGZvciBwcm9wZXJ0eSBkZWZpbml0aW9uc1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEF0dHJpYnV0ZURpY3Rpb25hcnkgPSBBdHRyaWJ1dGVEaWN0aW9uYXJ5U2luZ2xldG9uLmluc3RhbmNlO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvbW1vbi9hdHRyaWJ1dGVEaWN0aW9uYXJ5LmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQS9GQTtBQUNBO0FBaUdBOzs7O0FBSUE7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 9 */
/* exports provided: default, Debug */
/* exports used: default, Debug */
/*!******************************!*\
  !*** ./src/common/logger.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n *  Logger Class\r\n */\nclass Logger {\n  //#region Constructors\n\n  constructor(params) {\n    params = params || {};\n\n    // private properties:\n    this._context = params.context || \"Default\";\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  log(message) {\n    console.log(this._context + \" | \" + message);\n  }\n\n  warn(message) {\n    console.warn(this._context + \" | \" + message);\n  }\n\n  error(message) {\n    console.error(this._context + \" | \" + message);\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Logger;\n\n\n// General Debug Logger\nconst Debug = new Logger(\"Debug\");\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = Debug;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOS5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy9zcmMvY29tbW9uL2xvZ2dlci5qcz8wNzcwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiAgTG9nZ2VyIENsYXNzXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMb2dnZXIge1xyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcclxuXHJcbiAgY29uc3RydWN0b3IocGFyYW1zKSB7XHJcbiAgICBwYXJhbXMgPSBwYXJhbXMgfHwge307XHJcblxyXG4gICAgLy8gcHJpdmF0ZSBwcm9wZXJ0aWVzOlxyXG4gICAgdGhpcy5fY29udGV4dCA9IHBhcmFtcy5jb250ZXh0IHx8IFwiRGVmYXVsdFwiO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBNZXRob2RzXHJcblxyXG4gIGxvZyhtZXNzYWdlKSB7XHJcbiAgICBjb25zb2xlLmxvZyh0aGlzLl9jb250ZXh0ICsgXCIgfCBcIiArIG1lc3NhZ2UpO1xyXG4gIH1cclxuXHJcbiAgd2FybihtZXNzYWdlKSB7XHJcbiAgICBjb25zb2xlLndhcm4odGhpcy5fY29udGV4dCArIFwiIHwgXCIgKyBtZXNzYWdlKTtcclxuICB9XHJcblxyXG4gIGVycm9yKG1lc3NhZ2UpIHtcclxuICAgIGNvbnNvbGUuZXJyb3IodGhpcy5fY29udGV4dCArIFwiIHwgXCIgKyBtZXNzYWdlKTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG59XHJcblxyXG4vLyBHZW5lcmFsIERlYnVnIExvZ2dlclxyXG5leHBvcnQgY29uc3QgRGVidWcgPSBuZXcgTG9nZ2VyKFwiRGVidWdcIik7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29tbW9uL2xvZ2dlci5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTFCQTtBQUFBO0FBQUE7QUFDQTtBQTRCQTtBQUNBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 10 */
/* exports provided: SetterDictionary */
/* exports used: SetterDictionary */
/*!****************************************!*\
  !*** ./src/common/setterDictionary.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(/*! ./utils */ 0);\n\n\n// unique key\nconst _setterDictionarySingleton = Symbol(\"setterDictionarySingleton\");\n\n/**\r\n * SetterDictionary Singleton Class\r\n * Attribute dictionary for property definitions\r\n */\nclass SetterDictionarySingleton {\n  //#region Constructors\n\n  constructor(setterDictionarySingletonToken) {\n    if (_setterDictionarySingleton !== setterDictionarySingletonToken) {\n      throw new Error(\"Cannot instantiate directly.\");\n    }\n    this._rules = {};\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static get instance() {\n    if (!this[_setterDictionarySingleton]) {\n      this[_setterDictionarySingleton] = new SetterDictionarySingleton(_setterDictionarySingleton);\n    }\n\n    return this[_setterDictionarySingleton];\n  }\n\n  //#endregion\n\n  /**\r\n     *\r\n     * @param context\r\n     * @param rule\r\n     * @returns {boolean}\r\n     */\n  addRule(context, rule) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__utils__[\"a\" /* isObjectAssigned */])(context)) {\n      context = context.toLowerCase();\n      this._rules[context] = rule;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\r\n     *\r\n     * @param typeName\r\n     * @returns {*}\r\n     */\n  getRule(typeName) {\n    typeName = typeName.toLowerCase();\n    if (this._rules[typeName]) {\n      return this._rules[typeName];\n    }\n  }\n\n  //#endregion\n}\n\n/**\r\n * Setter Dictionary alias to Setter Dictionary Singleton instance\r\n * Attribute dictionary for property definitions\r\n */\nconst SetterDictionary = SetterDictionarySingleton.instance;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = SetterDictionary;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1vbi9zZXR0ZXJEaWN0aW9uYXJ5LmpzPzYwZGMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNPYmplY3RBc3NpZ25lZCB9IGZyb20gXCIuL3V0aWxzXCI7XHJcblxyXG4vLyB1bmlxdWUga2V5XHJcbmNvbnN0IF9zZXR0ZXJEaWN0aW9uYXJ5U2luZ2xldG9uID0gU3ltYm9sKFwic2V0dGVyRGljdGlvbmFyeVNpbmdsZXRvblwiKTtcclxuXHJcbi8qKlxyXG4gKiBTZXR0ZXJEaWN0aW9uYXJ5IFNpbmdsZXRvbiBDbGFzc1xyXG4gKiBBdHRyaWJ1dGUgZGljdGlvbmFyeSBmb3IgcHJvcGVydHkgZGVmaW5pdGlvbnNcclxuICovXHJcbmNsYXNzIFNldHRlckRpY3Rpb25hcnlTaW5nbGV0b24ge1xyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcclxuXHJcbiAgY29uc3RydWN0b3Ioc2V0dGVyRGljdGlvbmFyeVNpbmdsZXRvblRva2VuKSB7XHJcbiAgICBpZiAoX3NldHRlckRpY3Rpb25hcnlTaW5nbGV0b24gIT09IHNldHRlckRpY3Rpb25hcnlTaW5nbGV0b25Ub2tlbikge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgaW5zdGFudGlhdGUgZGlyZWN0bHkuXCIpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5fcnVsZXMgPSB7fTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNyZWdpb24gTWV0aG9kc1xyXG5cclxuICAvLyNyZWdpb24gU3RhdGljIE1ldGhvZHNcclxuXHJcbiAgc3RhdGljIGdldCBpbnN0YW5jZSgpIHtcclxuICAgIGlmICghdGhpc1tfc2V0dGVyRGljdGlvbmFyeVNpbmdsZXRvbl0pIHtcclxuICAgICAgdGhpc1tfc2V0dGVyRGljdGlvbmFyeVNpbmdsZXRvbl0gPSBuZXcgU2V0dGVyRGljdGlvbmFyeVNpbmdsZXRvbihfc2V0dGVyRGljdGlvbmFyeVNpbmdsZXRvbik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXNbX3NldHRlckRpY3Rpb25hcnlTaW5nbGV0b25dO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBjb250ZXh0XHJcbiAgICAgKiBAcGFyYW0gcnVsZVxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICAgKi9cclxuICBhZGRSdWxlKGNvbnRleHQsIHJ1bGUpIHtcclxuICAgIGlmIChpc09iamVjdEFzc2lnbmVkKGNvbnRleHQpKSB7XHJcbiAgICAgIGNvbnRleHQgPSBjb250ZXh0LnRvTG93ZXJDYXNlKCk7XHJcbiAgICAgIHRoaXMuX3J1bGVzW2NvbnRleHRdID0gcnVsZTtcclxuICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHR5cGVOYW1lXHJcbiAgICAgKiBAcmV0dXJucyB7Kn1cclxuICAgICAqL1xyXG4gIGdldFJ1bGUodHlwZU5hbWUpIHtcclxuICAgIHR5cGVOYW1lID0gdHlwZU5hbWUudG9Mb3dlckNhc2UoKTtcclxuICAgIGlmICh0aGlzLl9ydWxlc1t0eXBlTmFtZV0pIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX3J1bGVzW3R5cGVOYW1lXTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG59XHJcblxyXG4vKipcclxuICogU2V0dGVyIERpY3Rpb25hcnkgYWxpYXMgdG8gU2V0dGVyIERpY3Rpb25hcnkgU2luZ2xldG9uIGluc3RhbmNlXHJcbiAqIEF0dHJpYnV0ZSBkaWN0aW9uYXJ5IGZvciBwcm9wZXJ0eSBkZWZpbml0aW9uc1xyXG4gKi9cclxuZXhwb3J0IGNvbnN0IFNldHRlckRpY3Rpb25hcnkgPSBTZXR0ZXJEaWN0aW9uYXJ5U2luZ2xldG9uLmluc3RhbmNlO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvbW1vbi9zZXR0ZXJEaWN0aW9uYXJ5LmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdERBO0FBQ0E7QUF3REE7Ozs7QUFJQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 11 */
/* exports provided: default */
/* exports used: default */
/*!***************************!*\
  !*** ./src/core/color.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__ = __webpack_require__(/*! common/setterDictionary */ 10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_math_mathHelper__ = __webpack_require__(/*! math/mathHelper */ 15);\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__[\"a\" /* SetterDictionary */].addRule(\"color\", [\"r\", \"g\", \"b\", \"a\"]);\n\n/**\r\n * Color Class\r\n */\n\nclass Color {\n  //#region Static Properties\n\n  static get CornflowerBlue() {\n    return Color.fromRGB(100.0, 149.0, 237.0);\n  }\n\n  static get Scarlet() {\n    return Color.fromRGB(255.0, 36.0, 0.0);\n  }\n\n  static get Red() {\n    return Color.fromRGB(255.0, 0.0, 0.0);\n  }\n\n  static get Green() {\n    return Color.fromRGB(0.0, 255.0, 0.0);\n  }\n\n  static get Blue() {\n    return Color.fromRGB(0.0, 0.0, 255.0);\n  }\n\n  static get White() {\n    return Color.fromRGB(255.0, 255.0, 255.0);\n  }\n\n  static get Black() {\n    return Color.fromRGB(0.0, 0.0, 0.0);\n  }\n\n  static get Gray() {\n    return Color.fromRGB(80.0, 80.0, 80.0);\n  }\n\n  static get Nephritis() {\n    return Color.fromRGB(39.0, 174.0, 96.0);\n  }\n\n  static get Wisteria() {\n    return Color.fromRGB(142.0, 68.0, 173.0);\n  }\n\n  static get Amethyst() {\n    return Color.fromRGB(155.0, 89.0, 182.0);\n  }\n\n  static get Carrot() {\n    return Color.fromRGB(230, 126, 34);\n  }\n\n  static get Pumpkin() {\n    return Color.fromRGB(211, 84, 0);\n  }\n\n  static get Orange() {\n    return Color.fromRGB(243, 156, 18);\n  }\n\n  static get SunFlower() {\n    return Color.fromRGB(241, 196, 15);\n  }\n\n  static get Alizarin() {\n    return Color.fromRGB(231, 76, 60);\n  }\n\n  //#endregion\n\n  //#region Constructors\n\n  /**\r\n     * Sets Colors' values using either default \r\n     * ([0-1] or RGBA ([0-255] and alpha as [0-1]) format\r\n     * @param {number} r red value ([0-1] vs [0-255])\r\n     * @param {number} g green value ([0-1] vs [0-255])\r\n     * @param {number} b blue value ([0-1] vs [0-255])\r\n     * @param {number} a alpha value ([0-1])\r\n     * @param {boolean} asRGBA \r\n     * whether it should consider the first 3 arguments to be in RGBA format\r\n     * @constructor\r\n     */\n  constructor(r, g, b, a, asRGBA) {\n    // default values (public)\n    this.r = 0.0;\n    this.g = 0.0;\n    this.b = 0.0;\n    this.a = 1.0;\n\n    // set the properties with the given values\n    this.setSpecial(r, g, b, a, asRGBA);\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  /**\r\n     *\r\n     * @param data\r\n     */\n  static restore(data) {\n    return new Color(data.r, data.g, data.b, data.a, false);\n  }\n\n  /**\r\n     * Attempts to create and retrieve a Color object given RGBA values\r\n     * @param {number} red red value [0-255]\r\n     * @param {number} green red value [0-255]\r\n     * @param {number} blue red value [0-255]\r\n     * @param {number} alpha red value [0-1]\r\n     * @returns {Color|null} Color object if valid or null if invalid\r\n     */\n  static fromRGBA(red, green, blue, alpha) {\n    // no need to go further if arguments are invalid\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(red) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(green) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(blue) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(alpha)) {\n      return null;\n    }\n\n    return new Color(red, green, blue, alpha, true);\n  }\n\n  /**\r\n     * Attempts to create and retrieve a Color object given a hexadecimal value\r\n     * @param {string} hex hexadecimal color\r\n     * @returns {Color|null} Color object if valid or null if invalid\r\n     */\n  static fromHex(hex) {\n    // no need to go further if argument is invalid\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"b\" /* isString */])(hex)) {\n      return null;\n    }\n\n    // convert to RGBA\n    let rgba = Color.hexToRGBA(hex);\n\n    if (!rgba) {\n      return null;\n    }\n\n    return Color.fromRGBA(rgba.r, rgba.g, rgba.b, rgba.a);\n  }\n\n  static fromRGB(red, green, blue) {\n    return Color.fromRGBA(red, green, blue, 1.0);\n  }\n\n  static random(alpha) {\n    alpha = !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(alpha) ? 1.0 : alpha;\n    return Color.fromRGBA(Math.random() * 255, Math.random() * 255, Math.random() * 255, alpha);\n  }\n\n  /*\r\n  Based on http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb\r\n  */\n\n  /**\r\n     * Attempts to convert the given \r\n     * red, green and blue values to hexadecimal format\r\n     * @param {number} r red value [0-255]\r\n     * @param {number} g green value [0-255]\r\n     * @param {number} b blue value [0-255]\r\n     * @returns {string} hexadecimal string \r\n     * or an empty string if invalid arguments were provided\r\n     */\n  static rgbToHex(r, g, b) {\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(r) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(g) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(b)) {\n      return \"\";\n    }\n\n    r = __WEBPACK_IMPORTED_MODULE_2_math_mathHelper__[\"a\" /* default */].clamp(r, 0, 255);\n    g = __WEBPACK_IMPORTED_MODULE_2_math_mathHelper__[\"a\" /* default */].clamp(g, 0, 255);\n    b = __WEBPACK_IMPORTED_MODULE_2_math_mathHelper__[\"a\" /* default */].clamp(b, 0, 255);\n\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n  }\n\n  /**\r\n     * Converts the given hexadecimal string to RGBA format \r\n     * ([0-255], [0-255], [0-255], [0-1])\r\n     * @param {string} hex hexadecimal string\r\n     * @returns {{r: number, g: number, b: number, a: number}|null} \r\n     * an object with rgba values or null if invalid\r\n     */\n  static hexToRGBA(hex) {\n    // Expand shorthand form (e.g. \"03F\", \"03F8\" to full form\n    // (e.g. \"0033FF\", \"0033FF88\")\n    let shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d]?)$/i;\n    hex = hex.replace(shorthandRegex, function (m, r, g, b, a) {\n      return r + r + g + g + b + b + a + a;\n    });\n\n    // the last 2 digits (referent to alpha) are optional\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i.exec(hex);\n    return result ? {\n      r: parseInt(result[1], 16),\n      g: parseInt(result[2], 16),\n      b: parseInt(result[3], 16),\n      // convert value to 0-1\n      a: result[4] != \"undefined\" ? parseInt(result[4], 16) / 255 : 1\n    } : null;\n  }\n\n  //#endregion\n\n  //#region Public Methods\n\n  /**\r\n     * Clones the color object, returning a copy of it\r\n     * @returns {Color} copy of the color\r\n     */\n  clone() {\n    return new Color(this.r, this.g, this.b, this.a, false);\n  }\n\n  /**\r\n     * Sets Colors' values using either default \r\n     * ([0-1] or RGBA ([0-255] and alpha as [0-1]) format\r\n     * @param {number} r red value ([0-1] vs [0-255])\r\n     * @param {number} g green value ([0-1] vs [0-255])\r\n     * @param {number} b blue value ([0-1] vs [0-255])\r\n     * @param {number} a alpha value ([0-1])\r\n     * @param {boolean} asRGBA \r\n     * whether it should consider the first 3 arguments to be in RGBA format\r\n     */\n  setSpecial(r, g, b, a, asRGBA) {\n    // default values\n    let currentColor = this;\n    let maxRange = 1.0;\n\n    // change current color and max range if chosen format is set to RGBA\n    if (asRGBA === true) {\n      currentColor = this.toRGBA();\n      maxRange = 255.0;\n    }\n\n    // validate type and fall back to current color when needed\n    r = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(r) ? r : currentColor.r;\n    g = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(g) ? g : currentColor.g;\n    b = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(b) ? b : currentColor.b;\n    a = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(a) ? a : currentColor.a;\n\n    // make sure the values are in the range\n    this.r = __WEBPACK_IMPORTED_MODULE_2_math_mathHelper__[\"a\" /* default */].clamp(r, 0.0, maxRange) / maxRange;\n    this.g = __WEBPACK_IMPORTED_MODULE_2_math_mathHelper__[\"a\" /* default */].clamp(g, 0.0, maxRange) / maxRange;\n    this.b = __WEBPACK_IMPORTED_MODULE_2_math_mathHelper__[\"a\" /* default */].clamp(b, 0.0, maxRange) / maxRange;\n    this.a = __WEBPACK_IMPORTED_MODULE_2_math_mathHelper__[\"a\" /* default */].clamp(a, 0.0, 1.0);\n  }\n\n  /**\r\n     * Sets Colors' values using default format ([0-1], [0-1], [0-1], [0-1])\r\n     * @param {number} r red value [0-1]\r\n     * @param {number} g green value [0-1]\r\n     * @param {number} b blue value [0-1]\r\n     * @param {number} a alpha value [0-1]\r\n     */\n  set(r, g, b, a) {\n    this.setSpecial(r, g, b, a, false);\n  }\n\n  /**\r\n     * Sets Colors' values using a RGBA format \r\n     * ([0-255], [0-255], [0-255], [0-1] format)\r\n     * @param {number} r red value [0-255]\r\n     * @param {number} g green value [0-255]\r\n     * @param {number} b blue value [0-255]\r\n     * @param {number} a alpha value [0-1]\r\n     */\n  setAsRGBA(r, g, b, a) {\n    this.setSpecial(r, g, b, a, true);\n  }\n\n  /**\r\n     * Compares the color object ignoring the alpha color\r\n     * @param {{r: number, g: number, b: number}} obj \r\n     * an object with red, green and blue values\r\n     * @returns {boolean|null} \r\n     * whether the objects are equal or null if an invalid argument was provided\r\n     */\n  equalsIgnoreAlpha(obj) {\n    // validate argument before testing\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(obj.r) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(obj.g) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(obj.b)) {\n      return null;\n    }\n\n    return obj.r === this.r && obj.g === this.g && obj.b === this.b;\n  }\n\n  /**\r\n     * Compares the color object\r\n     * @param {{r: number, g: number, b: number, a: number}} obj \r\n     * an object with red, green, blue and alpha values\r\n     * @returns {boolean|null} \r\n     * whether the objects are equal or null if an invalid argument was provided\r\n     */\n  equals(obj) {\n    // validate argument before testing\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"c\" /* isNumber */])(obj.a)) {\n      return null;\n    }\n\n    return this.equalsIgnoreAlpha(obj) && obj.a === this.a;\n  }\n\n  /**\r\n     *\r\n     */\n  objectify() {\n    return {\n      r: this.r,\n      g: this.g,\n      b: this.b,\n      a: this.a\n    };\n  }\n\n  /**\r\n     * Converts Color format ([0-1], [0-1], [0-1], [0-1]) \r\n     * back to RGBA ([0-255], [0-255], [0-255], [0-1])\r\n     * @returns {{r: number, g: number, b: number, a: number}} \r\n     * object with color in rgba format\r\n     */\n  toRGBA() {\n    return {\n      r: this.r * 255,\n      g: this.g * 255,\n      b: this.b * 255,\n      a: this.a\n    };\n  }\n\n  /**\r\n     * Converts the color to hexadecimal format, returning it\r\n     * @returns {string} hexadecimal string\r\n     */\n  toHex() {\n    // convert back to RGBA format\n    let rgba = this.toRGBA();\n    // convert to Hex\n    return Color.rgbToHex(rgba.r, rgba.g, rgba.b);\n  }\n\n  /**\r\n     * Converts the color to an array, returning it\r\n     * @returns {Array} array containing rgba values [r,g,b,a]\r\n     */\n  toArray() {\n    return [this.r, this.g, this.b, this.a];\n  }\n\n  /**\r\n     * Converts the color to a Float32Array, returning it\r\n     * @returns {Float32Array} array containing rgba values [r,g,b,a]\r\n     */\n  toFloat32Array() {\n    return new Float32Array([this.r, this.g, this.b, this.a]);\n  }\n\n  /**\r\n     *\r\n     */\n  unload() {}\n\n  //#endregion\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Color;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 12 */
/* exports provided: default */
/* exports used: default */
/*!******************************!*\
  !*** ./src/utility/utils.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_core_game__ = __webpack_require__(/*! core/game */ 41);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_core_gameScene__ = __webpack_require__(/*! core/gameScene */ 42);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_core_sprite__ = __webpack_require__(/*! core/sprite */ 45);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_core_texture2D__ = __webpack_require__(/*! core/texture2D */ 24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_core_color__ = __webpack_require__(/*! core/color */ 11);\n\n\n\n\n\n\n/**\n * Utility class\n */\nclass Utils {\n  //#region Static Properties\n\n  /**\n     *\n     * @type {boolean}\n     * @private\n     */\n  static isGame(obj) {\n    return obj instanceof __WEBPACK_IMPORTED_MODULE_0_core_game__[\"a\" /* default */];\n  }\n\n  /**\n     * \n     * @param {*} obj \n     */\n  static isGameScene(obj) {\n    return obj instanceof __WEBPACK_IMPORTED_MODULE_1_core_gameScene__[\"a\" /* default */];\n  }\n\n  /**\n  * Validates if the given object is a sprite\n  * @param obj\n  * @returns {boolean}\n  */\n  static isSprite(obj) {\n    return obj instanceof __WEBPACK_IMPORTED_MODULE_2_core_sprite__[\"a\" /* default */];\n  }\n\n  /**\n  * Validates if the given object is a texture2d\n  * @param obj\n  * @returns {boolean}\n  */\n  static isTexture2D(obj) {\n    return obj instanceof __WEBPACK_IMPORTED_MODULE_3_core_texture2D__[\"a\" /* default */];\n  }\n\n  /**\n  * Validates if the given object is a Color\n  * @param obj\n  * @returns {boolean}\n  */\n  static isColor(obj) {\n    return obj instanceof __WEBPACK_IMPORTED_MODULE_4_core_color__[\"a\" /* default */];\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Utils;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3V0aWxpdHkvdXRpbHMuanM/Njc2NyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgR2FtZSBmcm9tIFwiY29yZS9nYW1lXCI7XG5pbXBvcnQgR2FtZVNjZW5lIGZyb20gXCJjb3JlL2dhbWVTY2VuZVwiO1xuaW1wb3J0IFNwcml0ZSBmcm9tIFwiY29yZS9zcHJpdGVcIjtcbmltcG9ydCBUZXh0dXJlMkQgZnJvbSBcImNvcmUvdGV4dHVyZTJEXCI7XG5pbXBvcnQgQ29sb3IgZnJvbSBcImNvcmUvY29sb3JcIjtcblxuLyoqXG4gKiBVdGlsaXR5IGNsYXNzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFV0aWxzIHtcbiAgLy8jcmVnaW9uIFN0YXRpYyBQcm9wZXJ0aWVzXG5cbiAgLyoqXG4gICAgICpcbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqL1xuICBzdGF0aWMgaXNHYW1lKG9iaikge1xuICAgIHJldHVybiBvYmogaW5zdGFuY2VvZiBHYW1lO1xuICB9XG5cbiAgLyoqXG4gICAgICogXG4gICAgICogQHBhcmFtIHsqfSBvYmogXG4gICAgICovXG4gIHN0YXRpYyBpc0dhbWVTY2VuZShvYmopIHtcbiAgICByZXR1cm4gb2JqIGluc3RhbmNlb2YgR2FtZVNjZW5lO1xuICB9XG5cbiAgLyoqXG4gKiBWYWxpZGF0ZXMgaWYgdGhlIGdpdmVuIG9iamVjdCBpcyBhIHNwcml0ZVxuICogQHBhcmFtIG9ialxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbiAgc3RhdGljIGlzU3ByaXRlKG9iaikge1xuICAgIHJldHVybiBvYmogaW5zdGFuY2VvZiBTcHJpdGU7XG4gIH1cblxuICAvKipcbiAqIFZhbGlkYXRlcyBpZiB0aGUgZ2l2ZW4gb2JqZWN0IGlzIGEgdGV4dHVyZTJkXG4gKiBAcGFyYW0gb2JqXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuICBzdGF0aWMgaXNUZXh0dXJlMkQob2JqKSB7XG4gICAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIFRleHR1cmUyRDtcbiAgfVxuXG4gIC8qKlxuICogVmFsaWRhdGVzIGlmIHRoZSBnaXZlbiBvYmplY3QgaXMgYSBDb2xvclxuICogQHBhcmFtIG9ialxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cbiAgc3RhdGljIGlzQ29sb3Iob2JqKSB7XG4gICAgcmV0dXJuIG9iaiBpbnN0YW5jZW9mIENvbG9yO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3V0aWxpdHkvdXRpbHMuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQTdDQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 13 */
/* no static exports found */
/* all exports used */
/*!****************************************!*\
  !*** ./~/matter-js/src/core/Events.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = __webpack_require__(/*! ./Common */ 1);\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hdHRlci1qcy9zcmMvY29yZS9FdmVudHMuanM/NTM1ZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogVGhlIGBNYXR0ZXIuRXZlbnRzYCBtb2R1bGUgY29udGFpbnMgbWV0aG9kcyB0byBmaXJlIGFuZCBsaXN0ZW4gdG8gZXZlbnRzIG9uIG90aGVyIG9iamVjdHMuXG4qXG4qIFNlZSB0aGUgaW5jbHVkZWQgdXNhZ2UgW2V4YW1wbGVzXShodHRwczovL2dpdGh1Yi5jb20vbGlhYnJ1L21hdHRlci1qcy90cmVlL21hc3Rlci9leGFtcGxlcykuXG4qXG4qIEBjbGFzcyBFdmVudHNcbiovXG5cbnZhciBFdmVudHMgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBFdmVudHM7XG5cbnZhciBDb21tb24gPSByZXF1aXJlKCcuL0NvbW1vbicpO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBTdWJzY3JpYmVzIGEgY2FsbGJhY2sgZnVuY3Rpb24gdG8gdGhlIGdpdmVuIG9iamVjdCdzIGBldmVudE5hbWVgLlxuICAgICAqIEBtZXRob2Qgb25cbiAgICAgKiBAcGFyYW0ge30gb2JqZWN0XG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50TmFtZXNcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAqL1xuICAgIEV2ZW50cy5vbiA9IGZ1bmN0aW9uKG9iamVjdCwgZXZlbnROYW1lcywgY2FsbGJhY2spIHtcbiAgICAgICAgdmFyIG5hbWVzID0gZXZlbnROYW1lcy5zcGxpdCgnICcpLFxuICAgICAgICAgICAgbmFtZTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5hbWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBuYW1lID0gbmFtZXNbaV07XG4gICAgICAgICAgICBvYmplY3QuZXZlbnRzID0gb2JqZWN0LmV2ZW50cyB8fCB7fTtcbiAgICAgICAgICAgIG9iamVjdC5ldmVudHNbbmFtZV0gPSBvYmplY3QuZXZlbnRzW25hbWVdIHx8IFtdO1xuICAgICAgICAgICAgb2JqZWN0LmV2ZW50c1tuYW1lXS5wdXNoKGNhbGxiYWNrKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBjYWxsYmFjaztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmVtb3ZlcyB0aGUgZ2l2ZW4gZXZlbnQgY2FsbGJhY2suIElmIG5vIGNhbGxiYWNrLCBjbGVhcnMgYWxsIGNhbGxiYWNrcyBpbiBgZXZlbnROYW1lc2AuIElmIG5vIGBldmVudE5hbWVzYCwgY2xlYXJzIGFsbCBldmVudHMuXG4gICAgICogQG1ldGhvZCBvZmZcbiAgICAgKiBAcGFyYW0ge30gb2JqZWN0XG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGV2ZW50TmFtZXNcbiAgICAgKiBAcGFyYW0ge2Z1bmN0aW9ufSBjYWxsYmFja1xuICAgICAqL1xuICAgIEV2ZW50cy5vZmYgPSBmdW5jdGlvbihvYmplY3QsIGV2ZW50TmFtZXMsIGNhbGxiYWNrKSB7XG4gICAgICAgIGlmICghZXZlbnROYW1lcykge1xuICAgICAgICAgICAgb2JqZWN0LmV2ZW50cyA9IHt9O1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gaGFuZGxlIEV2ZW50cy5vZmYob2JqZWN0LCBjYWxsYmFjaylcbiAgICAgICAgaWYgKHR5cGVvZiBldmVudE5hbWVzID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjYWxsYmFjayA9IGV2ZW50TmFtZXM7XG4gICAgICAgICAgICBldmVudE5hbWVzID0gQ29tbW9uLmtleXMob2JqZWN0LmV2ZW50cykuam9pbignICcpO1xuICAgICAgICB9XG5cbiAgICAgICAgdmFyIG5hbWVzID0gZXZlbnROYW1lcy5zcGxpdCgnICcpO1xuXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBjYWxsYmFja3MgPSBvYmplY3QuZXZlbnRzW25hbWVzW2ldXSxcbiAgICAgICAgICAgICAgICBuZXdDYWxsYmFja3MgPSBbXTtcblxuICAgICAgICAgICAgaWYgKGNhbGxiYWNrICYmIGNhbGxiYWNrcykge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgY2FsbGJhY2tzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjYWxsYmFja3Nbal0gIT09IGNhbGxiYWNrKVxuICAgICAgICAgICAgICAgICAgICAgICAgbmV3Q2FsbGJhY2tzLnB1c2goY2FsbGJhY2tzW2pdKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIG9iamVjdC5ldmVudHNbbmFtZXNbaV1dID0gbmV3Q2FsbGJhY2tzO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEZpcmVzIGFsbCB0aGUgY2FsbGJhY2tzIHN1YnNjcmliZWQgdG8gdGhlIGdpdmVuIG9iamVjdCdzIGBldmVudE5hbWVgLCBpbiB0aGUgb3JkZXIgdGhleSBzdWJzY3JpYmVkLCBpZiBhbnkuXG4gICAgICogQG1ldGhvZCB0cmlnZ2VyXG4gICAgICogQHBhcmFtIHt9IG9iamVjdFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudE5hbWVzXG4gICAgICogQHBhcmFtIHt9IGV2ZW50XG4gICAgICovXG4gICAgRXZlbnRzLnRyaWdnZXIgPSBmdW5jdGlvbihvYmplY3QsIGV2ZW50TmFtZXMsIGV2ZW50KSB7XG4gICAgICAgIHZhciBuYW1lcyxcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBjYWxsYmFja3MsXG4gICAgICAgICAgICBldmVudENsb25lO1xuXG4gICAgICAgIGlmIChvYmplY3QuZXZlbnRzKSB7XG4gICAgICAgICAgICBpZiAoIWV2ZW50KVxuICAgICAgICAgICAgICAgIGV2ZW50ID0ge307XG5cbiAgICAgICAgICAgIG5hbWVzID0gZXZlbnROYW1lcy5zcGxpdCgnICcpO1xuXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG5hbWVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgbmFtZSA9IG5hbWVzW2ldO1xuICAgICAgICAgICAgICAgIGNhbGxiYWNrcyA9IG9iamVjdC5ldmVudHNbbmFtZV07XG5cbiAgICAgICAgICAgICAgICBpZiAoY2FsbGJhY2tzKSB7XG4gICAgICAgICAgICAgICAgICAgIGV2ZW50Q2xvbmUgPSBDb21tb24uY2xvbmUoZXZlbnQsIGZhbHNlKTtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRDbG9uZS5uYW1lID0gbmFtZTtcbiAgICAgICAgICAgICAgICAgICAgZXZlbnRDbG9uZS5zb3VyY2UgPSBvYmplY3Q7XG5cbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBjYWxsYmFja3MubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrc1tqXS5hcHBseShvYmplY3QsIFtldmVudENsb25lXSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuXG59KSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L21hdHRlci1qcy9zcmMvY29yZS9FdmVudHMuanNcbi8vIG1vZHVsZSBpZCA9IDEzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 14 */
/* exports provided: ContentLoader */
/* exports used: ContentLoader */
/*!*************************************!*\
  !*** ./src/common/contentLoader.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_core_gameManager__ = __webpack_require__(/*! core/gameManager */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_fileContext__ = __webpack_require__(/*! common/fileContext */ 38);\n\n\n\n// unique key\nconst _contentLoaderSingleton = Symbol(\"contentLoaderSingleton\");\n\n/**\n * Content Loader Singleton Class\n */\nclass ContentLoaderSingleton {\n  //#region Constructors\n\n  constructor(contentLoaderSingletonToken) {\n    if (_contentLoaderSingleton !== contentLoaderSingletonToken) {\n      throw new Error(\"Cannot instantiate directly.\");\n    }\n\n    // Cached files\n    this._fileLoaded = {};\n    this._fileAlias = {};\n\n    // Cached images\n    this._imgLoaded = {};\n    this._imgAlias = {};\n\n    // Cached audio\n    this._audioLoaded = {};\n    this._audioAlias = {};\n\n    this._loadingPaths = new Set();\n    this._loadingAliases = new Set();\n  }\n\n  //#endregion\n\n  //#region Public Methods\n\n  //#region Static Methods\n\n  static get instance() {\n    if (!this[_contentLoaderSingleton]) {\n      this[_contentLoaderSingleton] = new ContentLoaderSingleton(_contentLoaderSingleton);\n    }\n\n    return this[_contentLoaderSingleton];\n  }\n\n  //#endregion\n\n  /**\n     * Clears all loaded assets from the content loader\n     */\n  clear() {\n    this._imgLoaded = {};\n    this._imgAlias = {};\n    this._audioLoaded = {};\n    this._audioAlias = {};\n    this._fileLoaded = {};\n    this._fileAlias = {};\n  }\n\n  isImageAliasCached(alias) {\n    return this._imgAlias.hasOwnProperty(alias);\n  }\n\n  isFileAliasCached(alias) {\n    return this._fileAlias.hasOwnProperty(alias);\n  }\n\n  isAudioAliasCached(alias) {\n    return this._audioAlias.hasOwnProperty(alias);\n  }\n\n  isImageCached(path) {\n    return this._imgLoaded.hasOwnProperty(path);\n  }\n\n  isFileCached(path) {\n    return this._fileLoaded.hasOwnProperty(path);\n  }\n\n  isAudioCached(path) {\n    return this._audioLoaded.hasOwnProperty(path);\n  }\n\n  /**\n     * Returns an image loaded by the given alias (if exists)\n     * @param alias\n     */\n  getImage(alias) {\n    if (this.isImageAliasCached(alias)) {\n      return this._imgLoaded[this._imgAlias[alias]];\n    }\n  }\n\n  getSourcePath(alias) {\n    if (this.isImageAliasCached(alias)) {\n      return this._imgAlias[alias];\n    }\n  }\n\n  /**\n     * Returns a file loaded by the given alias (if exists)\n     * @param alias\n     */\n  getFile(alias) {\n    if (this.isFileAliasCached(alias)) {\n      return this._fileLoaded[this._fileAlias[alias]];\n    }\n  }\n\n  /**\n     * Returns an audio loaded by the given alias (if exists)\n     * @param alias\n     */\n  getAudio(alias) {\n    if (this.isAudioAliasCached(alias)) {\n      return this._audioLoaded[this._audioAlias[alias]];\n    }\n  }\n\n  _filterByPathAndAlias(arr) {\n    const uniqueFlags = new Set();\n    const uniqueObj = arr.filter(obj => {\n      // if obj is invalid or path or alias is already flagged\n      if (typeof obj.path != \"string\" || typeof obj.alias != \"string\" || uniqueFlags.has(obj.path) || uniqueFlags.has(obj.alias)) {\n        return false;\n      }\n      uniqueFlags.add(obj.path);\n      uniqueFlags.add(obj.alias);\n      return true;\n    });\n\n    uniqueFlags.clear();\n\n    return uniqueObj;\n  }\n\n  _isLoading(path, alias) {\n    if (this._loadingPaths.has(path)) {\n      console.warn(\"Already loading \" + path + \"... Discarding.\");\n      return true;\n    }\n\n    if (this._loadingAliases.has(alias)) {\n      console.warn(\"Alias \" + alias + \" is already in use. Discarding \" + path + \".\");\n      return true;\n    }\n\n    return false;\n  }\n\n  _setupLoadingQueue(arr) {\n    if (!Array.isArray(arr)) {\n      return [];\n    }\n\n    // filter by path and alias; 1st layer of security\n    const filteredQueue = this._filterByPathAndAlias(arr);\n\n    // if some file was filtered out, warn\n    if (arr.length != filteredQueue.length) {\n      console.warn(\"Some files have been filtered out from loading due to invalid/duplicate paths or aliases.\");\n    }\n\n    return filteredQueue;\n  }\n\n  async loadAll(assets) {\n    // prepare assets\n    assets = assets || {};\n    assets.images = assets.images || [];\n    assets.files = assets.files || [];\n    assets.audios = assets.audios || [];\n\n    const imagesPromise = this.loadAllImages(assets.images);\n    const filesPromise = this.loadAllFiles(assets.files);\n    const audiosPromise = this.loadAllAudios(assets.audios);\n\n    return await Promise.all([imagesPromise, filesPromise, audiosPromise]);\n  }\n\n  async loadAllImages(images) {\n    images = this._setupLoadingQueue(images);\n\n    return await Promise.all(images.map(async image => {\n      return await this.loadImage(image.path, image.alias);\n    }));\n  }\n\n  async loadAllFiles(files) {\n    files = this._setupLoadingQueue(files);\n\n    return await Promise.all(files.map(async file => {\n      return await this.loadFile(file.path, file.alias);\n    }));\n  }\n\n  async loadAllAudios(audios) {\n    audios = this._setupLoadingQueue(audios);\n\n    return await Promise.all(audios.map(async audio => {\n      return await this.loadAudio(audio.path, audio.alias);\n    }));\n  }\n\n  async loadImage(path, alias) {\n    [path, alias] = this._assertPathAliasValidity(path, alias);\n\n    // enrich path if possible\n    const newPath = this._enrichRelativePath(path);\n\n    // no need to go further if already in cache\n    if (this.isImageCached(newPath)) {\n      console.warn(\"Image \" + newPath + \" is already in cache. Reusing.\");\n      return this._imgLoaded[newPath];\n    }\n\n    // otherwise, try to load it\n    const image = await this._tryToLoadImage(newPath, alias);\n\n    // make sure image was loaded correctly\n    if (image == null) {\n      return false;\n    }\n\n    // otherwise, cache image based on the determined path and alias\n    this._cacheImage(newPath, alias, image);\n\n    return image;\n  }\n\n  /**\n   * loads an audio file from a specified path into memory\n   * @param path\n   * @param alias\n   * @returns {*}\n   */\n  async loadAudio(path, alias) {\n    [path, alias] = this._assertPathAliasValidity(path, alias);\n\n    // enrich path if possible\n    const newPath = this._enrichRelativePath(path);\n\n    // no need to go further if already in cache\n    if (this.isAudioCached(newPath)) {\n      console.warn(\"Audio \" + newPath + \" is already in cache. Reusing.\");\n      return this._audioLoaded[newPath];\n    }\n\n    // otherwise, try to load it\n    const audio = await this._tryToLoadAudio(newPath, alias);\n\n    // make sure audio was loaded correctly\n    if (audio == null) {\n      return false;\n    }\n\n    // and cache audio based on the determined path and alias\n    this._cacheAudio(newPath, alias, audio);\n\n    return audio;\n  }\n\n  /**\n     * loads a file from a specified path into memory\n     * @param path\n     * @param alias\n     * @returns {*}\n     */\n  async loadFile(path, alias) {\n    [path, alias] = this._assertPathAliasValidity(path, alias);\n\n    // enrich path if possible\n    const newPath = this._enrichRelativePath(path);\n\n    // no need to go further if already in cache\n    if (this.isFileCached(newPath)) {\n      console.warn(\"File \" + newPath + \" is already in cache. Reusing.\");\n      return this._fileLoaded[newPath];\n    }\n\n    // otherwise, try to load it\n    const fileContext = await this._tryToLoadFile(newPath, alias);\n\n    // make sure file was loaded correctly\n    if (fileContext == null) {\n      return false;\n    }\n\n    // and cache file based on the determined path and alias\n    this._cacheFile(newPath, alias, fileContext);\n\n    return fileContext;\n  }\n\n  //#endregion\n\n  //#region Private Methods\n\n  /**\n   *\n   * @param path\n   * @returns {*}\n   * @private\n   */\n  _enrichRelativePath(path) {\n    // is this a relative path?\n    if (__WEBPACK_IMPORTED_MODULE_0_core_gameManager__[\"a\" /* default */].activeProjectPath && path.indexOf(__WEBPACK_IMPORTED_MODULE_0_core_gameManager__[\"a\" /* default */].activeProjectPath) < 0) {\n      path = __WEBPACK_IMPORTED_MODULE_0_core_gameManager__[\"a\" /* default */].activeProjectPath + path;\n    }\n\n    return path;\n  }\n\n  /**\n   * Asserts that the given path and alias are valid\n   * returning valid versions\n   * @param {string} path \n   * @param {string} alias \n   * @returns {[string,string]} valid versions of the given path and alias\n   */\n  _assertPathAliasValidity(path, alias) {\n    const newPath = typeof path != \"string\" ? \"\" : path;\n    // fallback to path if invalid\n    const newAlias = typeof alias != \"string\" ? newPath : alias;\n\n    return [newPath, newAlias];\n  }\n\n  /**\n   * Caches the given image using the given path and alias as keys\n   * @param {string} path \n   * @param {string} alias \n   * @param {HTMLImageElement} image \n   */\n  _cacheImage(path, alias, image) {\n    // cache the loaded image:\n    this._imgLoaded[path] = image;\n    this._imgAlias[alias] = path;\n  }\n\n  /**\n   * Caches the given audio using the given path and alias as keys\n   * @param {string} path \n   * @param {string} alias \n   * @param {HTMLAudioElement} audio \n   */\n  _cacheAudio(path, alias, audio) {\n    // cache the loaded audio:\n    this._audioLoaded[path] = audio;\n    this._audioAlias[alias] = path;\n  }\n\n  /**\n   * Caches the given file using the given path and alias as keys\n   * @param {string} path \n   * @param {string} alias \n   * @param {FileContext} file \n   */\n  _cacheFile(path, alias, file) {\n    // cache the loaded file:\n    this._fileLoaded[path] = file;\n    this._fileAlias[alias] = path;\n  }\n\n  /**\n   * Attempts to load an image, returning it if successful\n   * @param {string} path \n   * @returns {Promise<HTMLImageElement>|null}\n   */\n  async _tryToLoadImage(path, alias) {\n    // discard if loading the same image or alias\n    // or if image is already cached\n    // 2nd (and last) layer of security\n    if (this._isLoading(path, alias) || this.isImageAliasCached(alias) || this.isImageCached(path)) {\n      return null;\n    }\n\n    this._loadingPaths.add(path);\n    this._loadingAliases.add(alias);\n\n    try {\n      // try to load\n      return await this._loadImage(path);\n    } catch (error) {\n      // log and return invalid\n      console.error(error.name, error.message);\n      return null;\n    } finally {\n      // make sure loading is updated either way\n      this._loadingPaths.delete(path);\n      this._loadingAliases.delete(alias);\n    }\n  }\n\n  /**\n   * Attempts to load an audio file, returning it if successful\n   * @param {string} path \n   * @returns {Promise<HTMLAudioElement>}\n   */\n  async _tryToLoadAudio(path, alias) {\n    // discard if loading the same audio or alias\n    // or if audio is already cached\n    // 2nd (and last) layer of security\n    if (this._isLoading(path, alias) || this.isAudioAliasCached(alias) || this.isAudioCached(path)) {\n      return null;\n    }\n\n    this._loadingPaths.add(path);\n    this._loadingAliases.add(alias);\n\n    try {\n      // try to load\n      return await this._loadAudio(path);\n    } catch (error) {\n      // log and return invalid\n      console.error(error);\n      return null;\n    } finally {\n      // make sure loading is updated either way\n      this._loadingPaths.delete(path);\n      this._loadingAliases.delete(alias);\n    }\n  }\n\n  /**\n   * Attempts to load a file, returning it if successful\n   * @param {string} path \n   * @returns {Promise<FileContext>}\n   */\n  async _tryToLoadFile(path, alias) {\n    // discard if loading the same audio or alias\n    // or if file is already cached\n    // 2nd (and last) layer of security\n    if (this._isLoading(path, alias) || this.isFileAliasCached(alias) || this.isFileCached(path)) {\n      return null;\n    }\n\n    this._loadingPaths.add(path);\n    this._loadingAliases.add(alias);\n\n    try {\n      // try to load\n      return await this._loadFile(path);\n    } catch (error) {\n      // log and return invalid\n      console.error(error);\n      return null;\n    } finally {\n      // make sure loading is updated either way\n      this._loadingPaths.delete(path);\n      this._loadingAliases.delete(alias);\n    }\n  }\n\n  /**\n   * Attempts to load the image from the given path\n   * @param {string} path \n   */\n  _loadImage(path) {\n    return new Promise((resolve, reject) => {\n      let image = new Image();\n      image.src = path;\n      image.onload = () => resolve(image);\n      image.onerror = () => reject(new Error(\"Image is not defined. Unable to load it.\"));\n    });\n  }\n\n  _loadFile(path) {\n    return new Promise((resolve, reject) => {\n      let rawFile = new XMLHttpRequest();\n      rawFile.open(\"GET\", path, true);\n      rawFile.onreadystatechange = () => {\n        if (rawFile.readyState === 4 && rawFile.status === 200) {\n          const fileContext = __WEBPACK_IMPORTED_MODULE_1_common_fileContext__[\"a\" /* default */].fromXHR(rawFile);\n          resolve(fileContext);\n        } else if (rawFile.readyState === 4 && rawFile.status != 200) {\n          reject(new Error(\"Could not load file.\"));\n        }\n      };\n      rawFile.send(null);\n    });\n  }\n\n  _loadAudio(path) {\n    return new Promise((resolve, reject) => {\n      let audio = new Audio();\n      audio.src = path;\n      audio.oncanplaythrough = () => resolve(audio);\n      audio.onerror = () => reject(new Error(\"Audio is not defined. Unable to load it.\"));\n    });\n  }\n\n  //#endregion\n}\n\n/**\n * Content Loader alias to Content Loader Singleton instance\n */\nconst ContentLoader = ContentLoaderSingleton.instance;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ContentLoader;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1vbi9jb250ZW50TG9hZGVyLmpzP2M1NzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEdhbWVNYW5hZ2VyIGZyb20gXCJjb3JlL2dhbWVNYW5hZ2VyXCI7XG5pbXBvcnQgRmlsZUNvbnRleHQgZnJvbSBcImNvbW1vbi9maWxlQ29udGV4dFwiO1xuXG4vLyB1bmlxdWUga2V5XG5jb25zdCBfY29udGVudExvYWRlclNpbmdsZXRvbiA9IFN5bWJvbChcImNvbnRlbnRMb2FkZXJTaW5nbGV0b25cIik7XG5cbi8qKlxuICogQ29udGVudCBMb2FkZXIgU2luZ2xldG9uIENsYXNzXG4gKi9cbmNsYXNzIENvbnRlbnRMb2FkZXJTaW5nbGV0b24ge1xuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXG5cbiAgY29uc3RydWN0b3IoY29udGVudExvYWRlclNpbmdsZXRvblRva2VuKSB7XG4gICAgaWYgKF9jb250ZW50TG9hZGVyU2luZ2xldG9uICE9PSBjb250ZW50TG9hZGVyU2luZ2xldG9uVG9rZW4pIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBpbnN0YW50aWF0ZSBkaXJlY3RseS5cIik7XG4gICAgfVxuXG4gICAgLy8gQ2FjaGVkIGZpbGVzXG4gICAgdGhpcy5fZmlsZUxvYWRlZCA9IHt9O1xuICAgIHRoaXMuX2ZpbGVBbGlhcyA9IHt9O1xuXG4gICAgLy8gQ2FjaGVkIGltYWdlc1xuICAgIHRoaXMuX2ltZ0xvYWRlZCA9IHt9O1xuICAgIHRoaXMuX2ltZ0FsaWFzID0ge307XG5cbiAgICAvLyBDYWNoZWQgYXVkaW9cbiAgICB0aGlzLl9hdWRpb0xvYWRlZCA9IHt9O1xuICAgIHRoaXMuX2F1ZGlvQWxpYXMgPSB7fTtcblxuICAgIHRoaXMuX2xvYWRpbmdQYXRocyA9IG5ldyBTZXQoKTtcbiAgICB0aGlzLl9sb2FkaW5nQWxpYXNlcyA9IG5ldyBTZXQoKTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxuXG4gIC8vI3JlZ2lvbiBQdWJsaWMgTWV0aG9kc1xuXG4gIC8vI3JlZ2lvbiBTdGF0aWMgTWV0aG9kc1xuXG4gIHN0YXRpYyBnZXQgaW5zdGFuY2UoKSB7XG4gICAgaWYgKCF0aGlzW19jb250ZW50TG9hZGVyU2luZ2xldG9uXSkge1xuICAgICAgdGhpc1tfY29udGVudExvYWRlclNpbmdsZXRvbl0gPSBuZXcgQ29udGVudExvYWRlclNpbmdsZXRvbihfY29udGVudExvYWRlclNpbmdsZXRvbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXNbX2NvbnRlbnRMb2FkZXJTaW5nbGV0b25dO1xuICB9XG5cbiAgLy8jZW5kcmVnaW9uXG5cbiAgLyoqXG4gICAgICogQ2xlYXJzIGFsbCBsb2FkZWQgYXNzZXRzIGZyb20gdGhlIGNvbnRlbnQgbG9hZGVyXG4gICAgICovXG4gIGNsZWFyKCkge1xuICAgIHRoaXMuX2ltZ0xvYWRlZCA9IHt9O1xuICAgIHRoaXMuX2ltZ0FsaWFzID0ge307XG4gICAgdGhpcy5fYXVkaW9Mb2FkZWQgPSB7fTtcbiAgICB0aGlzLl9hdWRpb0FsaWFzID0ge307XG4gICAgdGhpcy5fZmlsZUxvYWRlZCA9IHt9O1xuICAgIHRoaXMuX2ZpbGVBbGlhcyA9IHt9O1xuICB9XG5cbiAgaXNJbWFnZUFsaWFzQ2FjaGVkKGFsaWFzKSB7XG4gICAgcmV0dXJuIHRoaXMuX2ltZ0FsaWFzLmhhc093blByb3BlcnR5KGFsaWFzKTtcbiAgfVxuXG4gIGlzRmlsZUFsaWFzQ2FjaGVkKGFsaWFzKSB7XG4gICAgcmV0dXJuIHRoaXMuX2ZpbGVBbGlhcy5oYXNPd25Qcm9wZXJ0eShhbGlhcyk7XG4gIH1cblxuICBpc0F1ZGlvQWxpYXNDYWNoZWQoYWxpYXMpIHtcbiAgICByZXR1cm4gdGhpcy5fYXVkaW9BbGlhcy5oYXNPd25Qcm9wZXJ0eShhbGlhcyk7XG4gIH1cblxuICBpc0ltYWdlQ2FjaGVkKHBhdGgpIHtcbiAgICByZXR1cm4gdGhpcy5faW1nTG9hZGVkLmhhc093blByb3BlcnR5KHBhdGgpO1xuICB9XG5cbiAgaXNGaWxlQ2FjaGVkKHBhdGgpIHtcbiAgICByZXR1cm4gdGhpcy5fZmlsZUxvYWRlZC5oYXNPd25Qcm9wZXJ0eShwYXRoKTtcbiAgfVxuXG4gIGlzQXVkaW9DYWNoZWQocGF0aCkge1xuICAgIHJldHVybiB0aGlzLl9hdWRpb0xvYWRlZC5oYXNPd25Qcm9wZXJ0eShwYXRoKTtcbiAgfVxuXG4gIC8qKlxuICAgICAqIFJldHVybnMgYW4gaW1hZ2UgbG9hZGVkIGJ5IHRoZSBnaXZlbiBhbGlhcyAoaWYgZXhpc3RzKVxuICAgICAqIEBwYXJhbSBhbGlhc1xuICAgICAqL1xuICBnZXRJbWFnZShhbGlhcykge1xuICAgIGlmICh0aGlzLmlzSW1hZ2VBbGlhc0NhY2hlZChhbGlhcykpIHtcbiAgICAgIHJldHVybiB0aGlzLl9pbWdMb2FkZWRbdGhpcy5faW1nQWxpYXNbYWxpYXNdXTtcbiAgICB9XG4gIH1cblxuICBnZXRTb3VyY2VQYXRoKGFsaWFzKSB7XG4gICAgaWYgKHRoaXMuaXNJbWFnZUFsaWFzQ2FjaGVkKGFsaWFzKSkge1xuICAgICAgcmV0dXJuIHRoaXMuX2ltZ0FsaWFzW2FsaWFzXTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICAgKiBSZXR1cm5zIGEgZmlsZSBsb2FkZWQgYnkgdGhlIGdpdmVuIGFsaWFzIChpZiBleGlzdHMpXG4gICAgICogQHBhcmFtIGFsaWFzXG4gICAgICovXG4gIGdldEZpbGUoYWxpYXMpIHtcbiAgICBpZiAodGhpcy5pc0ZpbGVBbGlhc0NhY2hlZChhbGlhcykpIHtcbiAgICAgIHJldHVybiB0aGlzLl9maWxlTG9hZGVkW3RoaXMuX2ZpbGVBbGlhc1thbGlhc11dO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgICAqIFJldHVybnMgYW4gYXVkaW8gbG9hZGVkIGJ5IHRoZSBnaXZlbiBhbGlhcyAoaWYgZXhpc3RzKVxuICAgICAqIEBwYXJhbSBhbGlhc1xuICAgICAqL1xuICBnZXRBdWRpbyhhbGlhcykge1xuICAgIGlmICh0aGlzLmlzQXVkaW9BbGlhc0NhY2hlZChhbGlhcykpIHtcbiAgICAgIHJldHVybiB0aGlzLl9hdWRpb0xvYWRlZFt0aGlzLl9hdWRpb0FsaWFzW2FsaWFzXV07XG4gICAgfVxuICB9XG5cbiAgX2ZpbHRlckJ5UGF0aEFuZEFsaWFzKGFycikge1xuICAgIGNvbnN0IHVuaXF1ZUZsYWdzID0gbmV3IFNldCgpO1xuICAgIGNvbnN0IHVuaXF1ZU9iaiA9IGFyci5maWx0ZXIob2JqID0+IHtcbiAgICAgIC8vIGlmIG9iaiBpcyBpbnZhbGlkIG9yIHBhdGggb3IgYWxpYXMgaXMgYWxyZWFkeSBmbGFnZ2VkXG4gICAgICBpZiAoXG4gICAgICAgIHR5cGVvZiBvYmoucGF0aCAhPSBcInN0cmluZ1wiIHx8XG4gICAgICAgIHR5cGVvZiBvYmouYWxpYXMgIT0gXCJzdHJpbmdcIiB8fFxuICAgICAgICB1bmlxdWVGbGFncy5oYXMob2JqLnBhdGgpIHx8XG4gICAgICAgIHVuaXF1ZUZsYWdzLmhhcyhvYmouYWxpYXMpXG4gICAgICApIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgfVxuICAgICAgdW5pcXVlRmxhZ3MuYWRkKG9iai5wYXRoKTtcbiAgICAgIHVuaXF1ZUZsYWdzLmFkZChvYmouYWxpYXMpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfSk7XG5cbiAgICB1bmlxdWVGbGFncy5jbGVhcigpO1xuXG4gICAgcmV0dXJuIHVuaXF1ZU9iajtcbiAgfVxuXG4gIF9pc0xvYWRpbmcocGF0aCwgYWxpYXMpIHtcbiAgICBpZiAodGhpcy5fbG9hZGluZ1BhdGhzLmhhcyhwYXRoKSkge1xuICAgICAgY29uc29sZS53YXJuKFwiQWxyZWFkeSBsb2FkaW5nIFwiICsgcGF0aCArIFwiLi4uIERpc2NhcmRpbmcuXCIpO1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG4gICAgaWYgKHRoaXMuX2xvYWRpbmdBbGlhc2VzLmhhcyhhbGlhcykpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIkFsaWFzIFwiICsgYWxpYXMgKyBcIiBpcyBhbHJlYWR5IGluIHVzZS4gRGlzY2FyZGluZyBcIiArIHBhdGggKyBcIi5cIik7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBfc2V0dXBMb2FkaW5nUXVldWUoYXJyKSB7XG4gICAgaWYgKCFBcnJheS5pc0FycmF5KGFycikpIHtcbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG5cbiAgICAvLyBmaWx0ZXIgYnkgcGF0aCBhbmQgYWxpYXM7IDFzdCBsYXllciBvZiBzZWN1cml0eVxuICAgIGNvbnN0IGZpbHRlcmVkUXVldWUgPSB0aGlzLl9maWx0ZXJCeVBhdGhBbmRBbGlhcyhhcnIpO1xuXG4gICAgLy8gaWYgc29tZSBmaWxlIHdhcyBmaWx0ZXJlZCBvdXQsIHdhcm5cbiAgICBpZiAoYXJyLmxlbmd0aCAhPSBmaWx0ZXJlZFF1ZXVlLmxlbmd0aCkge1xuICAgICAgY29uc29sZS53YXJuKFwiU29tZSBmaWxlcyBoYXZlIGJlZW4gZmlsdGVyZWQgb3V0IGZyb20gbG9hZGluZyBkdWUgdG8gaW52YWxpZC9kdXBsaWNhdGUgcGF0aHMgb3IgYWxpYXNlcy5cIik7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZpbHRlcmVkUXVldWU7XG4gIH1cblxuICBhc3luYyBsb2FkQWxsKGFzc2V0cykge1xuICAgIC8vIHByZXBhcmUgYXNzZXRzXG4gICAgYXNzZXRzID0gYXNzZXRzIHx8IHt9O1xuICAgIGFzc2V0cy5pbWFnZXMgPSBhc3NldHMuaW1hZ2VzIHx8IFtdO1xuICAgIGFzc2V0cy5maWxlcyA9IGFzc2V0cy5maWxlcyB8fCBbXTtcbiAgICBhc3NldHMuYXVkaW9zID0gYXNzZXRzLmF1ZGlvcyB8fCBbXTtcblxuICAgIGNvbnN0IGltYWdlc1Byb21pc2UgPSB0aGlzLmxvYWRBbGxJbWFnZXMoYXNzZXRzLmltYWdlcyk7XG4gICAgY29uc3QgZmlsZXNQcm9taXNlID0gdGhpcy5sb2FkQWxsRmlsZXMoYXNzZXRzLmZpbGVzKTtcbiAgICBjb25zdCBhdWRpb3NQcm9taXNlID0gdGhpcy5sb2FkQWxsQXVkaW9zKGFzc2V0cy5hdWRpb3MpO1xuXG4gICAgcmV0dXJuIGF3YWl0IFByb21pc2UuYWxsKFtpbWFnZXNQcm9taXNlLCBmaWxlc1Byb21pc2UsIGF1ZGlvc1Byb21pc2VdKTtcbiAgfVxuXG4gIGFzeW5jIGxvYWRBbGxJbWFnZXMoaW1hZ2VzKSB7XG4gICAgaW1hZ2VzID0gdGhpcy5fc2V0dXBMb2FkaW5nUXVldWUoaW1hZ2VzKTtcblxuICAgIHJldHVybiBhd2FpdCBQcm9taXNlLmFsbChcbiAgICAgIGltYWdlcy5tYXAoYXN5bmMgaW1hZ2UgPT4ge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5sb2FkSW1hZ2UoaW1hZ2UucGF0aCwgaW1hZ2UuYWxpYXMpO1xuICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgYXN5bmMgbG9hZEFsbEZpbGVzKGZpbGVzKSB7XG4gICAgZmlsZXMgPSB0aGlzLl9zZXR1cExvYWRpbmdRdWV1ZShmaWxlcyk7XG5cbiAgICByZXR1cm4gYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgICBmaWxlcy5tYXAoYXN5bmMgZmlsZSA9PiB7XG4gICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmxvYWRGaWxlKGZpbGUucGF0aCwgZmlsZS5hbGlhcyk7XG4gICAgICB9KVxuICAgICk7XG4gIH1cblxuICBhc3luYyBsb2FkQWxsQXVkaW9zKGF1ZGlvcykge1xuICAgIGF1ZGlvcyA9IHRoaXMuX3NldHVwTG9hZGluZ1F1ZXVlKGF1ZGlvcyk7XG5cbiAgICByZXR1cm4gYXdhaXQgUHJvbWlzZS5hbGwoXG4gICAgICBhdWRpb3MubWFwKGFzeW5jIGF1ZGlvID0+IHtcbiAgICAgICAgcmV0dXJuIGF3YWl0IHRoaXMubG9hZEF1ZGlvKGF1ZGlvLnBhdGgsIGF1ZGlvLmFsaWFzKTtcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIGFzeW5jIGxvYWRJbWFnZShwYXRoLCBhbGlhcykge1xuICAgIFtwYXRoLCBhbGlhc10gPSB0aGlzLl9hc3NlcnRQYXRoQWxpYXNWYWxpZGl0eShwYXRoLCBhbGlhcyk7XG5cbiAgICAvLyBlbnJpY2ggcGF0aCBpZiBwb3NzaWJsZVxuICAgIGNvbnN0IG5ld1BhdGggPSB0aGlzLl9lbnJpY2hSZWxhdGl2ZVBhdGgocGF0aCk7XG5cbiAgICAvLyBubyBuZWVkIHRvIGdvIGZ1cnRoZXIgaWYgYWxyZWFkeSBpbiBjYWNoZVxuICAgIGlmICh0aGlzLmlzSW1hZ2VDYWNoZWQobmV3UGF0aCkpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIkltYWdlIFwiICsgbmV3UGF0aCArIFwiIGlzIGFscmVhZHkgaW4gY2FjaGUuIFJldXNpbmcuXCIpO1xuICAgICAgcmV0dXJuIHRoaXMuX2ltZ0xvYWRlZFtuZXdQYXRoXTtcbiAgICB9XG5cbiAgICAvLyBvdGhlcndpc2UsIHRyeSB0byBsb2FkIGl0XG4gICAgY29uc3QgaW1hZ2UgPSBhd2FpdCB0aGlzLl90cnlUb0xvYWRJbWFnZShuZXdQYXRoLCBhbGlhcyk7XG5cbiAgICAvLyBtYWtlIHN1cmUgaW1hZ2Ugd2FzIGxvYWRlZCBjb3JyZWN0bHlcbiAgICBpZiAoaW1hZ2UgPT0gbnVsbCkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIC8vIG90aGVyd2lzZSwgY2FjaGUgaW1hZ2UgYmFzZWQgb24gdGhlIGRldGVybWluZWQgcGF0aCBhbmQgYWxpYXNcbiAgICB0aGlzLl9jYWNoZUltYWdlKG5ld1BhdGgsIGFsaWFzLCBpbWFnZSk7XG5cbiAgICByZXR1cm4gaW1hZ2U7XG4gIH1cblxuICAvKipcbiAgICogbG9hZHMgYW4gYXVkaW8gZmlsZSBmcm9tIGEgc3BlY2lmaWVkIHBhdGggaW50byBtZW1vcnlcbiAgICogQHBhcmFtIHBhdGhcbiAgICogQHBhcmFtIGFsaWFzXG4gICAqIEByZXR1cm5zIHsqfVxuICAgKi9cbiAgYXN5bmMgbG9hZEF1ZGlvKHBhdGgsIGFsaWFzKSB7XG4gICAgW3BhdGgsIGFsaWFzXSA9IHRoaXMuX2Fzc2VydFBhdGhBbGlhc1ZhbGlkaXR5KHBhdGgsIGFsaWFzKTtcblxuICAgIC8vIGVucmljaCBwYXRoIGlmIHBvc3NpYmxlXG4gICAgY29uc3QgbmV3UGF0aCA9IHRoaXMuX2VucmljaFJlbGF0aXZlUGF0aChwYXRoKTtcblxuICAgIC8vIG5vIG5lZWQgdG8gZ28gZnVydGhlciBpZiBhbHJlYWR5IGluIGNhY2hlXG4gICAgaWYgKHRoaXMuaXNBdWRpb0NhY2hlZChuZXdQYXRoKSkge1xuICAgICAgY29uc29sZS53YXJuKFwiQXVkaW8gXCIgKyBuZXdQYXRoICsgXCIgaXMgYWxyZWFkeSBpbiBjYWNoZS4gUmV1c2luZy5cIik7XG4gICAgICByZXR1cm4gdGhpcy5fYXVkaW9Mb2FkZWRbbmV3UGF0aF07XG4gICAgfVxuXG4gICAgLy8gb3RoZXJ3aXNlLCB0cnkgdG8gbG9hZCBpdFxuICAgIGNvbnN0IGF1ZGlvID0gYXdhaXQgdGhpcy5fdHJ5VG9Mb2FkQXVkaW8obmV3UGF0aCwgYWxpYXMpO1xuXG4gICAgLy8gbWFrZSBzdXJlIGF1ZGlvIHdhcyBsb2FkZWQgY29ycmVjdGx5XG4gICAgaWYgKGF1ZGlvID09IG51bGwpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBhbmQgY2FjaGUgYXVkaW8gYmFzZWQgb24gdGhlIGRldGVybWluZWQgcGF0aCBhbmQgYWxpYXNcbiAgICB0aGlzLl9jYWNoZUF1ZGlvKG5ld1BhdGgsIGFsaWFzLCBhdWRpbyk7XG5cbiAgICByZXR1cm4gYXVkaW87XG4gIH1cblxuICAvKipcbiAgICAgKiBsb2FkcyBhIGZpbGUgZnJvbSBhIHNwZWNpZmllZCBwYXRoIGludG8gbWVtb3J5XG4gICAgICogQHBhcmFtIHBhdGhcbiAgICAgKiBAcGFyYW0gYWxpYXNcbiAgICAgKiBAcmV0dXJucyB7Kn1cbiAgICAgKi9cbiAgYXN5bmMgbG9hZEZpbGUocGF0aCwgYWxpYXMpIHtcbiAgICBbcGF0aCwgYWxpYXNdID0gdGhpcy5fYXNzZXJ0UGF0aEFsaWFzVmFsaWRpdHkocGF0aCwgYWxpYXMpO1xuXG4gICAgLy8gZW5yaWNoIHBhdGggaWYgcG9zc2libGVcbiAgICBjb25zdCBuZXdQYXRoID0gdGhpcy5fZW5yaWNoUmVsYXRpdmVQYXRoKHBhdGgpO1xuXG4gICAgLy8gbm8gbmVlZCB0byBnbyBmdXJ0aGVyIGlmIGFscmVhZHkgaW4gY2FjaGVcbiAgICBpZiAodGhpcy5pc0ZpbGVDYWNoZWQobmV3UGF0aCkpIHtcbiAgICAgIGNvbnNvbGUud2FybihcIkZpbGUgXCIgKyBuZXdQYXRoICsgXCIgaXMgYWxyZWFkeSBpbiBjYWNoZS4gUmV1c2luZy5cIik7XG4gICAgICByZXR1cm4gdGhpcy5fZmlsZUxvYWRlZFtuZXdQYXRoXTtcbiAgICB9XG5cbiAgICAvLyBvdGhlcndpc2UsIHRyeSB0byBsb2FkIGl0XG4gICAgY29uc3QgZmlsZUNvbnRleHQgPSBhd2FpdCB0aGlzLl90cnlUb0xvYWRGaWxlKG5ld1BhdGgsIGFsaWFzKTtcblxuICAgIC8vIG1ha2Ugc3VyZSBmaWxlIHdhcyBsb2FkZWQgY29ycmVjdGx5XG4gICAgaWYgKGZpbGVDb250ZXh0ID09IG51bGwpIHtcbiAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG5cbiAgICAvLyBhbmQgY2FjaGUgZmlsZSBiYXNlZCBvbiB0aGUgZGV0ZXJtaW5lZCBwYXRoIGFuZCBhbGlhc1xuICAgIHRoaXMuX2NhY2hlRmlsZShuZXdQYXRoLCBhbGlhcywgZmlsZUNvbnRleHQpO1xuXG4gICAgcmV0dXJuIGZpbGVDb250ZXh0O1xuICB9XG5cbiAgLy8jZW5kcmVnaW9uXG5cbiAgLy8jcmVnaW9uIFByaXZhdGUgTWV0aG9kc1xuXG4gIC8qKlxuICAgKlxuICAgKiBAcGFyYW0gcGF0aFxuICAgKiBAcmV0dXJucyB7Kn1cbiAgICogQHByaXZhdGVcbiAgICovXG4gIF9lbnJpY2hSZWxhdGl2ZVBhdGgocGF0aCkge1xuICAgIC8vIGlzIHRoaXMgYSByZWxhdGl2ZSBwYXRoP1xuICAgIGlmIChHYW1lTWFuYWdlci5hY3RpdmVQcm9qZWN0UGF0aCAmJiBwYXRoLmluZGV4T2YoR2FtZU1hbmFnZXIuYWN0aXZlUHJvamVjdFBhdGgpIDwgMCkge1xuICAgICAgcGF0aCA9IEdhbWVNYW5hZ2VyLmFjdGl2ZVByb2plY3RQYXRoICsgcGF0aDtcbiAgICB9XG5cbiAgICByZXR1cm4gcGF0aDtcbiAgfVxuXG4gIC8qKlxuICAgKiBBc3NlcnRzIHRoYXQgdGhlIGdpdmVuIHBhdGggYW5kIGFsaWFzIGFyZSB2YWxpZFxuICAgKiByZXR1cm5pbmcgdmFsaWQgdmVyc2lvbnNcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhdGggXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhbGlhcyBcbiAgICogQHJldHVybnMge1tzdHJpbmcsc3RyaW5nXX0gdmFsaWQgdmVyc2lvbnMgb2YgdGhlIGdpdmVuIHBhdGggYW5kIGFsaWFzXG4gICAqL1xuICBfYXNzZXJ0UGF0aEFsaWFzVmFsaWRpdHkocGF0aCwgYWxpYXMpIHtcbiAgICBjb25zdCBuZXdQYXRoID0gdHlwZW9mIHBhdGggIT0gXCJzdHJpbmdcIiA/IFwiXCIgOiBwYXRoO1xuICAgIC8vIGZhbGxiYWNrIHRvIHBhdGggaWYgaW52YWxpZFxuICAgIGNvbnN0IG5ld0FsaWFzID0gdHlwZW9mIGFsaWFzICE9IFwic3RyaW5nXCIgPyBuZXdQYXRoIDogYWxpYXM7XG5cbiAgICByZXR1cm4gW25ld1BhdGgsIG5ld0FsaWFzXTtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWNoZXMgdGhlIGdpdmVuIGltYWdlIHVzaW5nIHRoZSBnaXZlbiBwYXRoIGFuZCBhbGlhcyBhcyBrZXlzXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIFxuICAgKiBAcGFyYW0ge3N0cmluZ30gYWxpYXMgXG4gICAqIEBwYXJhbSB7SFRNTEltYWdlRWxlbWVudH0gaW1hZ2UgXG4gICAqL1xuICBfY2FjaGVJbWFnZShwYXRoLCBhbGlhcywgaW1hZ2UpIHtcbiAgICAvLyBjYWNoZSB0aGUgbG9hZGVkIGltYWdlOlxuICAgIHRoaXMuX2ltZ0xvYWRlZFtwYXRoXSA9IGltYWdlO1xuICAgIHRoaXMuX2ltZ0FsaWFzW2FsaWFzXSA9IHBhdGg7XG4gIH1cblxuICAvKipcbiAgICogQ2FjaGVzIHRoZSBnaXZlbiBhdWRpbyB1c2luZyB0aGUgZ2l2ZW4gcGF0aCBhbmQgYWxpYXMgYXMga2V5c1xuICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0aCBcbiAgICogQHBhcmFtIHtzdHJpbmd9IGFsaWFzIFxuICAgKiBAcGFyYW0ge0hUTUxBdWRpb0VsZW1lbnR9IGF1ZGlvIFxuICAgKi9cbiAgX2NhY2hlQXVkaW8ocGF0aCwgYWxpYXMsIGF1ZGlvKSB7XG4gICAgLy8gY2FjaGUgdGhlIGxvYWRlZCBhdWRpbzpcbiAgICB0aGlzLl9hdWRpb0xvYWRlZFtwYXRoXSA9IGF1ZGlvO1xuICAgIHRoaXMuX2F1ZGlvQWxpYXNbYWxpYXNdID0gcGF0aDtcbiAgfVxuXG4gIC8qKlxuICAgKiBDYWNoZXMgdGhlIGdpdmVuIGZpbGUgdXNpbmcgdGhlIGdpdmVuIHBhdGggYW5kIGFsaWFzIGFzIGtleXNcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhdGggXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBhbGlhcyBcbiAgICogQHBhcmFtIHtGaWxlQ29udGV4dH0gZmlsZSBcbiAgICovXG4gIF9jYWNoZUZpbGUocGF0aCwgYWxpYXMsIGZpbGUpIHtcbiAgICAvLyBjYWNoZSB0aGUgbG9hZGVkIGZpbGU6XG4gICAgdGhpcy5fZmlsZUxvYWRlZFtwYXRoXSA9IGZpbGU7XG4gICAgdGhpcy5fZmlsZUFsaWFzW2FsaWFzXSA9IHBhdGg7XG4gIH1cblxuICAvKipcbiAgICogQXR0ZW1wdHMgdG8gbG9hZCBhbiBpbWFnZSwgcmV0dXJuaW5nIGl0IGlmIHN1Y2Nlc3NmdWxcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhdGggXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPEhUTUxJbWFnZUVsZW1lbnQ+fG51bGx9XG4gICAqL1xuICBhc3luYyBfdHJ5VG9Mb2FkSW1hZ2UocGF0aCwgYWxpYXMpIHtcbiAgICAvLyBkaXNjYXJkIGlmIGxvYWRpbmcgdGhlIHNhbWUgaW1hZ2Ugb3IgYWxpYXNcbiAgICAvLyBvciBpZiBpbWFnZSBpcyBhbHJlYWR5IGNhY2hlZFxuICAgIC8vIDJuZCAoYW5kIGxhc3QpIGxheWVyIG9mIHNlY3VyaXR5XG4gICAgaWYgKHRoaXMuX2lzTG9hZGluZyhwYXRoLCBhbGlhcykgfHwgdGhpcy5pc0ltYWdlQWxpYXNDYWNoZWQoYWxpYXMpIHx8IHRoaXMuaXNJbWFnZUNhY2hlZChwYXRoKSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgdGhpcy5fbG9hZGluZ1BhdGhzLmFkZChwYXRoKTtcbiAgICB0aGlzLl9sb2FkaW5nQWxpYXNlcy5hZGQoYWxpYXMpO1xuXG4gICAgdHJ5IHtcbiAgICAgIC8vIHRyeSB0byBsb2FkXG4gICAgICByZXR1cm4gYXdhaXQgdGhpcy5fbG9hZEltYWdlKHBhdGgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAvLyBsb2cgYW5kIHJldHVybiBpbnZhbGlkXG4gICAgICBjb25zb2xlLmVycm9yKGVycm9yLm5hbWUsIGVycm9yLm1lc3NhZ2UpO1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIC8vIG1ha2Ugc3VyZSBsb2FkaW5nIGlzIHVwZGF0ZWQgZWl0aGVyIHdheVxuICAgICAgdGhpcy5fbG9hZGluZ1BhdGhzLmRlbGV0ZShwYXRoKTtcbiAgICAgIHRoaXMuX2xvYWRpbmdBbGlhc2VzLmRlbGV0ZShhbGlhcyk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIEF0dGVtcHRzIHRvIGxvYWQgYW4gYXVkaW8gZmlsZSwgcmV0dXJuaW5nIGl0IGlmIHN1Y2Nlc3NmdWxcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhdGggXG4gICAqIEByZXR1cm5zIHtQcm9taXNlPEhUTUxBdWRpb0VsZW1lbnQ+fVxuICAgKi9cbiAgYXN5bmMgX3RyeVRvTG9hZEF1ZGlvKHBhdGgsIGFsaWFzKSB7XG4gICAgLy8gZGlzY2FyZCBpZiBsb2FkaW5nIHRoZSBzYW1lIGF1ZGlvIG9yIGFsaWFzXG4gICAgLy8gb3IgaWYgYXVkaW8gaXMgYWxyZWFkeSBjYWNoZWRcbiAgICAvLyAybmQgKGFuZCBsYXN0KSBsYXllciBvZiBzZWN1cml0eVxuICAgIGlmICh0aGlzLl9pc0xvYWRpbmcocGF0aCwgYWxpYXMpIHx8IHRoaXMuaXNBdWRpb0FsaWFzQ2FjaGVkKGFsaWFzKSB8fCB0aGlzLmlzQXVkaW9DYWNoZWQocGF0aCkpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIHRoaXMuX2xvYWRpbmdQYXRocy5hZGQocGF0aCk7XG4gICAgdGhpcy5fbG9hZGluZ0FsaWFzZXMuYWRkKGFsaWFzKTtcblxuICAgIHRyeSB7XG4gICAgICAvLyB0cnkgdG8gbG9hZFxuICAgICAgcmV0dXJuIGF3YWl0IHRoaXMuX2xvYWRBdWRpbyhwYXRoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgLy8gbG9nIGFuZCByZXR1cm4gaW52YWxpZFxuICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgLy8gbWFrZSBzdXJlIGxvYWRpbmcgaXMgdXBkYXRlZCBlaXRoZXIgd2F5XG4gICAgICB0aGlzLl9sb2FkaW5nUGF0aHMuZGVsZXRlKHBhdGgpO1xuICAgICAgdGhpcy5fbG9hZGluZ0FsaWFzZXMuZGVsZXRlKGFsaWFzKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQXR0ZW1wdHMgdG8gbG9hZCBhIGZpbGUsIHJldHVybmluZyBpdCBpZiBzdWNjZXNzZnVsXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXRoIFxuICAgKiBAcmV0dXJucyB7UHJvbWlzZTxGaWxlQ29udGV4dD59XG4gICAqL1xuICBhc3luYyBfdHJ5VG9Mb2FkRmlsZShwYXRoLCBhbGlhcykge1xuICAgIC8vIGRpc2NhcmQgaWYgbG9hZGluZyB0aGUgc2FtZSBhdWRpbyBvciBhbGlhc1xuICAgIC8vIG9yIGlmIGZpbGUgaXMgYWxyZWFkeSBjYWNoZWRcbiAgICAvLyAybmQgKGFuZCBsYXN0KSBsYXllciBvZiBzZWN1cml0eVxuICAgIGlmICh0aGlzLl9pc0xvYWRpbmcocGF0aCwgYWxpYXMpIHx8IHRoaXMuaXNGaWxlQWxpYXNDYWNoZWQoYWxpYXMpIHx8IHRoaXMuaXNGaWxlQ2FjaGVkKHBhdGgpKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICB0aGlzLl9sb2FkaW5nUGF0aHMuYWRkKHBhdGgpO1xuICAgIHRoaXMuX2xvYWRpbmdBbGlhc2VzLmFkZChhbGlhcyk7XG5cbiAgICB0cnkge1xuICAgICAgLy8gdHJ5IHRvIGxvYWRcbiAgICAgIHJldHVybiBhd2FpdCB0aGlzLl9sb2FkRmlsZShwYXRoKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgLy8gbG9nIGFuZCByZXR1cm4gaW52YWxpZFxuICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgLy8gbWFrZSBzdXJlIGxvYWRpbmcgaXMgdXBkYXRlZCBlaXRoZXIgd2F5XG4gICAgICB0aGlzLl9sb2FkaW5nUGF0aHMuZGVsZXRlKHBhdGgpO1xuICAgICAgdGhpcy5fbG9hZGluZ0FsaWFzZXMuZGVsZXRlKGFsaWFzKTtcbiAgICB9XG4gIH1cblxuICAvKipcbiAgICogQXR0ZW1wdHMgdG8gbG9hZCB0aGUgaW1hZ2UgZnJvbSB0aGUgZ2l2ZW4gcGF0aFxuICAgKiBAcGFyYW0ge3N0cmluZ30gcGF0aCBcbiAgICovXG4gIF9sb2FkSW1hZ2UocGF0aCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBsZXQgaW1hZ2UgPSBuZXcgSW1hZ2UoKTtcbiAgICAgIGltYWdlLnNyYyA9IHBhdGg7XG4gICAgICBpbWFnZS5vbmxvYWQgPSAoKSA9PiByZXNvbHZlKGltYWdlKTtcbiAgICAgIGltYWdlLm9uZXJyb3IgPSAoKSA9PiByZWplY3QobmV3IEVycm9yKFwiSW1hZ2UgaXMgbm90IGRlZmluZWQuIFVuYWJsZSB0byBsb2FkIGl0LlwiKSk7XG4gICAgfSk7XG4gIH1cblxuICBfbG9hZEZpbGUocGF0aCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBsZXQgcmF3RmlsZSA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpO1xuICAgICAgcmF3RmlsZS5vcGVuKFwiR0VUXCIsIHBhdGgsIHRydWUpO1xuICAgICAgcmF3RmlsZS5vbnJlYWR5c3RhdGVjaGFuZ2UgPSAoKSA9PiB7XG4gICAgICAgIGlmIChyYXdGaWxlLnJlYWR5U3RhdGUgPT09IDQgJiYgcmF3RmlsZS5zdGF0dXMgPT09IDIwMCkge1xuICAgICAgICAgIGNvbnN0IGZpbGVDb250ZXh0ID0gRmlsZUNvbnRleHQuZnJvbVhIUihyYXdGaWxlKTtcbiAgICAgICAgICByZXNvbHZlKGZpbGVDb250ZXh0KTtcbiAgICAgICAgfSBlbHNlIGlmIChyYXdGaWxlLnJlYWR5U3RhdGUgPT09IDQgJiYgcmF3RmlsZS5zdGF0dXMgIT0gMjAwKSB7XG4gICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihcIkNvdWxkIG5vdCBsb2FkIGZpbGUuXCIpKTtcbiAgICAgICAgfVxuICAgICAgfTtcbiAgICAgIHJhd0ZpbGUuc2VuZChudWxsKTtcbiAgICB9KTtcbiAgfVxuXG4gIF9sb2FkQXVkaW8ocGF0aCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICBsZXQgYXVkaW8gPSBuZXcgQXVkaW8oKTtcbiAgICAgIGF1ZGlvLnNyYyA9IHBhdGg7XG4gICAgICBhdWRpby5vbmNhbnBsYXl0aHJvdWdoID0gKCkgPT4gcmVzb2x2ZShhdWRpbyk7XG4gICAgICBhdWRpby5vbmVycm9yID0gKCkgPT4gcmVqZWN0KG5ldyBFcnJvcihcIkF1ZGlvIGlzIG5vdCBkZWZpbmVkLiBVbmFibGUgdG8gbG9hZCBpdC5cIikpO1xuICAgIH0pO1xuICB9XG5cbiAgLy8jZW5kcmVnaW9uXG59XG5cbi8qKlxuICogQ29udGVudCBMb2FkZXIgYWxpYXMgdG8gQ29udGVudCBMb2FkZXIgU2luZ2xldG9uIGluc3RhbmNlXG4gKi9cbmV4cG9ydCBjb25zdCBDb250ZW50TG9hZGVyID0gQ29udGVudExvYWRlclNpbmdsZXRvbi5pbnN0YW5jZTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29tbW9uL2NvbnRlbnRMb2FkZXIuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7O0FBT0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWhmQTtBQUNBO0FBa2ZBOzs7QUFHQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 15 */
/* exports provided: default */
/* exports used: default */
/*!********************************!*\
  !*** ./src/math/mathHelper.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * Math Helper utility Class\r\n */\nclass MathHelper {\n  //#region Static Properties\n\n  /**\r\n     * PI value\r\n     * @type {number}\r\n     */\n  static get PI() {\n    return Math.PI;\n  }\n\n  /**\r\n     * PI multiplied by two\r\n     * @type {number}\r\n     */\n  static get PI2() {\n    return MathHelper.PI * 2.0;\n  }\n\n  /**\r\n     * PI multiplied by four\r\n     * @type {number}\r\n     */\n  static get PI4() {\n    return MathHelper.PI * 4.0;\n  }\n\n  /**\r\n     * PI divided by two\r\n     * @type {number}\r\n     */\n  static get PIo2() {\n    return MathHelper.PI / 2.0;\n  }\n\n  /**\r\n     * PI divided by four\r\n     * @type {number}\r\n     */\n  static get PIo4() {\n    return MathHelper.PI / 4.0;\n  }\n\n  //#endregion\n\n  //#region Constructors\n\n  /**\r\n     * @constructor\r\n     */\n  constructor() {}\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  /**\r\n     * Clamp a value between a min and max value\r\n     * @param value\r\n     * @param min\r\n     * @param max\r\n     */\n  static clamp(value, min, max) {\n    return value < min ? min : value > max ? max : value;\n  }\n\n  /**\r\n     * Converts degree to radians\r\n     * @param degrees\r\n     */\n  static degToRad(degrees) {\n    return degrees * 0.0174532925;\n  }\n\n  /**\r\n     * Converts radians to degrees\r\n     * @param radians\r\n     */\n  static radToDeg(radians) {\n    return radians * 57.295779513;\n  }\n\n  /**\r\n     * Normalize a given raw value between \r\n     * the internal [minNormalized, maxNormalized]\r\n     * @param {number} rawValue the value to normalize\r\n     * @param {number} minRaw the minimum raw value\r\n     * @param {number} maxRaw the maximum raw value\r\n     * @param {number} minNormalized the minimum normalized value\r\n     * @param {number} maxNormalized the maximum normalized value\r\n     */\n  static normalize(rawValue, minRaw, maxRaw, minNormalized, maxNormalized) {\n    let x = rawValue;\n    let minX = minRaw;\n    let maxX = maxRaw;\n    let a = minNormalized;\n    let b = maxNormalized;\n    let denominator = maxX - minX;\n\n    if (denominator === 0) {\n      throw new Error(\"Division by 0 not allowed\");\n    }\n\n    let numerator = x - minX;\n    let normalizedValue = (b - a) * (numerator / denominator) + a;\n\n    return normalizedValue;\n  }\n\n  //#endregion\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = MathHelper;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdGgvbWF0aEhlbHBlci5qcz8xZTEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBNYXRoIEhlbHBlciB1dGlsaXR5IENsYXNzXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBNYXRoSGVscGVyIHtcclxuICAvLyNyZWdpb24gU3RhdGljIFByb3BlcnRpZXNcclxuXHJcbiAgLyoqXHJcbiAgICAgKiBQSSB2YWx1ZVxyXG4gICAgICogQHR5cGUge251bWJlcn1cclxuICAgICAqL1xyXG4gIHN0YXRpYyBnZXQgUEkoKSB7XHJcbiAgICByZXR1cm4gTWF0aC5QSTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogUEkgbXVsdGlwbGllZCBieSB0d29cclxuICAgICAqIEB0eXBlIHtudW1iZXJ9XHJcbiAgICAgKi9cclxuICBzdGF0aWMgZ2V0IFBJMigpIHtcclxuICAgIHJldHVybiBNYXRoSGVscGVyLlBJICogMi4wO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBQSSBtdWx0aXBsaWVkIGJ5IGZvdXJcclxuICAgICAqIEB0eXBlIHtudW1iZXJ9XHJcbiAgICAgKi9cclxuICBzdGF0aWMgZ2V0IFBJNCgpIHtcclxuICAgIHJldHVybiBNYXRoSGVscGVyLlBJICogNC4wO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBQSSBkaXZpZGVkIGJ5IHR3b1xyXG4gICAgICogQHR5cGUge251bWJlcn1cclxuICAgICAqL1xyXG4gIHN0YXRpYyBnZXQgUElvMigpIHtcclxuICAgIHJldHVybiBNYXRoSGVscGVyLlBJIC8gMi4wO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBQSSBkaXZpZGVkIGJ5IGZvdXJcclxuICAgICAqIEB0eXBlIHtudW1iZXJ9XHJcbiAgICAgKi9cclxuICBzdGF0aWMgZ2V0IFBJbzQoKSB7XHJcbiAgICByZXR1cm4gTWF0aEhlbHBlci5QSSAvIDQuMDtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXHJcblxyXG4gIC8qKlxyXG4gICAgICogQGNvbnN0cnVjdG9yXHJcbiAgICAgKi9cclxuICBjb25zdHJ1Y3RvcigpIHt9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNyZWdpb24gTWV0aG9kc1xyXG5cclxuICAvLyNyZWdpb24gU3RhdGljIE1ldGhvZHNcclxuXHJcbiAgLyoqXHJcbiAgICAgKiBDbGFtcCBhIHZhbHVlIGJldHdlZW4gYSBtaW4gYW5kIG1heCB2YWx1ZVxyXG4gICAgICogQHBhcmFtIHZhbHVlXHJcbiAgICAgKiBAcGFyYW0gbWluXHJcbiAgICAgKiBAcGFyYW0gbWF4XHJcbiAgICAgKi9cclxuICBzdGF0aWMgY2xhbXAodmFsdWUsIG1pbiwgbWF4KSB7XHJcbiAgICByZXR1cm4gdmFsdWUgPCBtaW4gPyBtaW4gOiB2YWx1ZSA+IG1heCA/IG1heCA6IHZhbHVlO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBDb252ZXJ0cyBkZWdyZWUgdG8gcmFkaWFuc1xyXG4gICAgICogQHBhcmFtIGRlZ3JlZXNcclxuICAgICAqL1xyXG4gIHN0YXRpYyBkZWdUb1JhZChkZWdyZWVzKSB7XHJcbiAgICByZXR1cm4gZGVncmVlcyAqIDAuMDE3NDUzMjkyNTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogQ29udmVydHMgcmFkaWFucyB0byBkZWdyZWVzXHJcbiAgICAgKiBAcGFyYW0gcmFkaWFuc1xyXG4gICAgICovXHJcbiAgc3RhdGljIHJhZFRvRGVnKHJhZGlhbnMpIHtcclxuICAgIHJldHVybiByYWRpYW5zICogNTcuMjk1Nzc5NTEzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBOb3JtYWxpemUgYSBnaXZlbiByYXcgdmFsdWUgYmV0d2VlbiBcclxuICAgICAqIHRoZSBpbnRlcm5hbCBbbWluTm9ybWFsaXplZCwgbWF4Tm9ybWFsaXplZF1cclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSByYXdWYWx1ZSB0aGUgdmFsdWUgdG8gbm9ybWFsaXplXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbWluUmF3IHRoZSBtaW5pbXVtIHJhdyB2YWx1ZVxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IG1heFJhdyB0aGUgbWF4aW11bSByYXcgdmFsdWVcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBtaW5Ob3JtYWxpemVkIHRoZSBtaW5pbXVtIG5vcm1hbGl6ZWQgdmFsdWVcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBtYXhOb3JtYWxpemVkIHRoZSBtYXhpbXVtIG5vcm1hbGl6ZWQgdmFsdWVcclxuICAgICAqL1xyXG4gIHN0YXRpYyBub3JtYWxpemUocmF3VmFsdWUsIG1pblJhdywgbWF4UmF3LCBtaW5Ob3JtYWxpemVkLCBtYXhOb3JtYWxpemVkKSB7XHJcbiAgICBsZXQgeCA9IHJhd1ZhbHVlO1xyXG4gICAgbGV0IG1pblggPSBtaW5SYXc7XHJcbiAgICBsZXQgbWF4WCA9IG1heFJhdztcclxuICAgIGxldCBhID0gbWluTm9ybWFsaXplZDtcclxuICAgIGxldCBiID0gbWF4Tm9ybWFsaXplZDtcclxuICAgIGxldCBkZW5vbWluYXRvciA9IG1heFggLSBtaW5YO1xyXG5cclxuICAgIGlmIChkZW5vbWluYXRvciA9PT0gMCkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJEaXZpc2lvbiBieSAwIG5vdCBhbGxvd2VkXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBudW1lcmF0b3IgPSB4IC0gbWluWDtcclxuICAgIGxldCBub3JtYWxpemVkVmFsdWUgPSAoYiAtIGEpICogKG51bWVyYXRvciAvIGRlbm9taW5hdG9yKSArIGE7XHJcblxyXG4gICAgcmV0dXJuIG5vcm1hbGl6ZWRWYWx1ZTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNlbmRyZWdpb25cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL21hdGgvbWF0aEhlbHBlci5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7OztBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWpIQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 16 */
/* exports provided: default */
/* exports used: default */
/*!*****************************!*\
  !*** ./src/math/matrix4.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * Matrix4 class @ based on Tdl.Math\r\n * https://github.com/greggman/tdl/blob/master/tdl/math.js\r\n */\nclass Matrix4 {\n  /**\r\n     * Class constructor\r\n     * @param {Array|Float32Array=} array\r\n     */\n  constructor(array) {\n    if ((array instanceof Array || array instanceof Float32Array) && array.length === 16) {\n      this._matrix = new Float32Array(array);\n    } else {\n      this._matrix = new Float32Array(16);\n    }\n  }\n\n  /**\r\n     * Copies the content of the current matrix to another\r\n     * @param {Matrix4} outMatrix\r\n     */\n  copy(outMatrix) {\n    if (outMatrix instanceof Matrix4) {\n      outMatrix.setFromArray(this.asArray());\n    }\n  }\n\n  /**\r\n     *\r\n     * @param {Array|Float32Array} array\r\n     */\n  setFromArray(array) {\n    if ((array instanceof Array || array instanceof Float32Array) && array.length === 16) {\n      this._matrix = new Float32Array(array);\n    }\n  }\n\n  /**\r\n     * Returns a cloned Matrix\r\n     */\n  clone() {\n    return new Matrix4(this._matrix.asArray());\n  }\n\n  /**\r\n     * Returns the matrix array value\r\n     * @returns {Float32Array}\r\n     */\n  asArray() {\n    return this._matrix;\n  }\n\n  /**\r\n     * Calculates the inverse matrix\r\n     * @returns {Float32Array}\r\n     */\n  invert() {\n    let tmp_0 = this._matrix[2 * 4 + 2] * this._matrix[3 * 4 + 3];\n    let tmp_1 = this._matrix[3 * 4 + 2] * this._matrix[2 * 4 + 3];\n    let tmp_2 = this._matrix[1 * 4 + 2] * this._matrix[3 * 4 + 3];\n    let tmp_3 = this._matrix[3 * 4 + 2] * this._matrix[1 * 4 + 3];\n    let tmp_4 = this._matrix[1 * 4 + 2] * this._matrix[2 * 4 + 3];\n    let tmp_5 = this._matrix[2 * 4 + 2] * this._matrix[1 * 4 + 3];\n    let tmp_6 = this._matrix[0 * 4 + 2] * this._matrix[3 * 4 + 3];\n    let tmp_7 = this._matrix[3 * 4 + 2] * this._matrix[0 * 4 + 3];\n    let tmp_8 = this._matrix[0 * 4 + 2] * this._matrix[2 * 4 + 3];\n    let tmp_9 = this._matrix[2 * 4 + 2] * this._matrix[0 * 4 + 3];\n    let tmp_10 = this._matrix[0 * 4 + 2] * this._matrix[1 * 4 + 3];\n    let tmp_11 = this._matrix[1 * 4 + 2] * this._matrix[0 * 4 + 3];\n    let tmp_12 = this._matrix[2 * 4 + 0] * this._matrix[3 * 4 + 1];\n    let tmp_13 = this._matrix[3 * 4 + 0] * this._matrix[2 * 4 + 1];\n    let tmp_14 = this._matrix[1 * 4 + 0] * this._matrix[3 * 4 + 1];\n    let tmp_15 = this._matrix[3 * 4 + 0] * this._matrix[1 * 4 + 1];\n    let tmp_16 = this._matrix[1 * 4 + 0] * this._matrix[2 * 4 + 1];\n    let tmp_17 = this._matrix[2 * 4 + 0] * this._matrix[1 * 4 + 1];\n    let tmp_18 = this._matrix[0 * 4 + 0] * this._matrix[3 * 4 + 1];\n    let tmp_19 = this._matrix[3 * 4 + 0] * this._matrix[0 * 4 + 1];\n    let tmp_20 = this._matrix[0 * 4 + 0] * this._matrix[2 * 4 + 1];\n    let tmp_21 = this._matrix[2 * 4 + 0] * this._matrix[0 * 4 + 1];\n    let tmp_22 = this._matrix[0 * 4 + 0] * this._matrix[1 * 4 + 1];\n    let tmp_23 = this._matrix[1 * 4 + 0] * this._matrix[0 * 4 + 1];\n\n    let t0 = tmp_0 * this._matrix[1 * 4 + 1] + tmp_3 * this._matrix[2 * 4 + 1] + tmp_4 * this._matrix[3 * 4 + 1] - (tmp_1 * this._matrix[1 * 4 + 1] + tmp_2 * this._matrix[2 * 4 + 1] + tmp_5 * this._matrix[3 * 4 + 1]);\n    let t1 = tmp_1 * this._matrix[0 * 4 + 1] + tmp_6 * this._matrix[2 * 4 + 1] + tmp_9 * this._matrix[3 * 4 + 1] - (tmp_0 * this._matrix[0 * 4 + 1] + tmp_7 * this._matrix[2 * 4 + 1] + tmp_8 * this._matrix[3 * 4 + 1]);\n    let t2 = tmp_2 * this._matrix[0 * 4 + 1] + tmp_7 * this._matrix[1 * 4 + 1] + tmp_10 * this._matrix[3 * 4 + 1] - (tmp_3 * this._matrix[0 * 4 + 1] + tmp_6 * this._matrix[1 * 4 + 1] + tmp_11 * this._matrix[3 * 4 + 1]);\n    let t3 = tmp_5 * this._matrix[0 * 4 + 1] + tmp_8 * this._matrix[1 * 4 + 1] + tmp_11 * this._matrix[2 * 4 + 1] - (tmp_4 * this._matrix[0 * 4 + 1] + tmp_9 * this._matrix[1 * 4 + 1] + tmp_10 * this._matrix[2 * 4 + 1]);\n\n    let d = 1.0 / (this._matrix[0 * 4 + 0] * t0 + this._matrix[1 * 4 + 0] * t1 + this._matrix[2 * 4 + 0] * t2 + this._matrix[3 * 4 + 0] * t3);\n\n    let newMatrix = new Float32Array(16);\n    newMatrix[0] = d * t0;\n    newMatrix[1] = d * t1;\n    newMatrix[2] = d * t2;\n    newMatrix[3] = d * t3;\n    newMatrix[4] = d * (tmp_1 * this._matrix[1 * 4 + 0] + tmp_2 * this._matrix[2 * 4 + 0] + tmp_5 * this._matrix[3 * 4 + 0] - (tmp_0 * this._matrix[1 * 4 + 0] + tmp_3 * this._matrix[2 * 4 + 0] + tmp_4 * this._matrix[3 * 4 + 0]));\n    newMatrix[5] = d * (tmp_0 * this._matrix[0 * 4 + 0] + tmp_7 * this._matrix[2 * 4 + 0] + tmp_8 * this._matrix[3 * 4 + 0] - (tmp_1 * this._matrix[0 * 4 + 0] + tmp_6 * this._matrix[2 * 4 + 0] + tmp_9 * this._matrix[3 * 4 + 0]));\n    newMatrix[6] = d * (tmp_3 * this._matrix[0 * 4 + 0] + tmp_6 * this._matrix[1 * 4 + 0] + tmp_11 * this._matrix[3 * 4 + 0] - (tmp_2 * this._matrix[0 * 4 + 0] + tmp_7 * this._matrix[1 * 4 + 0] + tmp_10 * this._matrix[3 * 4 + 0]));\n    newMatrix[7] = d * (tmp_4 * this._matrix[0 * 4 + 0] + tmp_9 * this._matrix[1 * 4 + 0] + tmp_10 * this._matrix[2 * 4 + 0] - (tmp_5 * this._matrix[0 * 4 + 0] + tmp_8 * this._matrix[1 * 4 + 0] + tmp_11 * this._matrix[2 * 4 + 0]));\n    newMatrix[8] = d * (tmp_12 * this._matrix[1 * 4 + 3] + tmp_15 * this._matrix[2 * 4 + 3] + tmp_16 * this._matrix[3 * 4 + 3] - (tmp_13 * this._matrix[1 * 4 + 3] + tmp_14 * this._matrix[2 * 4 + 3] + tmp_17 * this._matrix[3 * 4 + 3]));\n    newMatrix[9] = d * (tmp_13 * this._matrix[0 * 4 + 3] + tmp_18 * this._matrix[2 * 4 + 3] + tmp_21 * this._matrix[3 * 4 + 3] - (tmp_12 * this._matrix[0 * 4 + 3] + tmp_19 * this._matrix[2 * 4 + 3] + tmp_20 * this._matrix[3 * 4 + 3]));\n    newMatrix[10] = d * (tmp_14 * this._matrix[0 * 4 + 3] + tmp_19 * this._matrix[1 * 4 + 3] + tmp_22 * this._matrix[3 * 4 + 3] - (tmp_15 * this._matrix[0 * 4 + 3] + tmp_18 * this._matrix[1 * 4 + 3] + tmp_23 * this._matrix[3 * 4 + 3]));\n    newMatrix[11] = d * (tmp_17 * this._matrix[0 * 4 + 3] + tmp_20 * this._matrix[1 * 4 + 3] + tmp_23 * this._matrix[2 * 4 + 3] - (tmp_16 * this._matrix[0 * 4 + 3] + tmp_21 * this._matrix[1 * 4 + 3] + tmp_22 * this._matrix[2 * 4 + 3]));\n    newMatrix[12] = d * (tmp_14 * this._matrix[2 * 4 + 2] + tmp_17 * this._matrix[3 * 4 + 2] + tmp_13 * this._matrix[1 * 4 + 2] - (tmp_16 * this._matrix[3 * 4 + 2] + tmp_12 * this._matrix[1 * 4 + 2] + tmp_15 * this._matrix[2 * 4 + 2]));\n    newMatrix[13] = d * (tmp_20 * this._matrix[3 * 4 + 2] + tmp_12 * this._matrix[0 * 4 + 2] + tmp_19 * this._matrix[2 * 4 + 2] - (tmp_18 * this._matrix[2 * 4 + 2] + tmp_21 * this._matrix[3 * 4 + 2] + tmp_13 * this._matrix[0 * 4 + 2]));\n    newMatrix[14] = d * (tmp_18 * this._matrix[1 * 4 + 2] + tmp_23 * this._matrix[3 * 4 + 2] + tmp_15 * this._matrix[0 * 4 + 2] - (tmp_22 * this._matrix[3 * 4 + 2] + tmp_14 * this._matrix[0 * 4 + 2] + tmp_19 * this._matrix[1 * 4 + 2]));\n    newMatrix[15] = d * (tmp_22 * this._matrix[2 * 4 + 2] + tmp_16 * this._matrix[0 * 4 + 2] + tmp_21 * this._matrix[1 * 4 + 2] - (tmp_20 * this._matrix[1 * 4 + 2] + tmp_23 * this._matrix[2 * 4 + 2] + tmp_17 * this._matrix[0 * 4 + 2]));\n\n    this._matrix = newMatrix;\n\n    return this._matrix;\n  }\n\n  /**\r\n     * Multiples the current Matrix4 by another Matrix4\r\n     * @param matrix4\r\n     */\n  multiply(matrix4) {\n    let a00 = this._matrix[0 * 4 + 0];\n    let a01 = this._matrix[0 * 4 + 1];\n    let a02 = this._matrix[0 * 4 + 2];\n    let a03 = this._matrix[0 * 4 + 3];\n    let a10 = this._matrix[1 * 4 + 0];\n    let a11 = this._matrix[1 * 4 + 1];\n    let a12 = this._matrix[1 * 4 + 2];\n    let a13 = this._matrix[1 * 4 + 3];\n    let a20 = this._matrix[2 * 4 + 0];\n    let a21 = this._matrix[2 * 4 + 1];\n    let a22 = this._matrix[2 * 4 + 2];\n    let a23 = this._matrix[2 * 4 + 3];\n    let a30 = this._matrix[3 * 4 + 0];\n    let a31 = this._matrix[3 * 4 + 1];\n    let a32 = this._matrix[3 * 4 + 2];\n    let a33 = this._matrix[3 * 4 + 3];\n\n    let b00 = matrix4[0 * 4 + 0];\n    let b01 = matrix4[0 * 4 + 1];\n    let b02 = matrix4[0 * 4 + 2];\n    let b03 = matrix4[0 * 4 + 3];\n    let b10 = matrix4[1 * 4 + 0];\n    let b11 = matrix4[1 * 4 + 1];\n    let b12 = matrix4[1 * 4 + 2];\n    let b13 = matrix4[1 * 4 + 3];\n    let b20 = matrix4[2 * 4 + 0];\n    let b21 = matrix4[2 * 4 + 1];\n    let b22 = matrix4[2 * 4 + 2];\n    let b23 = matrix4[2 * 4 + 3];\n    let b30 = matrix4[3 * 4 + 0];\n    let b31 = matrix4[3 * 4 + 1];\n    let b32 = matrix4[3 * 4 + 2];\n    let b33 = matrix4[3 * 4 + 3];\n\n    this._matrix[0] = a00 * b00 + a10 * b01 + a20 * b02 + a30 * b03;\n    this._matrix[1] = a01 * b00 + a11 * b01 + a21 * b02 + a31 * b03;\n    this._matrix[2] = a02 * b00 + a12 * b01 + a22 * b02 + a32 * b03;\n    this._matrix[3] = a03 * b00 + a13 * b01 + a23 * b02 + a33 * b03;\n    this._matrix[4] = a00 * b10 + a10 * b11 + a20 * b12 + a30 * b13;\n    this._matrix[5] = a01 * b10 + a11 * b11 + a21 * b12 + a31 * b13;\n    this._matrix[6] = a02 * b10 + a12 * b11 + a22 * b12 + a32 * b13;\n    this._matrix[7] = a03 * b10 + a13 * b11 + a23 * b12 + a33 * b13;\n    this._matrix[8] = a00 * b20 + a10 * b21 + a20 * b22 + a30 * b23;\n    this._matrix[9] = a01 * b20 + a11 * b21 + a21 * b22 + a31 * b23;\n    this._matrix[10] = a02 * b20 + a12 * b21 + a22 * b22 + a32 * b23;\n    this._matrix[11] = a03 * b20 + a13 * b21 + a23 * b22 + a33 * b23;\n    this._matrix[12] = a00 * b30 + a10 * b31 + a20 * b32 + a30 * b33;\n    this._matrix[13] = a01 * b30 + a11 * b31 + a21 * b32 + a31 * b33;\n    this._matrix[14] = a02 * b30 + a12 * b31 + a22 * b32 + a32 * b33;\n    this._matrix[15] = a03 * b30 + a13 * b31 + a23 * b32 + a33 * b33;\n\n    return this._matrix;\n  }\n\n  /**\r\n     * Set Matrix identity\r\n     * @returns {Float32Array}\r\n     */\n  identity() {\n    this._matrix[0] = 1;\n    this._matrix[1] = 0;\n    this._matrix[2] = 0;\n    this._matrix[3] = 0;\n    this._matrix[4] = 0;\n    this._matrix[5] = 1;\n    this._matrix[6] = 0;\n    this._matrix[7] = 0;\n    this._matrix[8] = 0;\n    this._matrix[9] = 0;\n    this._matrix[10] = 1;\n    this._matrix[11] = 0;\n    this._matrix[12] = 0;\n    this._matrix[13] = 0;\n    this._matrix[14] = 0;\n    this._matrix[15] = 1;\n\n    return this._matrix;\n  }\n\n  /**\r\n     *\r\n     * @param left\r\n     * @param right\r\n     * @param bottom\r\n     * @param top\r\n     * @param near\r\n     * @param far\r\n     */\n  orthographic(left, right, bottom, top, near, far) {\n    this._matrix[0] = 2 / (right - left);\n    this._matrix[1] = 0;\n    this._matrix[2] = 0;\n    this._matrix[3] = 0;\n    this._matrix[4] = 0;\n    this._matrix[5] = 2 / (top - bottom);\n    this._matrix[6] = 0;\n    this._matrix[7] = 0;\n    this._matrix[8] = 0;\n    this._matrix[9] = 0;\n    this._matrix[10] = 1 / (near - far);\n    this._matrix[11] = 0;\n    this._matrix[12] = (left + right) / (left - right);\n    this._matrix[13] = (bottom + top) / (bottom - top);\n    this._matrix[14] = near / (near - far);\n    this._matrix[15] = 1;\n\n    return this._matrix;\n  }\n\n  /**\r\n     * Rotates the matrix with the given array\r\n     * @param axis\r\n     * @param angle\r\n     */\n  rotate(axis, angle) {\n    let x = axis[0];\n    let y = axis[1];\n    let z = axis[2];\n    let n = Math.sqrt(x * x + y * y + z * z);\n    x /= n;\n    y /= n;\n    z /= n;\n\n    let xx = x * x;\n    let yy = y * y;\n    let zz = z * z;\n    let c = Math.cos(angle);\n    let s = Math.sin(angle);\n    let oneMinusCosine = 1 - c;\n\n    let r00 = xx + (1 - xx) * c;\n    let r01 = x * y * oneMinusCosine + z * s;\n    let r02 = x * z * oneMinusCosine - y * s;\n    let r10 = x * y * oneMinusCosine - z * s;\n    let r11 = yy + (1 - yy) * c;\n    let r12 = y * z * oneMinusCosine + x * s;\n    let r20 = x * z * oneMinusCosine + y * s;\n    let r21 = y * z * oneMinusCosine - x * s;\n    let r22 = zz + (1 - zz) * c;\n\n    let m00 = this._matrix[0 * 4 + 0];\n    let m01 = this._matrix[0 * 4 + 1];\n    let m02 = this._matrix[0 * 4 + 2];\n    let m03 = this._matrix[0 * 4 + 3];\n    let m10 = this._matrix[1 * 4 + 0];\n    let m11 = this._matrix[1 * 4 + 1];\n    let m12 = this._matrix[1 * 4 + 2];\n    let m13 = this._matrix[1 * 4 + 3];\n    let m20 = this._matrix[2 * 4 + 0];\n    let m21 = this._matrix[2 * 4 + 1];\n    let m22 = this._matrix[2 * 4 + 2];\n    let m23 = this._matrix[2 * 4 + 3];\n\n    this._matrix[0] = r00 * m00 + r01 * m10 + r02 * m20;\n    this._matrix[1] = r00 * m01 + r01 * m11 + r02 * m21;\n    this._matrix[2] = r00 * m02 + r01 * m12 + r02 * m22;\n    this._matrix[3] = r00 * m03 + r01 * m13 + r02 * m23;\n    this._matrix[4] = r10 * m00 + r11 * m10 + r12 * m20;\n    this._matrix[5] = r10 * m01 + r11 * m11 + r12 * m21;\n    this._matrix[6] = r10 * m02 + r11 * m12 + r12 * m22;\n    this._matrix[7] = r10 * m03 + r11 * m13 + r12 * m23;\n    this._matrix[8] = r20 * m00 + r21 * m10 + r22 * m20;\n    this._matrix[9] = r20 * m01 + r21 * m11 + r22 * m21;\n    this._matrix[10] = r20 * m02 + r21 * m12 + r22 * m22;\n    this._matrix[11] = r20 * m03 + r21 * m13 + r22 * m23;\n\n    return this._matrix;\n  }\n\n  /**\r\n     * Scales the matrix with the given vector\r\n     * @param {Array} vec [x, y, z]\r\n     */\n  scale(vec) {\n    let v0 = vec[0];\n    let v1 = vec[1];\n    let v2 = vec[2];\n\n    this._matrix[0] = v0 * this._matrix[0 * 4 + 0];\n    this._matrix[1] = v0 * this._matrix[0 * 4 + 1];\n    this._matrix[2] = v0 * this._matrix[0 * 4 + 2];\n    this._matrix[3] = v0 * this._matrix[0 * 4 + 3];\n    this._matrix[4] = v1 * this._matrix[1 * 4 + 0];\n    this._matrix[5] = v1 * this._matrix[1 * 4 + 1];\n    this._matrix[6] = v1 * this._matrix[1 * 4 + 2];\n    this._matrix[7] = v1 * this._matrix[1 * 4 + 3];\n    this._matrix[8] = v2 * this._matrix[2 * 4 + 0];\n    this._matrix[9] = v2 * this._matrix[2 * 4 + 1];\n    this._matrix[10] = v2 * this._matrix[2 * 4 + 2];\n    this._matrix[11] = v2 * this._matrix[2 * 4 + 3];\n\n    return this._matrix;\n  }\n\n  /**\r\n     * Translates the matrix with the given vector\r\n     * @param {Array} vec [x, y, z]\r\n     */\n  translate(vec) {\n    let m00 = this._matrix[0 * 4 + 0];\n    let m01 = this._matrix[0 * 4 + 1];\n    let m02 = this._matrix[0 * 4 + 2];\n    let m03 = this._matrix[0 * 4 + 3];\n    let m10 = this._matrix[1 * 4 + 0];\n    let m11 = this._matrix[1 * 4 + 1];\n    let m12 = this._matrix[1 * 4 + 2];\n    let m13 = this._matrix[1 * 4 + 3];\n    let m20 = this._matrix[2 * 4 + 0];\n    let m21 = this._matrix[2 * 4 + 1];\n    let m22 = this._matrix[2 * 4 + 2];\n    let m23 = this._matrix[2 * 4 + 3];\n    let m30 = this._matrix[3 * 4 + 0];\n    let m31 = this._matrix[3 * 4 + 1];\n    let m32 = this._matrix[3 * 4 + 2];\n    let m33 = this._matrix[3 * 4 + 3];\n    let v0 = vec[0];\n    let v1 = vec[1];\n    let v2 = vec[2];\n\n    this._matrix[12] = m00 * v0 + m10 * v1 + m20 * v2 + m30;\n    this._matrix[13] = m01 * v0 + m11 * v1 + m21 * v2 + m31;\n    this._matrix[14] = m02 * v0 + m12 * v1 + m22 * v2 + m32;\n    this._matrix[15] = m03 * v0 + m13 * v1 + m23 * v2 + m33;\n\n    return this._matrix;\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Matrix4;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 17 */
/* exports provided: default */
/* exports used: default */
/*!*******************************!*\
  !*** ./src/shaders/shader.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_core_gameManager__ = __webpack_require__(/*! core/gameManager */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_logger__ = __webpack_require__(/*! common/logger */ 9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_webgl_webGLUtils__ = __webpack_require__(/*! webgl/webGLUtils */ 61);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_utility_utils__ = __webpack_require__(/*! utility/utils */ 12);\n\n\n\n\n\n\n/**\n * Shader Class\n * Some cool code ideas were applied from Pixi.JS Shader class\n * \n * Relevant information regarding attribute usage:\n * https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer\n */\nclass Shader {\n  //#region Constructors\n\n  constructor(vertexScript, fragmentScript, uniforms, attributes) {\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_common_utils__[\"a\" /* isObjectAssigned */])(vertexScript) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_common_utils__[\"a\" /* isObjectAssigned */])(fragmentScript)) {\n      throw new Error(\"Vertex and Fragment scripts are required to create a shader, discarding..\");\n    }\n\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_common_utils__[\"a\" /* isObjectAssigned */])(__WEBPACK_IMPORTED_MODULE_0_core_gameManager__[\"a\" /* default */].renderContext)) {\n      throw new Error(\"The WebGL render context is not yet set, can't create shader.\");\n    }\n\n    // public properties:\n    this.uniforms = uniforms || {};\n    this.attributes = attributes || {};\n\n    // private properties:\n    this._gl = __WEBPACK_IMPORTED_MODULE_0_core_gameManager__[\"a\" /* default */].renderContext.getContext();\n    this._program = null;\n    this._vertexScript = vertexScript;\n    this._fragmentScript = fragmentScript;\n    this._textureCount = 1;\n    this._uid = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_common_utils__[\"d\" /* generateUID */])();\n    this._logger = new __WEBPACK_IMPORTED_MODULE_1_common_logger__[\"a\" /* default */](\"Shader\");\n\n    this.setup();\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  /**\n     * Setup shader logic\n     */\n  setup() {\n    if (this.compile()) {\n      let shaderManager = __WEBPACK_IMPORTED_MODULE_0_core_gameManager__[\"a\" /* default */].activeGame.getShaderManager();\n      if (shaderManager) {\n        shaderManager.useShader(this);\n      } else {\n        this._gl.useProgram(this._program);\n      }\n\n      // cache some script locations:\n      this.cacheUniformLocations(Object.keys(this.uniforms));\n      this.cacheAttributeLocations(Object.keys(this.attributes));\n    } else {\n      this._logger.error(\"Shader setup failed\");\n    }\n  }\n\n  /**\n     * Compiles the shader and generates the shader program\n     * @returns {boolean}\n     */\n  compile() {\n    let program = __WEBPACK_IMPORTED_MODULE_2_webgl_webGLUtils__[\"b\" /* GLU */].createProgramFromScripts(this._gl, this._vertexScript, this._fragmentScript);\n\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_common_utils__[\"a\" /* isObjectAssigned */])(program)) {\n      this._program = program;\n\n      return true;\n    } else {\n      program = null;\n    }\n\n    return false;\n  }\n\n  /**\n     * Gets the unique id of this shader instance\n     */\n  getUID() {\n    return this._uid;\n  }\n\n  /**\n     * Cache the uniform locations for faster re-utilization\n     * @param keys\n     */\n  cacheUniformLocations(keys) {\n    for (let i = 0; i < keys.length; ++i) {\n      let type = typeof this.uniforms[keys[i]];\n\n      if (type !== \"object\") {\n        this._logger.warn(\"Shader's uniform \" + keys[i] + \" is not an object.\");\n        continue;\n      }\n\n      this.uniforms[keys[i]]._location = this._gl.getUniformLocation(this._program, keys[i]);\n    }\n  }\n\n  /**\n     * Cache the attribute locations for faster re-utilization\n     * @param keys\n     */\n  cacheAttributeLocations(keys) {\n    for (let i = 0; i < keys.length; ++i) {\n      this.attributes[keys[i]] = this._gl.getAttribLocation(this._program, keys[i]);\n    }\n  }\n\n  /**\n     * Syncs all the uniforms attached to this shader\n     */\n  syncUniforms() {\n    this._textureCount = 1;\n\n    for (let key in this.uniforms) {\n      this.syncUniform(this.uniforms[key]);\n    }\n  }\n\n  /**\n     * Synchronizes/updates the values for the given uniform\n     * @param uniform\n     */\n  syncUniform(uniform) {\n    let location = uniform._location;\n    let value = uniform.value;\n    let gl = this._gl;\n\n    // depending on the uniform type, WebGL has different ways of synchronizing values\n    // the values can either be a Float32Array or JS Array object\n    switch (uniform.type) {\n      case \"b\":\n      case \"bool\":\n        {\n          gl.uniform1i(location, value ? 1 : 0);\n          break;\n        }\n      case \"i\":\n      case \"1i\":\n        {\n          gl.uniform1i(location, value);\n          break;\n        }\n      case \"2i\":\n        {\n          gl.uniform2i(location, value[0], value[1]);\n          break;\n        }\n      case \"3i\":\n        {\n          gl.uniform3i(location, value[0], value[1], value[2]);\n          break;\n        }\n      case \"4i\":\n        {\n          gl.uniform4i(location, value[0], value[1], value[2], value[3]);\n          break;\n        }\n      case \"f\":\n      case \"1f\":\n        {\n          gl.uniform1f(location, value);\n          break;\n        }\n      case \"2f\":\n        {\n          gl.uniform2f(location, value[0], value[1]);\n          break;\n        }\n      case \"3f\":\n        {\n          gl.uniform3f(location, value[0], value[1], value[2]);\n          break;\n        }\n      case \"4f\":\n        {\n          gl.uniform4f(location, value[0], value[1], value[2], value[3]);\n          break;\n        }\n      case \"m2\":\n      case \"mat2\":\n        {\n          // TODO: implement matrix2 transpose\n          gl.uniformMatrix2fv(location, uniform.transpose, value);\n          break;\n        }\n      case \"m3\":\n      case \"mat3\":\n        {\n          // TODO: implement matrix3 transpose\n          gl.uniformMatrix3fv(location, uniform.transpose, value);\n          break;\n        }\n      case \"m4\":\n      case \"mat4\":\n        {\n          // TODO: implement matrix4 transpose\n          gl.uniformMatrix4fv(location, uniform.transpose, value);\n          break;\n        }\n      case \"tex\":\n        {\n          if (!__WEBPACK_IMPORTED_MODULE_4_utility_utils__[\"a\" /* default */].isTexture2D(uniform.value) || !uniform.value.isReady()) {\n            this._logger.warn(\"Could not assign texture uniform because the texture isn't ready.\");\n            break;\n          }\n\n          gl.activeTexture(gl[\"TEXTURE\" + this._textureCount]);\n\n          let texture = uniform.value.getImageData()._glTextures[gl.id];\n\n          // the texture was already sampled?\n          if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3_common_utils__[\"a\" /* isObjectAssigned */])(texture)) {\n            // TODO: do stuff here? :D\n          }\n\n          break;\n        }\n      default:\n        {\n          this._logger.warn(\"Unknown uniform type: \" + uniform.type);\n          break;\n        }\n    }\n  }\n\n  getProgram() {\n    return this._program;\n  }\n\n  initSampler2D(uniform) {\n    if (!__WEBPACK_IMPORTED_MODULE_4_utility_utils__[\"a\" /* default */].isTexture2D(uniform.value) || !uniform.value.isReady()) {\n      this._logger.warn(\"Could not initialize sampler2D because the texture isn't ready.\");\n      return;\n    }\n\n    // TODO: check unused variables below\n    //let imgData = uniform.value.getImageData();\n    //let texture = imgData.baseTexture;\n  }\n\n  unload() {\n    // clean up program using WebGL flow\n    this._gl.deleteProgram(this._program);\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Shader;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 18 */
/* exports provided: default */
/* exports used: default */
/*!**********************************!*\
  !*** ./src/utility/objectify.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_logger__ = __webpack_require__(/*! common/logger */ 9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n\n\n\n\n/**\r\n * Objectify utility class\r\n */\nclass Objectify {\n  //#region Static Properties\n\n  //#endregion\n\n  //#region Constructors\n\n  constructor() {}\n\n  //#endregion\n\n  //#region Static Methods\n\n  /**\r\n     * Objectify an array:\r\n     * @param array\r\n     */\n  static array(array) {\n    let result = [];\n    array.forEach(function (elem) {\n      // this element has objectify implemented?\n      if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"e\" /* isFunction */])(elem.objectify)) {\n        try {\n          let obj = Objectify.create(elem);\n          if (obj) {\n            result.push(obj);\n          }\n        } catch (ex) {\n          Objectify._logger.error(\"Failed to objectify element: \" + ex);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\r\n     * Restores to the original state an array of objectified data\r\n     * @param array\r\n     */\n  static restoreArray(array) {\n    let result = [];\n    array.forEach(function (elem) {\n      if (elem._otype) {\n        result.push(Objectify.restore(elem, elem._otype));\n      }\n    });\n\n    return result;\n  }\n\n  /**\r\n     * Creates a valid JSON \"stringify\" data object\r\n     * @param object\r\n     * @param beautify\r\n     */\n  static createDataString(object, beautify) {\n    if (beautify) {\n      return JSON.stringify(Objectify.create(object), null, 4);\n    }\n\n    return JSON.stringify(Objectify.create(object));\n  }\n\n  /**\r\n     * Checks if a given object contains the objectify method\r\n     * @param object\r\n     */\n  static hasObjectify(object) {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"a\" /* isObjectAssigned */])(object) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"e\" /* isFunction */])(object.objectify);\n  }\n\n  /**\r\n     * Creates an objectify valid data object\r\n     * @param object\r\n     */\n  static create(object) {\n    let type = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"f\" /* getType */])(object);\n    let result;\n\n    // this object has objectify?\n    if (Objectify.hasObjectify(object)) {\n      result = object.objectify();\n    } else {\n      // nope, we can force to get the public properties then:\n      result = JSON.parse(JSON.stringify(object));\n    }\n\n    result._otype = type;\n\n    return result;\n  }\n\n  /**\r\n     * Restores an object of a given type\r\n     * @param data (the data to restore)\r\n     * @param typeName (the name of the type to restore - optional \r\n     * if _otype is defined in data)\r\n     */\n  static restore(data, typeName) {\n    try {\n      let type = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"a\" /* isObjectAssigned */])(typeName) ? typeName : data._otype;\n      type = eval(type);\n      if (type && type.restore) {\n        return type.restore(data);\n      }\n    } catch (ex) {\n      Objectify._logger.error(\"Failed to restore element: \" + ex);\n    }\n  }\n\n  /**\r\n     * Restores an object from a string\r\n     * @param jsonString\r\n     * @param typeName\r\n     */\n  static restoreFromString(jsonString, typeName) {\n    return Objectify.restore(JSON.parse(jsonString), typeName);\n  }\n\n  /**\r\n     * Extends the properties of the objA with the properties of objB\r\n     * @param objA\r\n     * @param objB\r\n     * @returns {*}\r\n     */\n  static extend(objA, objB) {\n    Object.keys(objB).forEach(function (prop) {\n      objA[prop] = objB[prop];\n    });\n\n    return objA;\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Objectify;\n\n\n//  TODO: place in constructor and add a static get for it? test in editor...\nObjectify._logger = new __WEBPACK_IMPORTED_MODULE_0_common_logger__[\"a\" /* default */](\"Objectify\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3V0aWxpdHkvb2JqZWN0aWZ5LmpzPzY5ZjUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExvZ2dlciBmcm9tIFwiY29tbW9uL2xvZ2dlclwiO1xyXG5cclxuaW1wb3J0IHsgaXNGdW5jdGlvbiwgaXNPYmplY3RBc3NpZ25lZCwgZ2V0VHlwZSB9IGZyb20gXCJjb21tb24vdXRpbHNcIjtcclxuXHJcbi8qKlxyXG4gKiBPYmplY3RpZnkgdXRpbGl0eSBjbGFzc1xyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT2JqZWN0aWZ5IHtcclxuICAvLyNyZWdpb24gU3RhdGljIFByb3BlcnRpZXNcclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7fVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIFN0YXRpYyBNZXRob2RzXHJcblxyXG4gIC8qKlxyXG4gICAgICogT2JqZWN0aWZ5IGFuIGFycmF5OlxyXG4gICAgICogQHBhcmFtIGFycmF5XHJcbiAgICAgKi9cclxuICBzdGF0aWMgYXJyYXkoYXJyYXkpIHtcclxuICAgIGxldCByZXN1bHQgPSBbXTtcclxuICAgIGFycmF5LmZvckVhY2goZnVuY3Rpb24oZWxlbSkge1xyXG4gICAgICAvLyB0aGlzIGVsZW1lbnQgaGFzIG9iamVjdGlmeSBpbXBsZW1lbnRlZD9cclxuICAgICAgaWYgKGlzRnVuY3Rpb24oZWxlbS5vYmplY3RpZnkpKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgIGxldCBvYmogPSBPYmplY3RpZnkuY3JlYXRlKGVsZW0pO1xyXG4gICAgICAgICAgaWYgKG9iaikge1xyXG4gICAgICAgICAgICByZXN1bHQucHVzaChvYmopO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0gY2F0Y2ggKGV4KSB7XHJcbiAgICAgICAgICBPYmplY3RpZnkuX2xvZ2dlci5lcnJvcihcIkZhaWxlZCB0byBvYmplY3RpZnkgZWxlbWVudDogXCIgKyBleCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBSZXN0b3JlcyB0byB0aGUgb3JpZ2luYWwgc3RhdGUgYW4gYXJyYXkgb2Ygb2JqZWN0aWZpZWQgZGF0YVxyXG4gICAgICogQHBhcmFtIGFycmF5XHJcbiAgICAgKi9cclxuICBzdGF0aWMgcmVzdG9yZUFycmF5KGFycmF5KSB7XHJcbiAgICBsZXQgcmVzdWx0ID0gW107XHJcbiAgICBhcnJheS5mb3JFYWNoKGZ1bmN0aW9uKGVsZW0pIHtcclxuICAgICAgaWYgKGVsZW0uX290eXBlKSB7XHJcbiAgICAgICAgcmVzdWx0LnB1c2goT2JqZWN0aWZ5LnJlc3RvcmUoZWxlbSwgZWxlbS5fb3R5cGUpKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIHZhbGlkIEpTT04gXCJzdHJpbmdpZnlcIiBkYXRhIG9iamVjdFxyXG4gICAgICogQHBhcmFtIG9iamVjdFxyXG4gICAgICogQHBhcmFtIGJlYXV0aWZ5XHJcbiAgICAgKi9cclxuICBzdGF0aWMgY3JlYXRlRGF0YVN0cmluZyhvYmplY3QsIGJlYXV0aWZ5KSB7XHJcbiAgICBpZiAoYmVhdXRpZnkpIHtcclxuICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KE9iamVjdGlmeS5jcmVhdGUob2JqZWN0KSwgbnVsbCwgNCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KE9iamVjdGlmeS5jcmVhdGUob2JqZWN0KSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIENoZWNrcyBpZiBhIGdpdmVuIG9iamVjdCBjb250YWlucyB0aGUgb2JqZWN0aWZ5IG1ldGhvZFxyXG4gICAgICogQHBhcmFtIG9iamVjdFxyXG4gICAgICovXHJcbiAgc3RhdGljIGhhc09iamVjdGlmeShvYmplY3QpIHtcclxuICAgIHJldHVybiBpc09iamVjdEFzc2lnbmVkKG9iamVjdCkgJiYgaXNGdW5jdGlvbihvYmplY3Qub2JqZWN0aWZ5KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhbiBvYmplY3RpZnkgdmFsaWQgZGF0YSBvYmplY3RcclxuICAgICAqIEBwYXJhbSBvYmplY3RcclxuICAgICAqL1xyXG4gIHN0YXRpYyBjcmVhdGUob2JqZWN0KSB7XHJcbiAgICBsZXQgdHlwZSA9IGdldFR5cGUob2JqZWN0KTtcclxuICAgIGxldCByZXN1bHQ7XHJcblxyXG4gICAgLy8gdGhpcyBvYmplY3QgaGFzIG9iamVjdGlmeT9cclxuICAgIGlmIChPYmplY3RpZnkuaGFzT2JqZWN0aWZ5KG9iamVjdCkpIHtcclxuICAgICAgcmVzdWx0ID0gb2JqZWN0Lm9iamVjdGlmeSgpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gbm9wZSwgd2UgY2FuIGZvcmNlIHRvIGdldCB0aGUgcHVibGljIHByb3BlcnRpZXMgdGhlbjpcclxuICAgICAgcmVzdWx0ID0gSlNPTi5wYXJzZShKU09OLnN0cmluZ2lmeShvYmplY3QpKTtcclxuICAgIH1cclxuXHJcbiAgICByZXN1bHQuX290eXBlID0gdHlwZTtcclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBSZXN0b3JlcyBhbiBvYmplY3Qgb2YgYSBnaXZlbiB0eXBlXHJcbiAgICAgKiBAcGFyYW0gZGF0YSAodGhlIGRhdGEgdG8gcmVzdG9yZSlcclxuICAgICAqIEBwYXJhbSB0eXBlTmFtZSAodGhlIG5hbWUgb2YgdGhlIHR5cGUgdG8gcmVzdG9yZSAtIG9wdGlvbmFsIFxyXG4gICAgICogaWYgX290eXBlIGlzIGRlZmluZWQgaW4gZGF0YSlcclxuICAgICAqL1xyXG4gIHN0YXRpYyByZXN0b3JlKGRhdGEsIHR5cGVOYW1lKSB7XHJcbiAgICB0cnkge1xyXG4gICAgICBsZXQgdHlwZSA9IGlzT2JqZWN0QXNzaWduZWQodHlwZU5hbWUpID8gdHlwZU5hbWUgOiBkYXRhLl9vdHlwZTtcclxuICAgICAgdHlwZSA9IGV2YWwodHlwZSk7XHJcbiAgICAgIGlmICh0eXBlICYmIHR5cGUucmVzdG9yZSkge1xyXG4gICAgICAgIHJldHVybiB0eXBlLnJlc3RvcmUoZGF0YSk7XHJcbiAgICAgIH1cclxuICAgIH0gY2F0Y2ggKGV4KSB7XHJcbiAgICAgIE9iamVjdGlmeS5fbG9nZ2VyLmVycm9yKFwiRmFpbGVkIHRvIHJlc3RvcmUgZWxlbWVudDogXCIgKyBleCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIFJlc3RvcmVzIGFuIG9iamVjdCBmcm9tIGEgc3RyaW5nXHJcbiAgICAgKiBAcGFyYW0ganNvblN0cmluZ1xyXG4gICAgICogQHBhcmFtIHR5cGVOYW1lXHJcbiAgICAgKi9cclxuICBzdGF0aWMgcmVzdG9yZUZyb21TdHJpbmcoanNvblN0cmluZywgdHlwZU5hbWUpIHtcclxuICAgIHJldHVybiBPYmplY3RpZnkucmVzdG9yZShKU09OLnBhcnNlKGpzb25TdHJpbmcpLCB0eXBlTmFtZSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIEV4dGVuZHMgdGhlIHByb3BlcnRpZXMgb2YgdGhlIG9iakEgd2l0aCB0aGUgcHJvcGVydGllcyBvZiBvYmpCXHJcbiAgICAgKiBAcGFyYW0gb2JqQVxyXG4gICAgICogQHBhcmFtIG9iakJcclxuICAgICAqIEByZXR1cm5zIHsqfVxyXG4gICAgICovXHJcbiAgc3RhdGljIGV4dGVuZChvYmpBLCBvYmpCKSB7XHJcbiAgICBPYmplY3Qua2V5cyhvYmpCKS5mb3JFYWNoKGZ1bmN0aW9uKHByb3ApIHtcclxuICAgICAgb2JqQVtwcm9wXSA9IG9iakJbcHJvcF07XHJcbiAgICB9KTtcclxuXHJcbiAgICByZXR1cm4gb2JqQTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG59XHJcblxyXG4vLyAgVE9ETzogcGxhY2UgaW4gY29uc3RydWN0b3IgYW5kIGFkZCBhIHN0YXRpYyBnZXQgZm9yIGl0PyB0ZXN0IGluIGVkaXRvci4uLlxyXG5PYmplY3RpZnkuX2xvZ2dlciA9IG5ldyBMb2dnZXIoXCJPYmplY3RpZnlcIik7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvdXRpbGl0eS9vYmplY3RpZnkuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF0SUE7QUFBQTtBQUFBO0FBQ0E7QUF3SUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 19 */
/* no static exports found */
/* all exports used */
/*!**************************************!*\
  !*** ./~/matter-js/src/body/Body.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = __webpack_require__(/*! ../geometry/Vertices */ 7);\nvar Vector = __webpack_require__(/*! ../geometry/Vector */ 3);\nvar Sleeping = __webpack_require__(/*! ../core/Sleeping */ 21);\nvar Render = __webpack_require__(/*! ../render/Render */ 36);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\nvar Bounds = __webpack_require__(/*! ../geometry/Bounds */ 2);\nvar Axes = __webpack_require__(/*! ../geometry/Axes */ 35);\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 1.5\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} options\n     */\n    var _initProperties = function(body, options) {\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#eeeeee' : Common.choose(['#556270', '#4ECDC4', '#C7F464', '#FF6B6B', '#C44D58'])),\n            defaultStrokeStyle = Common.shadeColor(defaultFillStyle, -20);\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass and density are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass is automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = _totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     */\n    Body.rotate = function(body, rotation) {\n        Body.setAngle(body, body.angle + rotation);\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, body.position);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n\n            if (!body.isStatic) {\n                part.area = Vertices.area(part.vertices);\n                Body.setMass(part, body.density * part.area);\n\n                // update inertia (requires vertices to be at origin)\n                Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n                Body.setInertia(part, Vertices.inertia(part.vertices, part.mass));\n                Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n            }\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n\n        if (!body.isStatic) {\n            var total = _totalProperties(body);\n            body.area = total.area;\n            Body.setMass(body, total.mass);\n            Body.setInertia(body, total.inertia);\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    var _totalProperties = function(body) {\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            properties.mass += part.mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, \n                                           Vector.mult(part.position, part.mass !== Infinity ? part.mass : 1));\n        }\n\n        properties.centre = Vector.div(properties.centre, \n                                       properties.mass !== Infinity ? properties.mass : body.parts.length);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 1.5\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 20 */
/* no static exports found */
/* all exports used */
/*!**************************************************!*\
  !*** ./~/matter-js/src/constraint/Constraint.js ***!
  \**************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\n// TODO: fix instability issues with torque\n// TODO: linked constraints\n// TODO: breakable constraints\n// TODO: collision constraints\n// TODO: allow constrained bodies to sleep\n// TODO: handle 0 length constraints properly\n// TODO: impulse caching and warming\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = __webpack_require__(/*! ../geometry/Vertices */ 7);\nvar Vector = __webpack_require__(/*! ../geometry/Vector */ 3);\nvar Sleeping = __webpack_require__(/*! ../core/Sleeping */ 21);\nvar Bounds = __webpack_require__(/*! ../geometry/Bounds */ 2);\nvar Axes = __webpack_require__(/*! ../geometry/Axes */ 35);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\n\n(function() {\n\n    var _minLength = 0.000001,\n        _minDifference = 0.001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = constraint.length || length || _minLength;\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#666'\n        };\n        \n        constraint.render = Common.extend(render, constraint.render);\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || 1;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n\n        return constraint;\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        for (var i = 0; i < constraints.length; i++) {\n            Constraint.solve(constraints[i], timeScale);\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            constraint.pointA = Vector.rotate(pointA, bodyA.angle - constraint.angleA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            constraint.pointB = Vector.rotate(pointB, bodyB.angle - constraint.angleB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength === 0)\n            currentLength = _minLength;\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            normal = Vector.div(delta, currentLength),\n            force = Vector.mult(delta, difference * 0.5 * constraint.stiffness * timeScale * timeScale);\n        \n        // if difference is very small, we can skip\n        if (Math.abs(1 - (currentLength / constraint.length)) < _minDifference * timeScale)\n            return;\n\n        var velocityPointA,\n            velocityPointB,\n            offsetA,\n            offsetB,\n            oAn,\n            oBn,\n            bodyADenom,\n            bodyBDenom;\n    \n        if (bodyA && !bodyA.isStatic) {\n            // point body offset\n            offsetA = { \n                x: pointAWorld.x - bodyA.position.x + force.x, \n                y: pointAWorld.y - bodyA.position.y + force.y\n            };\n            \n            // update velocity\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            \n            // find point velocity and body mass\n            velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity));\n            oAn = Vector.dot(offsetA, normal);\n            bodyADenom = bodyA.inverseMass + bodyA.inverseInertia * oAn * oAn;\n        } else {\n            velocityPointA = { x: 0, y: 0 };\n            bodyADenom = bodyA ? bodyA.inverseMass : 0;\n        }\n            \n        if (bodyB && !bodyB.isStatic) {\n            // point body offset\n            offsetB = { \n                x: pointBWorld.x - bodyB.position.x - force.x, \n                y: pointBWorld.y - bodyB.position.y - force.y \n            };\n            \n            // update velocity\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // find point velocity and body mass\n            velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity));\n            oBn = Vector.dot(offsetB, normal);\n            bodyBDenom = bodyB.inverseMass + bodyB.inverseInertia * oBn * oBn;\n        } else {\n            velocityPointB = { x: 0, y: 0 };\n            bodyBDenom = bodyB ? bodyB.inverseMass : 0;\n        }\n        \n        var relativeVelocity = Vector.sub(velocityPointB, velocityPointA),\n            normalImpulse = Vector.dot(normal, relativeVelocity) / (bodyADenom + bodyBDenom);\n    \n        if (normalImpulse > 0) normalImpulse = 0;\n    \n        var normalVelocity = {\n            x: normal.x * normalImpulse, \n            y: normal.y * normalImpulse\n        };\n\n        var torque;\n \n        if (bodyA && !bodyA.isStatic) {\n            torque = Vector.cross(offsetA, normalVelocity) * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x;\n            bodyA.constraintImpulse.y -= force.y;\n            bodyA.constraintImpulse.angle += torque;\n\n            // apply forces\n            bodyA.position.x -= force.x;\n            bodyA.position.y -= force.y;\n            bodyA.angle += torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            torque = Vector.cross(offsetB, normalVelocity) * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x;\n            bodyB.constraintImpulse.y += force.y;\n            bodyB.constraintImpulse.angle -= torque;\n            \n            // apply forces\n            bodyB.position.x += force.x;\n            bodyB.position.y += force.y;\n            bodyB.angle -= torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            impulse.angle = 0;\n            impulse.x = 0;\n            impulse.y = 0;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 21 */
/* no static exports found */
/* all exports used */
/*!******************************************!*\
  !*** ./~/matter-js/src/core/Sleeping.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = __webpack_require__(/*! ./Events */ 13);\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hdHRlci1qcy9zcmMvY29yZS9TbGVlcGluZy5qcz9hZTI3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuKiBUaGUgYE1hdHRlci5TbGVlcGluZ2AgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgdG8gbWFuYWdlIHRoZSBzbGVlcGluZyBzdGF0ZSBvZiBib2RpZXMuXG4qXG4qIEBjbGFzcyBTbGVlcGluZ1xuKi9cblxudmFyIFNsZWVwaW5nID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gU2xlZXBpbmc7XG5cbnZhciBFdmVudHMgPSByZXF1aXJlKCcuL0V2ZW50cycpO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICBTbGVlcGluZy5fbW90aW9uV2FrZVRocmVzaG9sZCA9IDAuMTg7XG4gICAgU2xlZXBpbmcuX21vdGlvblNsZWVwVGhyZXNob2xkID0gMC4wODtcbiAgICBTbGVlcGluZy5fbWluQmlhcyA9IDAuOTtcblxuICAgIC8qKlxuICAgICAqIFB1dHMgYm9kaWVzIHRvIHNsZWVwIG9yIHdha2VzIHRoZW0gdXAgZGVwZW5kaW5nIG9uIHRoZWlyIG1vdGlvbi5cbiAgICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgICAqIEBwYXJhbSB7Ym9keVtdfSBib2RpZXNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdGltZVNjYWxlXG4gICAgICovXG4gICAgU2xlZXBpbmcudXBkYXRlID0gZnVuY3Rpb24oYm9kaWVzLCB0aW1lU2NhbGUpIHtcbiAgICAgICAgdmFyIHRpbWVGYWN0b3IgPSB0aW1lU2NhbGUgKiB0aW1lU2NhbGUgKiB0aW1lU2NhbGU7XG5cbiAgICAgICAgLy8gdXBkYXRlIGJvZGllcyBzbGVlcGluZyBzdGF0dXNcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2RpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBib2R5ID0gYm9kaWVzW2ldLFxuICAgICAgICAgICAgICAgIG1vdGlvbiA9IGJvZHkuc3BlZWQgKiBib2R5LnNwZWVkICsgYm9keS5hbmd1bGFyU3BlZWQgKiBib2R5LmFuZ3VsYXJTcGVlZDtcblxuICAgICAgICAgICAgLy8gd2FrZSB1cCBib2RpZXMgaWYgdGhleSBoYXZlIGEgZm9yY2UgYXBwbGllZFxuICAgICAgICAgICAgaWYgKGJvZHkuZm9yY2UueCAhPT0gMCB8fCBib2R5LmZvcmNlLnkgIT09IDApIHtcbiAgICAgICAgICAgICAgICBTbGVlcGluZy5zZXQoYm9keSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgbWluTW90aW9uID0gTWF0aC5taW4oYm9keS5tb3Rpb24sIG1vdGlvbiksXG4gICAgICAgICAgICAgICAgbWF4TW90aW9uID0gTWF0aC5tYXgoYm9keS5tb3Rpb24sIG1vdGlvbik7XG4gICAgICAgIFxuICAgICAgICAgICAgLy8gYmlhc2VkIGF2ZXJhZ2UgbW90aW9uIGVzdGltYXRpb24gYmV0d2VlbiBmcmFtZXNcbiAgICAgICAgICAgIGJvZHkubW90aW9uID0gU2xlZXBpbmcuX21pbkJpYXMgKiBtaW5Nb3Rpb24gKyAoMSAtIFNsZWVwaW5nLl9taW5CaWFzKSAqIG1heE1vdGlvbjtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKGJvZHkuc2xlZXBUaHJlc2hvbGQgPiAwICYmIGJvZHkubW90aW9uIDwgU2xlZXBpbmcuX21vdGlvblNsZWVwVGhyZXNob2xkICogdGltZUZhY3Rvcikge1xuICAgICAgICAgICAgICAgIGJvZHkuc2xlZXBDb3VudGVyICs9IDE7XG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgaWYgKGJvZHkuc2xlZXBDb3VudGVyID49IGJvZHkuc2xlZXBUaHJlc2hvbGQpXG4gICAgICAgICAgICAgICAgICAgIFNsZWVwaW5nLnNldChib2R5LCB0cnVlKTtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoYm9keS5zbGVlcENvdW50ZXIgPiAwKSB7XG4gICAgICAgICAgICAgICAgYm9keS5zbGVlcENvdW50ZXIgLT0gMTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBHaXZlbiBhIHNldCBvZiBjb2xsaWRpbmcgcGFpcnMsIHdha2VzIHRoZSBzbGVlcGluZyBib2RpZXMgaW52b2x2ZWQuXG4gICAgICogQG1ldGhvZCBhZnRlckNvbGxpc2lvbnNcbiAgICAgKiBAcGFyYW0ge3BhaXJbXX0gcGFpcnNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdGltZVNjYWxlXG4gICAgICovXG4gICAgU2xlZXBpbmcuYWZ0ZXJDb2xsaXNpb25zID0gZnVuY3Rpb24ocGFpcnMsIHRpbWVTY2FsZSkge1xuICAgICAgICB2YXIgdGltZUZhY3RvciA9IHRpbWVTY2FsZSAqIHRpbWVTY2FsZSAqIHRpbWVTY2FsZTtcblxuICAgICAgICAvLyB3YWtlIHVwIGJvZGllcyBpbnZvbHZlZCBpbiBjb2xsaXNpb25zXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgcGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBwYWlyID0gcGFpcnNbaV07XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIGRvbid0IHdha2UgaW5hY3RpdmUgcGFpcnNcbiAgICAgICAgICAgIGlmICghcGFpci5pc0FjdGl2ZSlcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcblxuICAgICAgICAgICAgdmFyIGNvbGxpc2lvbiA9IHBhaXIuY29sbGlzaW9uLFxuICAgICAgICAgICAgICAgIGJvZHlBID0gY29sbGlzaW9uLmJvZHlBLnBhcmVudCwgXG4gICAgICAgICAgICAgICAgYm9keUIgPSBjb2xsaXNpb24uYm9keUIucGFyZW50O1xuICAgICAgICBcbiAgICAgICAgICAgIC8vIGRvbid0IHdha2UgaWYgYXQgbGVhc3Qgb25lIGJvZHkgaXMgc3RhdGljXG4gICAgICAgICAgICBpZiAoKGJvZHlBLmlzU2xlZXBpbmcgJiYgYm9keUIuaXNTbGVlcGluZykgfHwgYm9keUEuaXNTdGF0aWMgfHwgYm9keUIuaXNTdGF0aWMpXG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIFxuICAgICAgICAgICAgaWYgKGJvZHlBLmlzU2xlZXBpbmcgfHwgYm9keUIuaXNTbGVlcGluZykge1xuICAgICAgICAgICAgICAgIHZhciBzbGVlcGluZ0JvZHkgPSAoYm9keUEuaXNTbGVlcGluZyAmJiAhYm9keUEuaXNTdGF0aWMpID8gYm9keUEgOiBib2R5QixcbiAgICAgICAgICAgICAgICAgICAgbW92aW5nQm9keSA9IHNsZWVwaW5nQm9keSA9PT0gYm9keUEgPyBib2R5QiA6IGJvZHlBO1xuXG4gICAgICAgICAgICAgICAgaWYgKCFzbGVlcGluZ0JvZHkuaXNTdGF0aWMgJiYgbW92aW5nQm9keS5tb3Rpb24gPiBTbGVlcGluZy5fbW90aW9uV2FrZVRocmVzaG9sZCAqIHRpbWVGYWN0b3IpIHtcbiAgICAgICAgICAgICAgICAgICAgU2xlZXBpbmcuc2V0KHNsZWVwaW5nQm9keSwgZmFsc2UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG4gIFxuICAgIC8qKlxuICAgICAqIFNldCBhIGJvZHkgYXMgc2xlZXBpbmcgb3IgYXdha2UuXG4gICAgICogQG1ldGhvZCBzZXRcbiAgICAgKiBAcGFyYW0ge2JvZHl9IGJvZHlcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGlzU2xlZXBpbmdcbiAgICAgKi9cbiAgICBTbGVlcGluZy5zZXQgPSBmdW5jdGlvbihib2R5LCBpc1NsZWVwaW5nKSB7XG4gICAgICAgIHZhciB3YXNTbGVlcGluZyA9IGJvZHkuaXNTbGVlcGluZztcblxuICAgICAgICBpZiAoaXNTbGVlcGluZykge1xuICAgICAgICAgICAgYm9keS5pc1NsZWVwaW5nID0gdHJ1ZTtcbiAgICAgICAgICAgIGJvZHkuc2xlZXBDb3VudGVyID0gYm9keS5zbGVlcFRocmVzaG9sZDtcblxuICAgICAgICAgICAgYm9keS5wb3NpdGlvbkltcHVsc2UueCA9IDA7XG4gICAgICAgICAgICBib2R5LnBvc2l0aW9uSW1wdWxzZS55ID0gMDtcblxuICAgICAgICAgICAgYm9keS5wb3NpdGlvblByZXYueCA9IGJvZHkucG9zaXRpb24ueDtcbiAgICAgICAgICAgIGJvZHkucG9zaXRpb25QcmV2LnkgPSBib2R5LnBvc2l0aW9uLnk7XG5cbiAgICAgICAgICAgIGJvZHkuYW5nbGVQcmV2ID0gYm9keS5hbmdsZTtcbiAgICAgICAgICAgIGJvZHkuc3BlZWQgPSAwO1xuICAgICAgICAgICAgYm9keS5hbmd1bGFyU3BlZWQgPSAwO1xuICAgICAgICAgICAgYm9keS5tb3Rpb24gPSAwO1xuXG4gICAgICAgICAgICBpZiAoIXdhc1NsZWVwaW5nKSB7XG4gICAgICAgICAgICAgICAgRXZlbnRzLnRyaWdnZXIoYm9keSwgJ3NsZWVwU3RhcnQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGJvZHkuaXNTbGVlcGluZyA9IGZhbHNlO1xuICAgICAgICAgICAgYm9keS5zbGVlcENvdW50ZXIgPSAwO1xuXG4gICAgICAgICAgICBpZiAod2FzU2xlZXBpbmcpIHtcbiAgICAgICAgICAgICAgICBFdmVudHMudHJpZ2dlcihib2R5LCAnc2xlZXBFbmQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbn0pKCk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbWF0dGVyLWpzL3NyYy9jb3JlL1NsZWVwaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSAyMVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 22 */
/* no static exports found */
/* all exports used */
/*!****************************************!*\
  !*** ./~/matter-js/src/module/main.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var Matter = module.exports = {};\nMatter.version = 'master';\n\nMatter.Body = __webpack_require__(/*! ../body/Body */ 19);\nMatter.Composite = __webpack_require__(/*! ../body/Composite */ 6);\nMatter.World = __webpack_require__(/*! ../body/World */ 66);\n\nMatter.Contact = __webpack_require__(/*! ../collision/Contact */ 67);\nMatter.Detector = __webpack_require__(/*! ../collision/Detector */ 31);\nMatter.Grid = __webpack_require__(/*! ../collision/Grid */ 32);\nMatter.Pairs = __webpack_require__(/*! ../collision/Pairs */ 68);\nMatter.Pair = __webpack_require__(/*! ../collision/Pair */ 25);\nMatter.Query = __webpack_require__(/*! ../collision/Query */ 118);\nMatter.Resolver = __webpack_require__(/*! ../collision/Resolver */ 69);\nMatter.SAT = __webpack_require__(/*! ../collision/SAT */ 33);\n\nMatter.Constraint = __webpack_require__(/*! ../constraint/Constraint */ 20);\nMatter.MouseConstraint = __webpack_require__(/*! ../constraint/MouseConstraint */ 119);\n\nMatter.Common = __webpack_require__(/*! ../core/Common */ 1);\nMatter.Engine = __webpack_require__(/*! ../core/Engine */ 70);\nMatter.Events = __webpack_require__(/*! ../core/Events */ 13);\nMatter.Mouse = __webpack_require__(/*! ../core/Mouse */ 72);\nMatter.Runner = __webpack_require__(/*! ../core/Runner */ 120);\nMatter.Sleeping = __webpack_require__(/*! ../core/Sleeping */ 21);\n\n// @if DEBUG\nMatter.Metrics = __webpack_require__(/*! ../core/Metrics */ 71);\n// @endif\n\nMatter.Bodies = __webpack_require__(/*! ../factory/Bodies */ 34);\nMatter.Composites = __webpack_require__(/*! ../factory/Composites */ 121);\n\nMatter.Axes = __webpack_require__(/*! ../geometry/Axes */ 35);\nMatter.Bounds = __webpack_require__(/*! ../geometry/Bounds */ 2);\nMatter.Svg = __webpack_require__(/*! ../geometry/Svg */ 122);\nMatter.Vector = __webpack_require__(/*! ../geometry/Vector */ 3);\nMatter.Vertices = __webpack_require__(/*! ../geometry/Vertices */ 7);\n\nMatter.Render = __webpack_require__(/*! ../render/Render */ 36);\nMatter.RenderPixi = __webpack_require__(/*! ../render/RenderPixi */ 123);\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hdHRlci1qcy9zcmMvbW9kdWxlL21haW4uanM/ZmMyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgTWF0dGVyID0gbW9kdWxlLmV4cG9ydHMgPSB7fTtcbk1hdHRlci52ZXJzaW9uID0gJ21hc3Rlcic7XG5cbk1hdHRlci5Cb2R5ID0gcmVxdWlyZSgnLi4vYm9keS9Cb2R5Jyk7XG5NYXR0ZXIuQ29tcG9zaXRlID0gcmVxdWlyZSgnLi4vYm9keS9Db21wb3NpdGUnKTtcbk1hdHRlci5Xb3JsZCA9IHJlcXVpcmUoJy4uL2JvZHkvV29ybGQnKTtcblxuTWF0dGVyLkNvbnRhY3QgPSByZXF1aXJlKCcuLi9jb2xsaXNpb24vQ29udGFjdCcpO1xuTWF0dGVyLkRldGVjdG9yID0gcmVxdWlyZSgnLi4vY29sbGlzaW9uL0RldGVjdG9yJyk7XG5NYXR0ZXIuR3JpZCA9IHJlcXVpcmUoJy4uL2NvbGxpc2lvbi9HcmlkJyk7XG5NYXR0ZXIuUGFpcnMgPSByZXF1aXJlKCcuLi9jb2xsaXNpb24vUGFpcnMnKTtcbk1hdHRlci5QYWlyID0gcmVxdWlyZSgnLi4vY29sbGlzaW9uL1BhaXInKTtcbk1hdHRlci5RdWVyeSA9IHJlcXVpcmUoJy4uL2NvbGxpc2lvbi9RdWVyeScpO1xuTWF0dGVyLlJlc29sdmVyID0gcmVxdWlyZSgnLi4vY29sbGlzaW9uL1Jlc29sdmVyJyk7XG5NYXR0ZXIuU0FUID0gcmVxdWlyZSgnLi4vY29sbGlzaW9uL1NBVCcpO1xuXG5NYXR0ZXIuQ29uc3RyYWludCA9IHJlcXVpcmUoJy4uL2NvbnN0cmFpbnQvQ29uc3RyYWludCcpO1xuTWF0dGVyLk1vdXNlQ29uc3RyYWludCA9IHJlcXVpcmUoJy4uL2NvbnN0cmFpbnQvTW91c2VDb25zdHJhaW50Jyk7XG5cbk1hdHRlci5Db21tb24gPSByZXF1aXJlKCcuLi9jb3JlL0NvbW1vbicpO1xuTWF0dGVyLkVuZ2luZSA9IHJlcXVpcmUoJy4uL2NvcmUvRW5naW5lJyk7XG5NYXR0ZXIuRXZlbnRzID0gcmVxdWlyZSgnLi4vY29yZS9FdmVudHMnKTtcbk1hdHRlci5Nb3VzZSA9IHJlcXVpcmUoJy4uL2NvcmUvTW91c2UnKTtcbk1hdHRlci5SdW5uZXIgPSByZXF1aXJlKCcuLi9jb3JlL1J1bm5lcicpO1xuTWF0dGVyLlNsZWVwaW5nID0gcmVxdWlyZSgnLi4vY29yZS9TbGVlcGluZycpO1xuXG4vLyBAaWYgREVCVUdcbk1hdHRlci5NZXRyaWNzID0gcmVxdWlyZSgnLi4vY29yZS9NZXRyaWNzJyk7XG4vLyBAZW5kaWZcblxuTWF0dGVyLkJvZGllcyA9IHJlcXVpcmUoJy4uL2ZhY3RvcnkvQm9kaWVzJyk7XG5NYXR0ZXIuQ29tcG9zaXRlcyA9IHJlcXVpcmUoJy4uL2ZhY3RvcnkvQ29tcG9zaXRlcycpO1xuXG5NYXR0ZXIuQXhlcyA9IHJlcXVpcmUoJy4uL2dlb21ldHJ5L0F4ZXMnKTtcbk1hdHRlci5Cb3VuZHMgPSByZXF1aXJlKCcuLi9nZW9tZXRyeS9Cb3VuZHMnKTtcbk1hdHRlci5TdmcgPSByZXF1aXJlKCcuLi9nZW9tZXRyeS9TdmcnKTtcbk1hdHRlci5WZWN0b3IgPSByZXF1aXJlKCcuLi9nZW9tZXRyeS9WZWN0b3InKTtcbk1hdHRlci5WZXJ0aWNlcyA9IHJlcXVpcmUoJy4uL2dlb21ldHJ5L1ZlcnRpY2VzJyk7XG5cbk1hdHRlci5SZW5kZXIgPSByZXF1aXJlKCcuLi9yZW5kZXIvUmVuZGVyJyk7XG5NYXR0ZXIuUmVuZGVyUGl4aSA9IHJlcXVpcmUoJy4uL3JlbmRlci9SZW5kZXJQaXhpJyk7XG5cbi8vIGFsaWFzZXNcblxuTWF0dGVyLldvcmxkLmFkZCA9IE1hdHRlci5Db21wb3NpdGUuYWRkO1xuTWF0dGVyLldvcmxkLnJlbW92ZSA9IE1hdHRlci5Db21wb3NpdGUucmVtb3ZlO1xuTWF0dGVyLldvcmxkLmFkZENvbXBvc2l0ZSA9IE1hdHRlci5Db21wb3NpdGUuYWRkQ29tcG9zaXRlO1xuTWF0dGVyLldvcmxkLmFkZEJvZHkgPSBNYXR0ZXIuQ29tcG9zaXRlLmFkZEJvZHk7XG5NYXR0ZXIuV29ybGQuYWRkQ29uc3RyYWludCA9IE1hdHRlci5Db21wb3NpdGUuYWRkQ29uc3RyYWludDtcbk1hdHRlci5Xb3JsZC5jbGVhciA9IE1hdHRlci5Db21wb3NpdGUuY2xlYXI7XG5NYXR0ZXIuRW5naW5lLnJ1biA9IE1hdHRlci5SdW5uZXIucnVuO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L21hdHRlci1qcy9zcmMvbW9kdWxlL21haW4uanNcbi8vIG1vZHVsZSBpZCA9IDIyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 23 */
/* exports provided: CONSTANTS */
/* exports used: CONSTANTS */
/*!*********************************!*\
  !*** ./src/common/constants.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("// alias for scarlett constants:\nconst CONSTANTS = {\n  WEBGL: \"webgl\",\n  EXECUTION_PHASES: {\n    WAITING: 0,\n    UPDATE: 10,\n    SCENE_UPDATE: 11,\n    LATE_UPDATE: 12,\n    RENDER: 13,\n    SCENE_RENDER: 14,\n    LATE_RENDER: 15\n  },\n  CONTENT_EXTENSIONS: {\n    ATLAS: \".atl\"\n  },\n  EVENTS: {\n    CONTENT_ASSET_LOADED: \"editor_updatePropertyEditorView\"\n  }\n};\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = CONSTANTS;\n\n\n// function \"quickies\" holder\n//let sc = {};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1vbi9jb25zdGFudHMuanM/OWUzMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBhbGlhcyBmb3Igc2NhcmxldHQgY29uc3RhbnRzOlxyXG5leHBvcnQgY29uc3QgQ09OU1RBTlRTID0ge1xyXG4gIFdFQkdMOiBcIndlYmdsXCIsXHJcbiAgRVhFQ1VUSU9OX1BIQVNFUzoge1xyXG4gICAgV0FJVElORzogMCxcclxuICAgIFVQREFURTogMTAsXHJcbiAgICBTQ0VORV9VUERBVEU6IDExLFxyXG4gICAgTEFURV9VUERBVEU6IDEyLFxyXG4gICAgUkVOREVSOiAxMyxcclxuICAgIFNDRU5FX1JFTkRFUjogMTQsXHJcbiAgICBMQVRFX1JFTkRFUjogMTVcclxuICB9LFxyXG4gIENPTlRFTlRfRVhURU5TSU9OUzoge1xyXG4gICAgQVRMQVM6IFwiLmF0bFwiXHJcbiAgfSxcclxuICBFVkVOVFM6IHtcclxuICAgIENPTlRFTlRfQVNTRVRfTE9BREVEOiBcImVkaXRvcl91cGRhdGVQcm9wZXJ0eUVkaXRvclZpZXdcIlxyXG4gIH1cclxufTtcclxuXHJcbi8vIGZ1bmN0aW9uIFwicXVpY2tpZXNcIiBob2xkZXJcclxuLy9sZXQgc2MgPSB7fTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb21tb24vY29uc3RhbnRzLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBUEE7QUFTQTtBQUNBO0FBREE7QUFHQTtBQUNBO0FBREE7QUFkQTtBQUFBO0FBQUE7QUFDQTtBQWtCQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 24 */
/* exports provided: default */
/* exports used: default */
/*!*******************************!*\
  !*** ./src/core/texture2D.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_contentLoader__ = __webpack_require__(/*! common/contentLoader */ 14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_core_gameManager__ = __webpack_require__(/*! core/gameManager */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n\n\n\n\n/**\n * Texture2D class\n */\nclass Texture2D {\n  //#region Constructors\n\n  /**\n     * @param {Image} image\n     */\n  constructor(image) {\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(image)) {\n      throw new Error(\"Cannot create Texture2D without an image source\");\n    }\n\n    // private properties:\n    this._uid = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"d\" /* generateUID */])();\n    this._source = image;\n    this._texture = null;\n    this._textureSrc = image.src;\n    this._gl = __WEBPACK_IMPORTED_MODULE_1_core_gameManager__[\"a\" /* default */].renderContext.getContext();\n\n    // Prepare the webgl texture:\n    this._texture = this._gl.createTexture();\n\n    // binding\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this._texture);\n\n    // Set the parameters so we can render any size image.\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n\n    // Upload the image into the texture.\n    this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, this._source);\n\n    //this._gl.bindTexture(gl.TEXTURE_2D, null);\n\n    this._hasLoaded = true;\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  /**\n     *\n     * @param path\n     * @returns {Promise}\n     */\n  static async fromPath(path) {\n    const image = await __WEBPACK_IMPORTED_MODULE_0_common_contentLoader__[\"a\" /* ContentLoader */].loadImage(path);\n\n    if (image === false) {\n      return null;\n    }\n\n    return new Texture2D(image);\n  }\n\n  //#endregion\n\n  /**\n     *\n     * @returns {Number}\n     */\n  getUID() {\n    return this._uid;\n  }\n\n  /**\n     *\n     */\n  bind() {\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this._texture);\n  }\n\n  /**\n     *\n     * @param {Image} imageData\n     */\n  setImageData(imageData) {\n    this._source = imageData;\n    this._textureSrc = imageData.src;\n  }\n\n  /**\n     *\n     * @returns {Image}\n     */\n  getImageData() {\n    return this._source;\n  }\n\n  getTextureSrc() {\n    return this._textureSrc;\n  }\n\n  /**\n     * Gets the texture width\n     * @returns {Number}\n     */\n  getWidth() {\n    return this._source.width;\n  }\n\n  /**\n     * Gets the texture height\n     * @returns {Number}\n     */\n  getHeight() {\n    return this._source.height;\n  }\n\n  /**\n     * Gets the Texture\n     * @returns {WebGLTexture|*|null}\n     */\n  getTexture() {\n    return this._texture;\n  }\n\n  /**\n     *\n     * @returns {boolean}\n     */\n  isReady() {\n    return this._hasLoaded;\n  }\n\n  /**\n      */\n  unload() {}\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Texture2D;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvcmUvdGV4dHVyZTJELmpzPzU1YTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29udGVudExvYWRlciB9IGZyb20gXCJjb21tb24vY29udGVudExvYWRlclwiO1xuaW1wb3J0IEdhbWVNYW5hZ2VyIGZyb20gXCJjb3JlL2dhbWVNYW5hZ2VyXCI7XG5pbXBvcnQgeyBpc09iamVjdEFzc2lnbmVkLCBnZW5lcmF0ZVVJRCB9IGZyb20gXCJjb21tb24vdXRpbHNcIjtcblxuLyoqXG4gKiBUZXh0dXJlMkQgY2xhc3NcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGV4dHVyZTJEIHtcbiAgLy8jcmVnaW9uIENvbnN0cnVjdG9yc1xuXG4gIC8qKlxuICAgICAqIEBwYXJhbSB7SW1hZ2V9IGltYWdlXG4gICAgICovXG4gIGNvbnN0cnVjdG9yKGltYWdlKSB7XG4gICAgaWYgKCFpc09iamVjdEFzc2lnbmVkKGltYWdlKSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNyZWF0ZSBUZXh0dXJlMkQgd2l0aG91dCBhbiBpbWFnZSBzb3VyY2VcIik7XG4gICAgfVxuXG4gICAgLy8gcHJpdmF0ZSBwcm9wZXJ0aWVzOlxuICAgIHRoaXMuX3VpZCA9IGdlbmVyYXRlVUlEKCk7XG4gICAgdGhpcy5fc291cmNlID0gaW1hZ2U7XG4gICAgdGhpcy5fdGV4dHVyZSA9IG51bGw7XG4gICAgdGhpcy5fdGV4dHVyZVNyYyA9IGltYWdlLnNyYztcbiAgICB0aGlzLl9nbCA9IEdhbWVNYW5hZ2VyLnJlbmRlckNvbnRleHQuZ2V0Q29udGV4dCgpO1xuXG4gICAgLy8gUHJlcGFyZSB0aGUgd2ViZ2wgdGV4dHVyZTpcbiAgICB0aGlzLl90ZXh0dXJlID0gdGhpcy5fZ2wuY3JlYXRlVGV4dHVyZSgpO1xuXG4gICAgLy8gYmluZGluZ1xuICAgIHRoaXMuX2dsLmJpbmRUZXh0dXJlKHRoaXMuX2dsLlRFWFRVUkVfMkQsIHRoaXMuX3RleHR1cmUpO1xuXG4gICAgLy8gU2V0IHRoZSBwYXJhbWV0ZXJzIHNvIHdlIGNhbiByZW5kZXIgYW55IHNpemUgaW1hZ2UuXG4gICAgdGhpcy5fZ2wudGV4UGFyYW1ldGVyaSh0aGlzLl9nbC5URVhUVVJFXzJELCB0aGlzLl9nbC5URVhUVVJFX1dSQVBfUywgdGhpcy5fZ2wuQ0xBTVBfVE9fRURHRSk7XG4gICAgdGhpcy5fZ2wudGV4UGFyYW1ldGVyaSh0aGlzLl9nbC5URVhUVVJFXzJELCB0aGlzLl9nbC5URVhUVVJFX1dSQVBfVCwgdGhpcy5fZ2wuQ0xBTVBfVE9fRURHRSk7XG4gICAgdGhpcy5fZ2wudGV4UGFyYW1ldGVyaSh0aGlzLl9nbC5URVhUVVJFXzJELCB0aGlzLl9nbC5URVhUVVJFX01JTl9GSUxURVIsIHRoaXMuX2dsLk5FQVJFU1QpO1xuICAgIHRoaXMuX2dsLnRleFBhcmFtZXRlcmkodGhpcy5fZ2wuVEVYVFVSRV8yRCwgdGhpcy5fZ2wuVEVYVFVSRV9NQUdfRklMVEVSLCB0aGlzLl9nbC5ORUFSRVNUKTtcblxuICAgIC8vIFVwbG9hZCB0aGUgaW1hZ2UgaW50byB0aGUgdGV4dHVyZS5cbiAgICB0aGlzLl9nbC50ZXhJbWFnZTJEKHRoaXMuX2dsLlRFWFRVUkVfMkQsIDAsIHRoaXMuX2dsLlJHQkEsIHRoaXMuX2dsLlJHQkEsIHRoaXMuX2dsLlVOU0lHTkVEX0JZVEUsIHRoaXMuX3NvdXJjZSk7XG5cbiAgICAvL3RoaXMuX2dsLmJpbmRUZXh0dXJlKGdsLlRFWFRVUkVfMkQsIG51bGwpO1xuXG4gICAgdGhpcy5faGFzTG9hZGVkID0gdHJ1ZTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxuXG4gIC8vI3JlZ2lvbiBNZXRob2RzXG5cbiAgLy8jcmVnaW9uIFN0YXRpYyBNZXRob2RzXG5cbiAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGF0aFxuICAgICAqIEByZXR1cm5zIHtQcm9taXNlfVxuICAgICAqL1xuICBzdGF0aWMgYXN5bmMgZnJvbVBhdGgocGF0aCkge1xuICAgIGNvbnN0IGltYWdlID0gYXdhaXQgQ29udGVudExvYWRlci5sb2FkSW1hZ2UocGF0aCk7XG5cbiAgICBpZiAoaW1hZ2UgPT09IGZhbHNlKSB7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9XG5cbiAgICByZXR1cm4gbmV3IFRleHR1cmUyRChpbWFnZSk7XG4gIH1cblxuICAvLyNlbmRyZWdpb25cblxuICAvKipcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtOdW1iZXJ9XG4gICAgICovXG4gIGdldFVJRCgpIHtcbiAgICByZXR1cm4gdGhpcy5fdWlkO1xuICB9XG5cbiAgLyoqXG4gICAgICpcbiAgICAgKi9cbiAgYmluZCgpIHtcbiAgICB0aGlzLl9nbC5iaW5kVGV4dHVyZSh0aGlzLl9nbC5URVhUVVJFXzJELCB0aGlzLl90ZXh0dXJlKTtcbiAgfVxuXG4gIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIHtJbWFnZX0gaW1hZ2VEYXRhXG4gICAgICovXG4gIHNldEltYWdlRGF0YShpbWFnZURhdGEpIHtcbiAgICB0aGlzLl9zb3VyY2UgPSBpbWFnZURhdGE7XG4gICAgdGhpcy5fdGV4dHVyZVNyYyA9IGltYWdlRGF0YS5zcmM7XG4gIH1cblxuICAvKipcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtJbWFnZX1cbiAgICAgKi9cbiAgZ2V0SW1hZ2VEYXRhKCkge1xuICAgIHJldHVybiB0aGlzLl9zb3VyY2U7XG4gIH1cblxuICBnZXRUZXh0dXJlU3JjKCkge1xuICAgIHJldHVybiB0aGlzLl90ZXh0dXJlU3JjO1xuICB9XG5cbiAgLyoqXG4gICAgICogR2V0cyB0aGUgdGV4dHVyZSB3aWR0aFxuICAgICAqIEByZXR1cm5zIHtOdW1iZXJ9XG4gICAgICovXG4gIGdldFdpZHRoKCkge1xuICAgIHJldHVybiB0aGlzLl9zb3VyY2Uud2lkdGg7XG4gIH1cblxuICAvKipcbiAgICAgKiBHZXRzIHRoZSB0ZXh0dXJlIGhlaWdodFxuICAgICAqIEByZXR1cm5zIHtOdW1iZXJ9XG4gICAgICovXG4gIGdldEhlaWdodCgpIHtcbiAgICByZXR1cm4gdGhpcy5fc291cmNlLmhlaWdodDtcbiAgfVxuXG4gIC8qKlxuICAgICAqIEdldHMgdGhlIFRleHR1cmVcbiAgICAgKiBAcmV0dXJucyB7V2ViR0xUZXh0dXJlfCp8bnVsbH1cbiAgICAgKi9cbiAgZ2V0VGV4dHVyZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fdGV4dHVyZTtcbiAgfVxuXG4gIC8qKlxuICAgICAqXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XG4gICAgICovXG4gIGlzUmVhZHkoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2hhc0xvYWRlZDtcbiAgfVxuXG4gIC8qKlxuXG4gICAgICovXG4gIHVubG9hZCgpIHt9XG5cbiAgLy8jZW5kcmVnaW9uXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvcmUvdGV4dHVyZTJELmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBR0E7QUFDQTtBQUNBO0FBdElBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 25 */
/* no static exports found */
/* all exports used */
/*!*******************************************!*\
  !*** ./~/matter-js/src/collision/Pair.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = __webpack_require__(/*! ./Contact */ 67);\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return bodyA.id + '_' + bodyB.id;\n        } else {\n            return bodyB.id + '_' + bodyA.id;\n        }\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hdHRlci1qcy9zcmMvY29sbGlzaW9uL1BhaXIuanM/ZDdhNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogVGhlIGBNYXR0ZXIuUGFpcmAgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNyZWF0aW5nIGFuZCBtYW5pcHVsYXRpbmcgY29sbGlzaW9uIHBhaXJzLlxuKlxuKiBAY2xhc3MgUGFpclxuKi9cblxudmFyIFBhaXIgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBQYWlyO1xuXG52YXIgQ29udGFjdCA9IHJlcXVpcmUoJy4vQ29udGFjdCcpO1xuXG4oZnVuY3Rpb24oKSB7XG4gICAgXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIHBhaXIuXG4gICAgICogQG1ldGhvZCBjcmVhdGVcbiAgICAgKiBAcGFyYW0ge2NvbGxpc2lvbn0gY29sbGlzaW9uXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHRpbWVzdGFtcFxuICAgICAqIEByZXR1cm4ge3BhaXJ9IEEgbmV3IHBhaXJcbiAgICAgKi9cbiAgICBQYWlyLmNyZWF0ZSA9IGZ1bmN0aW9uKGNvbGxpc2lvbiwgdGltZXN0YW1wKSB7XG4gICAgICAgIHZhciBib2R5QSA9IGNvbGxpc2lvbi5ib2R5QSxcbiAgICAgICAgICAgIGJvZHlCID0gY29sbGlzaW9uLmJvZHlCLFxuICAgICAgICAgICAgcGFyZW50QSA9IGNvbGxpc2lvbi5wYXJlbnRBLFxuICAgICAgICAgICAgcGFyZW50QiA9IGNvbGxpc2lvbi5wYXJlbnRCO1xuXG4gICAgICAgIHZhciBwYWlyID0ge1xuICAgICAgICAgICAgaWQ6IFBhaXIuaWQoYm9keUEsIGJvZHlCKSxcbiAgICAgICAgICAgIGJvZHlBOiBib2R5QSxcbiAgICAgICAgICAgIGJvZHlCOiBib2R5QixcbiAgICAgICAgICAgIGNvbnRhY3RzOiB7fSxcbiAgICAgICAgICAgIGFjdGl2ZUNvbnRhY3RzOiBbXSxcbiAgICAgICAgICAgIHNlcGFyYXRpb246IDAsXG4gICAgICAgICAgICBpc0FjdGl2ZTogdHJ1ZSxcbiAgICAgICAgICAgIGlzU2Vuc29yOiBib2R5QS5pc1NlbnNvciB8fCBib2R5Qi5pc1NlbnNvcixcbiAgICAgICAgICAgIHRpbWVDcmVhdGVkOiB0aW1lc3RhbXAsXG4gICAgICAgICAgICB0aW1lVXBkYXRlZDogdGltZXN0YW1wLFxuICAgICAgICAgICAgaW52ZXJzZU1hc3M6IHBhcmVudEEuaW52ZXJzZU1hc3MgKyBwYXJlbnRCLmludmVyc2VNYXNzLFxuICAgICAgICAgICAgZnJpY3Rpb246IE1hdGgubWluKHBhcmVudEEuZnJpY3Rpb24sIHBhcmVudEIuZnJpY3Rpb24pLFxuICAgICAgICAgICAgZnJpY3Rpb25TdGF0aWM6IE1hdGgubWF4KHBhcmVudEEuZnJpY3Rpb25TdGF0aWMsIHBhcmVudEIuZnJpY3Rpb25TdGF0aWMpLFxuICAgICAgICAgICAgcmVzdGl0dXRpb246IE1hdGgubWF4KHBhcmVudEEucmVzdGl0dXRpb24sIHBhcmVudEIucmVzdGl0dXRpb24pLFxuICAgICAgICAgICAgc2xvcDogTWF0aC5tYXgocGFyZW50QS5zbG9wLCBwYXJlbnRCLnNsb3ApXG4gICAgICAgIH07XG5cbiAgICAgICAgUGFpci51cGRhdGUocGFpciwgY29sbGlzaW9uLCB0aW1lc3RhbXApO1xuXG4gICAgICAgIHJldHVybiBwYWlyO1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBVcGRhdGVzIGEgcGFpciBnaXZlbiBhIGNvbGxpc2lvbi5cbiAgICAgKiBAbWV0aG9kIHVwZGF0ZVxuICAgICAqIEBwYXJhbSB7cGFpcn0gcGFpclxuICAgICAqIEBwYXJhbSB7Y29sbGlzaW9ufSBjb2xsaXNpb25cbiAgICAgKiBAcGFyYW0ge251bWJlcn0gdGltZXN0YW1wXG4gICAgICovXG4gICAgUGFpci51cGRhdGUgPSBmdW5jdGlvbihwYWlyLCBjb2xsaXNpb24sIHRpbWVzdGFtcCkge1xuICAgICAgICB2YXIgY29udGFjdHMgPSBwYWlyLmNvbnRhY3RzLFxuICAgICAgICAgICAgc3VwcG9ydHMgPSBjb2xsaXNpb24uc3VwcG9ydHMsXG4gICAgICAgICAgICBhY3RpdmVDb250YWN0cyA9IHBhaXIuYWN0aXZlQ29udGFjdHMsXG4gICAgICAgICAgICBwYXJlbnRBID0gY29sbGlzaW9uLnBhcmVudEEsXG4gICAgICAgICAgICBwYXJlbnRCID0gY29sbGlzaW9uLnBhcmVudEI7XG4gICAgICAgIFxuICAgICAgICBwYWlyLmNvbGxpc2lvbiA9IGNvbGxpc2lvbjtcbiAgICAgICAgcGFpci5pbnZlcnNlTWFzcyA9IHBhcmVudEEuaW52ZXJzZU1hc3MgKyBwYXJlbnRCLmludmVyc2VNYXNzO1xuICAgICAgICBwYWlyLmZyaWN0aW9uID0gTWF0aC5taW4ocGFyZW50QS5mcmljdGlvbiwgcGFyZW50Qi5mcmljdGlvbik7XG4gICAgICAgIHBhaXIuZnJpY3Rpb25TdGF0aWMgPSBNYXRoLm1heChwYXJlbnRBLmZyaWN0aW9uU3RhdGljLCBwYXJlbnRCLmZyaWN0aW9uU3RhdGljKTtcbiAgICAgICAgcGFpci5yZXN0aXR1dGlvbiA9IE1hdGgubWF4KHBhcmVudEEucmVzdGl0dXRpb24sIHBhcmVudEIucmVzdGl0dXRpb24pO1xuICAgICAgICBwYWlyLnNsb3AgPSBNYXRoLm1heChwYXJlbnRBLnNsb3AsIHBhcmVudEIuc2xvcCk7XG4gICAgICAgIGFjdGl2ZUNvbnRhY3RzLmxlbmd0aCA9IDA7XG4gICAgICAgIFxuICAgICAgICBpZiAoY29sbGlzaW9uLmNvbGxpZGVkKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHN1cHBvcnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICAgICAgdmFyIHN1cHBvcnQgPSBzdXBwb3J0c1tpXSxcbiAgICAgICAgICAgICAgICAgICAgY29udGFjdElkID0gQ29udGFjdC5pZChzdXBwb3J0KSxcbiAgICAgICAgICAgICAgICAgICAgY29udGFjdCA9IGNvbnRhY3RzW2NvbnRhY3RJZF07XG5cbiAgICAgICAgICAgICAgICBpZiAoY29udGFjdCkge1xuICAgICAgICAgICAgICAgICAgICBhY3RpdmVDb250YWN0cy5wdXNoKGNvbnRhY3QpO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGFjdGl2ZUNvbnRhY3RzLnB1c2goY29udGFjdHNbY29udGFjdElkXSA9IENvbnRhY3QuY3JlYXRlKHN1cHBvcnQpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHBhaXIuc2VwYXJhdGlvbiA9IGNvbGxpc2lvbi5kZXB0aDtcbiAgICAgICAgICAgIFBhaXIuc2V0QWN0aXZlKHBhaXIsIHRydWUsIHRpbWVzdGFtcCk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpZiAocGFpci5pc0FjdGl2ZSA9PT0gdHJ1ZSlcbiAgICAgICAgICAgICAgICBQYWlyLnNldEFjdGl2ZShwYWlyLCBmYWxzZSwgdGltZXN0YW1wKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgXG4gICAgLyoqXG4gICAgICogU2V0IGEgcGFpciBhcyBhY3RpdmUgb3IgaW5hY3RpdmUuXG4gICAgICogQG1ldGhvZCBzZXRBY3RpdmVcbiAgICAgKiBAcGFyYW0ge3BhaXJ9IHBhaXJcbiAgICAgKiBAcGFyYW0ge2Jvb2x9IGlzQWN0aXZlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHRpbWVzdGFtcFxuICAgICAqL1xuICAgIFBhaXIuc2V0QWN0aXZlID0gZnVuY3Rpb24ocGFpciwgaXNBY3RpdmUsIHRpbWVzdGFtcCkge1xuICAgICAgICBpZiAoaXNBY3RpdmUpIHtcbiAgICAgICAgICAgIHBhaXIuaXNBY3RpdmUgPSB0cnVlO1xuICAgICAgICAgICAgcGFpci50aW1lVXBkYXRlZCA9IHRpbWVzdGFtcDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHBhaXIuaXNBY3RpdmUgPSBmYWxzZTtcbiAgICAgICAgICAgIHBhaXIuYWN0aXZlQ29udGFjdHMubGVuZ3RoID0gMDtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBHZXQgdGhlIGlkIGZvciB0aGUgZ2l2ZW4gcGFpci5cbiAgICAgKiBAbWV0aG9kIGlkXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5QVxuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keUJcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IFVuaXF1ZSBwYWlySWRcbiAgICAgKi9cbiAgICBQYWlyLmlkID0gZnVuY3Rpb24oYm9keUEsIGJvZHlCKSB7XG4gICAgICAgIGlmIChib2R5QS5pZCA8IGJvZHlCLmlkKSB7XG4gICAgICAgICAgICByZXR1cm4gYm9keUEuaWQgKyAnXycgKyBib2R5Qi5pZDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBib2R5Qi5pZCArICdfJyArIGJvZHlBLmlkO1xuICAgICAgICB9XG4gICAgfTtcblxufSkoKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9tYXR0ZXItanMvc3JjL2NvbGxpc2lvbi9QYWlyLmpzXG4vLyBtb2R1bGUgaWQgPSAyNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 26 */
/* exports provided: default */
/* exports used: default */
/*!********************************!*\
  !*** ./src/core/gameObject.js ***!
  \********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_core_gameManager__ = __webpack_require__(/*! core/gameManager */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_core_transform__ = __webpack_require__(/*! core/transform */ 27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_math_matrix4__ = __webpack_require__(/*! math/matrix4 */ 16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_math_vector2__ = __webpack_require__(/*! math/vector2 */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_math_boundary__ = __webpack_require__(/*! math/boundary */ 52);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_math_rectangle__ = __webpack_require__(/*! math/rectangle */ 28);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_utility_objectify__ = __webpack_require__(/*! utility/objectify */ 18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_common_attributeDictionary__ = __webpack_require__(/*! common/attributeDictionary */ 8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_7_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"gameobject\", \"transform\", { ownContainer: true });\n__WEBPACK_IMPORTED_MODULE_7_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"gameobject\", \"_parent\", { visible: false });\n\n/**\r\n * GameObject class\r\n */\nclass GameObject {\n  //#region Constructors\n\n  /**\r\n     * @param {Object} params\r\n     */\n  constructor(params) {\n    params = params || {};\n\n    // public properties:\n    this.name = params.name || \"GameObject\";\n    this.enabled = true;\n\n    if (params.transform) {\n      params.transform.gameObject = this;\n    }\n\n    this.transform = params.transform || new __WEBPACK_IMPORTED_MODULE_1_core_transform__[\"a\" /* default */]({ gameObject: this });\n\n    // private properties:\n    this._uid = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"d\" /* generateUID */])();\n    this._parent = params.parent || null;\n    this._children = params.children || [];\n    this._components = params.components || [];\n    this._transformMatrix = new __WEBPACK_IMPORTED_MODULE_2_math_matrix4__[\"a\" /* default */]();\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static restore(data) {\n    return new GameObject({\n      name: data.name,\n      transform: __WEBPACK_IMPORTED_MODULE_1_core_transform__[\"a\" /* default */].restore(data.transform),\n      children: __WEBPACK_IMPORTED_MODULE_6_utility_objectify__[\"a\" /* default */].restoreArray(data.children),\n      components: __WEBPACK_IMPORTED_MODULE_6_utility_objectify__[\"a\" /* default */].restoreArray(data.components)\n    });\n  }\n\n  //#endregion\n\n  equals(other) {\n    if (other.getUID) {\n      return this._uid === other.getUID();\n    }\n\n    return this === other;\n  }\n\n  getBaseWidth() {\n    return 1;\n  }\n\n  getBaseHeight() {\n    return 1;\n  }\n\n  getType() {\n    return \"GameObject\";\n  }\n\n  getUID() {\n    return this._uid;\n  }\n\n  propagatePropertyUpdate(property, value) {\n    for (let i = 0; i < this._components.length; ++i) {\n      if (this._components[i][\"onGameObject\" + property + \"Updated\"]) {\n        this._components[i][\"onGameObject\" + property + \"Updated\"](value);\n      }\n    }\n  }\n\n  /**\r\n     * Resolves the GameObject transformation Matrix4\r\n     * @returns {Float32Array}\r\n     */\n  getMatrix() {\n    this._transformMatrix.identity();\n    this._transformMatrix.translate([this.transform.getPosition().x, this.transform.getPosition().y, 0]);\n\n    return this._transformMatrix.asArray();\n  }\n\n  getParent() {\n    return this._parent;\n  }\n\n  removeParent() {\n    if (this._parent) {\n      this._parent.removeChild(this);\n    } else {\n      __WEBPACK_IMPORTED_MODULE_0_core_gameManager__[\"a\" /* default */].activeScene.removeGameObject(this);\n    }\n\n    this._parent = null;\n  }\n\n  setParent(gameObject) {\n    if (!gameObject) {\n      // since there is no game object specified we will try to\n      // look for a scene related to this game object\n      // and then add it to the root hierarchy:\n      if (__WEBPACK_IMPORTED_MODULE_0_core_gameManager__[\"a\" /* default */].activeScene) {\n        __WEBPACK_IMPORTED_MODULE_0_core_gameManager__[\"a\" /* default */].activeScene.addGameObject(this);\n      }\n    } else {\n      // does the object has a parent?\n      if (this.getParent() != null) {\n        this.getParent().removeChild(this);\n      } else {\n        // maybe is part of a game scene root hierarchy?\n        // if so try to remove from that\n        if (__WEBPACK_IMPORTED_MODULE_0_core_gameManager__[\"a\" /* default */].activeScene) {\n          __WEBPACK_IMPORTED_MODULE_0_core_gameManager__[\"a\" /* default */].activeScene.removeGameObject(this);\n        }\n      }\n\n      gameObject.addChild(this);\n    }\n  }\n\n  removeChild(gameObject) {\n    for (let i = this._children.length - 1; i >= 0; i--) {\n      if (this._children[i].getUID() == gameObject.getUID()) {\n        return this._children.splice(i, 1);\n      }\n    }\n  }\n\n  getChildren() {\n    return this._children;\n  }\n\n  addChild(gameObject, index) {\n    // let's be safe, make sure to remove parent if any\n    gameObject.removeParent();\n\n    // update the object parent\n    gameObject._parent = this;\n\n    // add this to our children array\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"a\" /* isObjectAssigned */])(index)) {\n      this._children.insert(index, gameObject);\n    } else {\n      this._children.push(gameObject);\n    }\n  }\n\n  getHierarchyHash() {\n    if (this._parent) {\n      return this._parent.getHierarchyHash() + \".\" + this._uid;\n    }\n    return this._uid + \"\";\n  }\n\n  isChild(gameObject) {\n    // check if is a child simply by getting the hierarchy hash:\n    // this . x . y . z . other\n    let hierarchyHash = gameObject.getHierarchyHash().split(\".\");\n    let thisIndex = hierarchyHash.indexOf(this._uid + \"\"),\n        otherIndex = hierarchyHash.indexOf(gameObject.getUID() + \"\");\n    return otherIndex > thisIndex && thisIndex >= 0;\n\n    // this way takes away more resources:\n    /*for (var i = 0; i < this._children.length; ++i) {\r\n         if (this._children[i].equals(gameObject)) {\r\n         return true;\r\n         } else {\r\n         if (this._children[i].isChild(gameObject)) {\r\n         return true;\r\n         }\r\n         }\r\n         }\r\n         return false;*/\n  }\n\n  addComponent(component) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"e\" /* isFunction */])(component.setGameObject)) {\n      component.setGameObject(this);\n    }\n\n    // set the related component game object:\n    component.gameObject = this;\n\n    this._components.push(component);\n  }\n\n  update(delta) {\n    if (!this.enabled) {\n      return;\n    }\n\n    // update children:\n    this._children.forEach(function (elem) {\n      if (elem.update) {\n        elem.update(delta);\n      }\n    });\n\n    this._components.forEach(function (component) {\n      if (component.update) {\n        component.update(delta);\n      }\n    });\n  }\n\n  render(delta, spriteBatch) {\n    if (!this.enabled) {\n      return;\n    }\n\n    // render children:\n    this._children.forEach(function (elem) {\n      if (elem.render) {\n        elem.render(delta, spriteBatch);\n      }\n    });\n\n    this._components.forEach(function (component) {\n      if (component.render) {\n        component.render(delta, spriteBatch);\n      }\n    });\n  }\n\n  getComponents() {\n    return this._components;\n  }\n\n  getBoundary(bulk) {\n    let mat = this.getMatrix();\n    let boundary = new __WEBPACK_IMPORTED_MODULE_4_math_boundary__[\"a\" /* default */](__WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */].transformMat4(new __WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */](0, 0), mat), __WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */].transformMat4(new __WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */](1, 0), mat), __WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */].transformMat4(new __WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */](1, 1), mat), __WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */].transformMat4(new __WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */](0, 1), mat));\n\n    if (bulk) {\n      boundary.topLeft.x -= bulk;\n      boundary.topLeft.y -= bulk;\n      boundary.topRight.x += bulk;\n      boundary.topRight.y -= bulk;\n      boundary.bottomRight.x += bulk;\n      boundary.bottomRight.y += bulk;\n      boundary.bottomLeft.x -= bulk;\n      boundary.bottomLeft.y += bulk;\n    }\n\n    return boundary;\n  }\n\n  getRectangleBoundary(bulk) {\n    let vertices = this.getBoundary(bulk);\n\n    // find the min and max width to form the rectangle boundary\n    let minX = Math.min(vertices.topLeft.x, vertices.topRight.x, vertices.bottomLeft.x, vertices.bottomRight.x);\n    let maxX = Math.max(vertices.topLeft.x, vertices.topRight.x, vertices.bottomLeft.x, vertices.bottomRight.x);\n    let minY = Math.min(vertices.topLeft.y, vertices.topRight.y, vertices.bottomLeft.y, vertices.bottomRight.y);\n    let maxY = Math.max(vertices.topLeft.y, vertices.topRight.y, vertices.bottomLeft.y, vertices.bottomRight.y);\n\n    // return the generated rectangle:\n    return new __WEBPACK_IMPORTED_MODULE_5_math_rectangle__[\"a\" /* default */](minX, minY, maxX - minX, maxY - minY);\n  }\n\n  collidesWith(gameObject, bulk, bulkOther) {\n    return this.getBoundary(bulk).overlapsWith(gameObject.getBoundary(bulkOther));\n  }\n\n  collidesWithPoint(point, bulk) {\n    let boundaryA = this.getBoundary(bulk);\n    let boundaryB = new __WEBPACK_IMPORTED_MODULE_4_math_boundary__[\"a\" /* default */](new __WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */](point.x, point.y), new __WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */](point.x + 1, point.y), new __WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */](point.x + 1, point.y + 1), new __WEBPACK_IMPORTED_MODULE_3_math_vector2__[\"a\" /* default */](point.x, point.y + 1));\n\n    return __WEBPACK_IMPORTED_MODULE_4_math_boundary__[\"a\" /* default */].overlap(boundaryA, boundaryB);\n  }\n\n  objectify() {\n    return {\n      name: this.name,\n      transform: this.transform.objectify(),\n      children: __WEBPACK_IMPORTED_MODULE_6_utility_objectify__[\"a\" /* default */].array(this._children),\n      components: __WEBPACK_IMPORTED_MODULE_6_utility_objectify__[\"a\" /* default */].array(this._components)\n    };\n  }\n\n  unload() {\n    for (let i = 0; i < this._components.length; ++i) {\n      if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"e\" /* isFunction */])(this._components[i].unload)) {\n        this._components[i].unload();\n      }\n    }\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = GameObject;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 27 */
/* exports provided: default */
/* exports used: default */
/*!*******************************!*\
  !*** ./src/core/transform.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_attributeDictionary__ = __webpack_require__(/*! common/attributeDictionary */ 8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_math_vector2__ = __webpack_require__(/*! math/vector2 */ 5);\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"transform\", \"gameObject\", { visible: false });\n\n/**\r\n * Transform class\r\n */\nclass Transform {\n  //#region Constructors\n\n  /**\r\n     * @param params\r\n     */\n  constructor(params) {\n    params = params || {};\n\n    // public properties:\n    this.gameObject = params.gameObject || null;\n\n    // private properties:\n    this._position = params.position || new __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */]();\n    this._rotation = params.rotation || 0.0;\n    this._scale = params.scale || new __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */](1.0, 1.0);\n\n    this._overridePositionFunction = null;\n    this._overrideRotationFunction = null;\n    this._overrideScaleFunction = null;\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  /**\r\n     *\r\n     * @param data\r\n     * @returns {Transform}\r\n     */\n  static restore(data) {\n    return new Transform({\n      position: __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */].restore(data.position),\n      rotation: data.rotation,\n      scale: __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */].restore(data.scale)\n    });\n  }\n\n  //#endregion\n\n  /**\r\n     *\r\n     */\n  clearPositionGetter() {\n    this._overridePositionFunction = null;\n  }\n\n  /**\r\n     *\r\n     */\n  clearRotationGetter() {\n    this._overrideRotationFunction = null;\n  }\n\n  /**\r\n     *\r\n     */\n  clearScaleGetter() {\n    this._overrideScaleFunction = null;\n  }\n\n  /**\r\n     *\r\n     * @param overrideFunction\r\n     */\n  overridePositionGetter(overrideFunction) {\n    this._overridePositionFunction = overrideFunction;\n  }\n\n  /**\r\n     *\r\n     * @param overrideFunction\r\n     */\n  overrideScaleGetter(overrideFunction) {\n    this._overrideScaleFunction = overrideFunction;\n  }\n\n  /**\r\n     *\r\n     * @param overrideFunction\r\n     */\n  overrideRotationGetter(overrideFunction) {\n    this._overrideRotationFunction = overrideFunction;\n  }\n\n  /**\r\n     *\r\n     * @param position\r\n     */\n  lookAt(position) {\n    let direction = this.getPosition().subtract(position).normalize();\n    this.setRotation(Math.atan2(direction.y, direction.x));\n  }\n\n  /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     */\n  setPosition(x, y) {\n    this._position.set(x, y);\n    this.gameObject.propagatePropertyUpdate(\"Position\", this._position);\n  }\n\n  /**\r\n     *\r\n     * @returns {*}\r\n     */\n  getPosition() {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"e\" /* isFunction */])(this._overridePositionFunction)) {\n      return this._overridePositionFunction();\n    }\n\n    return this._position;\n  }\n\n  /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     */\n  translate(x, y) {\n    let curPos = this.getPosition();\n    this.setPosition(curPos.x + (x || 0), curPos.y + (y || 0));\n  }\n\n  /**\r\n     *\r\n     * @param value\r\n     */\n  rotate(value) {\n    this.setRotation(this.getRotation() + (value || 0));\n  }\n\n  /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     */\n  scale(x, y) {\n    let curScale = this.getScale();\n    this.setPosition(curScale.x + (x || 0), curScale.y + (y || 0));\n  }\n\n  /**\r\n     *\r\n     * @param value\r\n     */\n  setRotation(value) {\n    this._rotation = value;\n    this.gameObject.propagatePropertyUpdate(\"Rotation\", this._rotation);\n  }\n\n  /**\r\n     *\r\n     * @returns {*}\r\n     */\n  getRotation() {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"e\" /* isFunction */])(this._overrideRotationFunction)) {\n      return this._overrideRotationFunction();\n    }\n\n    return this._rotation;\n  }\n\n  /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     */\n  setScale(x, y) {\n    this._scale.set(x, y || x);\n    this.gameObject.propagatePropertyUpdate(\"Scale\", this._scale);\n  }\n\n  /**\r\n     *\r\n     * @returns {*}\r\n     */\n  getScale() {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"e\" /* isFunction */])(this._overrideScaleFunction)) {\n      return this._overrideScaleFunction();\n    }\n\n    return this._scale;\n  }\n\n  /**\r\n     *\r\n     * @returns {Transform}\r\n     */\n  clone() {\n    return Transform.restore(this.objectify());\n  }\n\n  /**\r\n     *\r\n     * @returns {{position: {x, y}, rotation: (*|number), scale: {x, y}}}\r\n     */\n  objectify() {\n    return {\n      position: this._position.objectify(),\n      rotation: this._rotation,\n      scale: this._scale.objectify()\n    };\n  }\n\n  /**\r\n     *\r\n     */\n  unload() {}\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Transform;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvcmUvdHJhbnNmb3JtLmpzPzNlMzEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXR0cmlidXRlRGljdGlvbmFyeSB9IGZyb20gXCJjb21tb24vYXR0cmlidXRlRGljdGlvbmFyeVwiO1xyXG5pbXBvcnQgeyBpc0Z1bmN0aW9uIH0gZnJvbSBcImNvbW1vbi91dGlsc1wiO1xyXG5cclxuaW1wb3J0IFZlY3RvcjIgZnJvbSBcIm1hdGgvdmVjdG9yMlwiO1xyXG5cclxuQXR0cmlidXRlRGljdGlvbmFyeS5hZGRSdWxlKFwidHJhbnNmb3JtXCIsIFwiZ2FtZU9iamVjdFwiLCB7IHZpc2libGU6IGZhbHNlIH0pO1xyXG5cclxuLyoqXHJcbiAqIFRyYW5zZm9ybSBjbGFzc1xyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHJhbnNmb3JtIHtcclxuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXHJcblxyXG4gIC8qKlxyXG4gICAgICogQHBhcmFtIHBhcmFtc1xyXG4gICAgICovXHJcbiAgY29uc3RydWN0b3IocGFyYW1zKSB7XHJcbiAgICBwYXJhbXMgPSBwYXJhbXMgfHwge307XHJcblxyXG4gICAgLy8gcHVibGljIHByb3BlcnRpZXM6XHJcbiAgICB0aGlzLmdhbWVPYmplY3QgPSBwYXJhbXMuZ2FtZU9iamVjdCB8fCBudWxsO1xyXG5cclxuICAgIC8vIHByaXZhdGUgcHJvcGVydGllczpcclxuICAgIHRoaXMuX3Bvc2l0aW9uID0gcGFyYW1zLnBvc2l0aW9uIHx8IG5ldyBWZWN0b3IyKCk7XHJcbiAgICB0aGlzLl9yb3RhdGlvbiA9IHBhcmFtcy5yb3RhdGlvbiB8fCAwLjA7XHJcbiAgICB0aGlzLl9zY2FsZSA9IHBhcmFtcy5zY2FsZSB8fCBuZXcgVmVjdG9yMigxLjAsIDEuMCk7XHJcblxyXG4gICAgdGhpcy5fb3ZlcnJpZGVQb3NpdGlvbkZ1bmN0aW9uID0gbnVsbDtcclxuICAgIHRoaXMuX292ZXJyaWRlUm90YXRpb25GdW5jdGlvbiA9IG51bGw7XHJcbiAgICB0aGlzLl9vdmVycmlkZVNjYWxlRnVuY3Rpb24gPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBNZXRob2RzXHJcblxyXG4gIC8vI3JlZ2lvbiBTdGF0aWMgTWV0aG9kc1xyXG5cclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gZGF0YVxyXG4gICAgICogQHJldHVybnMge1RyYW5zZm9ybX1cclxuICAgICAqL1xyXG4gIHN0YXRpYyByZXN0b3JlKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgVHJhbnNmb3JtKHtcclxuICAgICAgcG9zaXRpb246IFZlY3RvcjIucmVzdG9yZShkYXRhLnBvc2l0aW9uKSxcclxuICAgICAgcm90YXRpb246IGRhdGEucm90YXRpb24sXHJcbiAgICAgIHNjYWxlOiBWZWN0b3IyLnJlc3RvcmUoZGF0YS5zY2FsZSlcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqL1xyXG4gIGNsZWFyUG9zaXRpb25HZXR0ZXIoKSB7XHJcbiAgICB0aGlzLl9vdmVycmlkZVBvc2l0aW9uRnVuY3Rpb24gPSBudWxsO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICovXHJcbiAgY2xlYXJSb3RhdGlvbkdldHRlcigpIHtcclxuICAgIHRoaXMuX292ZXJyaWRlUm90YXRpb25GdW5jdGlvbiA9IG51bGw7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKi9cclxuICBjbGVhclNjYWxlR2V0dGVyKCkge1xyXG4gICAgdGhpcy5fb3ZlcnJpZGVTY2FsZUZ1bmN0aW9uID0gbnVsbDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBvdmVycmlkZUZ1bmN0aW9uXHJcbiAgICAgKi9cclxuICBvdmVycmlkZVBvc2l0aW9uR2V0dGVyKG92ZXJyaWRlRnVuY3Rpb24pIHtcclxuICAgIHRoaXMuX292ZXJyaWRlUG9zaXRpb25GdW5jdGlvbiA9IG92ZXJyaWRlRnVuY3Rpb247XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gb3ZlcnJpZGVGdW5jdGlvblxyXG4gICAgICovXHJcbiAgb3ZlcnJpZGVTY2FsZUdldHRlcihvdmVycmlkZUZ1bmN0aW9uKSB7XHJcbiAgICB0aGlzLl9vdmVycmlkZVNjYWxlRnVuY3Rpb24gPSBvdmVycmlkZUZ1bmN0aW9uO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIG92ZXJyaWRlRnVuY3Rpb25cclxuICAgICAqL1xyXG4gIG92ZXJyaWRlUm90YXRpb25HZXR0ZXIob3ZlcnJpZGVGdW5jdGlvbikge1xyXG4gICAgdGhpcy5fb3ZlcnJpZGVSb3RhdGlvbkZ1bmN0aW9uID0gb3ZlcnJpZGVGdW5jdGlvbjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwb3NpdGlvblxyXG4gICAgICovXHJcbiAgbG9va0F0KHBvc2l0aW9uKSB7XHJcbiAgICBsZXQgZGlyZWN0aW9uID0gdGhpcy5nZXRQb3NpdGlvbigpLnN1YnRyYWN0KHBvc2l0aW9uKS5ub3JtYWxpemUoKTtcclxuICAgIHRoaXMuc2V0Um90YXRpb24oTWF0aC5hdGFuMihkaXJlY3Rpb24ueSwgZGlyZWN0aW9uLngpKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB4XHJcbiAgICAgKiBAcGFyYW0geVxyXG4gICAgICovXHJcbiAgc2V0UG9zaXRpb24oeCwgeSkge1xyXG4gICAgdGhpcy5fcG9zaXRpb24uc2V0KHgsIHkpO1xyXG4gICAgdGhpcy5nYW1lT2JqZWN0LnByb3BhZ2F0ZVByb3BlcnR5VXBkYXRlKFwiUG9zaXRpb25cIiwgdGhpcy5fcG9zaXRpb24pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybnMgeyp9XHJcbiAgICAgKi9cclxuICBnZXRQb3NpdGlvbigpIHtcclxuICAgIGlmIChpc0Z1bmN0aW9uKHRoaXMuX292ZXJyaWRlUG9zaXRpb25GdW5jdGlvbikpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX292ZXJyaWRlUG9zaXRpb25GdW5jdGlvbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLl9wb3NpdGlvbjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB4XHJcbiAgICAgKiBAcGFyYW0geVxyXG4gICAgICovXHJcbiAgdHJhbnNsYXRlKHgsIHkpIHtcclxuICAgIGxldCBjdXJQb3MgPSB0aGlzLmdldFBvc2l0aW9uKCk7XHJcbiAgICB0aGlzLnNldFBvc2l0aW9uKGN1clBvcy54ICsgKHggfHwgMCksIGN1clBvcy55ICsgKHkgfHwgMCkpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHZhbHVlXHJcbiAgICAgKi9cclxuICByb3RhdGUodmFsdWUpIHtcclxuICAgIHRoaXMuc2V0Um90YXRpb24odGhpcy5nZXRSb3RhdGlvbigpICsgKHZhbHVlIHx8IDApKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB4XHJcbiAgICAgKiBAcGFyYW0geVxyXG4gICAgICovXHJcbiAgc2NhbGUoeCwgeSkge1xyXG4gICAgbGV0IGN1clNjYWxlID0gdGhpcy5nZXRTY2FsZSgpO1xyXG4gICAgdGhpcy5zZXRQb3NpdGlvbihjdXJTY2FsZS54ICsgKHggfHwgMCksIGN1clNjYWxlLnkgKyAoeSB8fCAwKSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gdmFsdWVcclxuICAgICAqL1xyXG4gIHNldFJvdGF0aW9uKHZhbHVlKSB7XHJcbiAgICB0aGlzLl9yb3RhdGlvbiA9IHZhbHVlO1xyXG4gICAgdGhpcy5nYW1lT2JqZWN0LnByb3BhZ2F0ZVByb3BlcnR5VXBkYXRlKFwiUm90YXRpb25cIiwgdGhpcy5fcm90YXRpb24pO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybnMgeyp9XHJcbiAgICAgKi9cclxuICBnZXRSb3RhdGlvbigpIHtcclxuICAgIGlmIChpc0Z1bmN0aW9uKHRoaXMuX292ZXJyaWRlUm90YXRpb25GdW5jdGlvbikpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX292ZXJyaWRlUm90YXRpb25GdW5jdGlvbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzLl9yb3RhdGlvbjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB4XHJcbiAgICAgKiBAcGFyYW0geVxyXG4gICAgICovXHJcbiAgc2V0U2NhbGUoeCwgeSkge1xyXG4gICAgdGhpcy5fc2NhbGUuc2V0KHgsIHkgfHwgeCk7XHJcbiAgICB0aGlzLmdhbWVPYmplY3QucHJvcGFnYXRlUHJvcGVydHlVcGRhdGUoXCJTY2FsZVwiLCB0aGlzLl9zY2FsZSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJucyB7Kn1cclxuICAgICAqL1xyXG4gIGdldFNjYWxlKCkge1xyXG4gICAgaWYgKGlzRnVuY3Rpb24odGhpcy5fb3ZlcnJpZGVTY2FsZUZ1bmN0aW9uKSkge1xyXG4gICAgICByZXR1cm4gdGhpcy5fb3ZlcnJpZGVTY2FsZUZ1bmN0aW9uKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuX3NjYWxlO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybnMge1RyYW5zZm9ybX1cclxuICAgICAqL1xyXG4gIGNsb25lKCkge1xyXG4gICAgcmV0dXJuIFRyYW5zZm9ybS5yZXN0b3JlKHRoaXMub2JqZWN0aWZ5KCkpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybnMge3twb3NpdGlvbjoge3gsIHl9LCByb3RhdGlvbjogKCp8bnVtYmVyKSwgc2NhbGU6IHt4LCB5fX19XHJcbiAgICAgKi9cclxuICBvYmplY3RpZnkoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBwb3NpdGlvbjogdGhpcy5fcG9zaXRpb24ub2JqZWN0aWZ5KCksXHJcbiAgICAgIHJvdGF0aW9uOiB0aGlzLl9yb3RhdGlvbixcclxuICAgICAgc2NhbGU6IHRoaXMuX3NjYWxlLm9iamVjdGlmeSgpXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICovXHJcbiAgdW5sb2FkKCkge31cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb3JlL3RyYW5zZm9ybS5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBdk5BOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 28 */
/* exports provided: default */
/* exports used: default */
/*!*******************************!*\
  !*** ./src/math/rectangle.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__ = __webpack_require__(/*! common/setterDictionary */ 10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__vector2__ = __webpack_require__(/*! ./vector2 */ 5);\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__[\"a\" /* SetterDictionary */].addRule(\"rectangle\", [\"x\", \"y\", \"width\", \"height\"]);\n\n/**\r\n * Rectangle class\r\n */\nclass Rectangle {\n  //#region Constructors\n\n  constructor(x, y, width, height) {\n    this.x = 0;\n    this.y = 0;\n    this.width = 0;\n    this.height = 0;\n\n    this.set(x, y, width, height);\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static restore(data) {\n    return new Rectangle(data.x, data.y, data.width, data.height);\n  }\n\n  static fromVectors(vectorA, vectorB) {\n    let x, y, width, height;\n\n    if (vectorA.x > vectorB.x) {\n      x = vectorB.x;\n      width = Math.abs(vectorA.x - vectorB.x);\n    } else {\n      x = vectorA.x;\n      width = Math.abs(vectorB.x - vectorA.x);\n    }\n\n    if (vectorA.y > vectorB.y) {\n      y = vectorB.y;\n      height = Math.abs(vectorA.y - vectorB.y);\n    } else {\n      y = vectorA.y;\n      height = Math.abs(vectorB.y - vectorA.y);\n    }\n\n    return new Rectangle(x, y, width, height);\n  }\n\n  //#endregion\n\n  set(x, y, width, height) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.width = width || 10;\n    this.height = height || 10;\n  }\n\n  objectify() {\n    return {\n      x: this.x,\n      y: this.y,\n      width: this.width,\n      height: this.height\n    };\n  }\n\n  equals(obj) {\n    return obj.x === this.x && obj.y === this.y && obj.width === this.width && obj.height === this.height;\n  }\n\n  unload() {}\n\n  /**\r\n  * Get the rectangle vertices based on the position and width/height\r\n  * @returns {{topLeft: Vector2, topRight: \r\n          Vector2, bottomRight: Vector2, bottomLeft: Vector2}}\r\n  */\n  getVertices() {\n    return {\n      topLeft: new __WEBPACK_IMPORTED_MODULE_1__vector2__[\"a\" /* default */](this.x, this.y),\n      topRight: new __WEBPACK_IMPORTED_MODULE_1__vector2__[\"a\" /* default */](this.x + this.width, this.y),\n      bottomRight: new __WEBPACK_IMPORTED_MODULE_1__vector2__[\"a\" /* default */](this.x + this.width, this.y + this.height),\n      bottomLeft: new __WEBPACK_IMPORTED_MODULE_1__vector2__[\"a\" /* default */](this.x, this.y + this.height)\n    };\n  }\n\n  /**\r\n     * Checks if the rectangle is intersecting the given rectangle\r\n     * @param {Rectangle} rectangle\r\n     * @returns {boolean}\r\n     */\n  intersects(rectangle) {\n    return rectangle.x <= this.x + this.width && this.x <= rectangle.x + rectangle.width && rectangle.y <= this.y + this.height && this.y <= rectangle.y + rectangle.height;\n  }\n\n  /**\r\n     * Checks if the given rectangle is contained by the instance\r\n     * @param {Rectangle} rectangle\r\n     */\n  contains(rectangle) {\n    return rectangle.x >= this.x && rectangle.x + rectangle.width <= this.x + this.width && rectangle.y >= this.y && rectangle.y + rectangle.height <= this.y + this.height;\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Rectangle;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdGgvcmVjdGFuZ2xlLmpzPzNiMjYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2V0dGVyRGljdGlvbmFyeSB9IGZyb20gXCJjb21tb24vc2V0dGVyRGljdGlvbmFyeVwiO1xyXG5pbXBvcnQgVmVjdG9yMiBmcm9tIFwiLi92ZWN0b3IyXCI7XHJcblxyXG5TZXR0ZXJEaWN0aW9uYXJ5LmFkZFJ1bGUoXCJyZWN0YW5nbGVcIiwgW1wieFwiLCBcInlcIiwgXCJ3aWR0aFwiLCBcImhlaWdodFwiXSk7XHJcblxyXG4vKipcclxuICogUmVjdGFuZ2xlIGNsYXNzXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZWN0YW5nbGUge1xyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcclxuXHJcbiAgY29uc3RydWN0b3IoeCwgeSwgd2lkdGgsIGhlaWdodCkge1xyXG4gICAgdGhpcy54ID0gMDtcclxuICAgIHRoaXMueSA9IDA7XHJcbiAgICB0aGlzLndpZHRoID0gMDtcclxuICAgIHRoaXMuaGVpZ2h0ID0gMDtcclxuXHJcbiAgICB0aGlzLnNldCh4LCB5LCB3aWR0aCwgaGVpZ2h0KTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNyZWdpb24gTWV0aG9kc1xyXG5cclxuICAvLyNyZWdpb24gU3RhdGljIE1ldGhvZHNcclxuXHJcbiAgc3RhdGljIHJlc3RvcmUoZGF0YSkge1xyXG4gICAgcmV0dXJuIG5ldyBSZWN0YW5nbGUoZGF0YS54LCBkYXRhLnksIGRhdGEud2lkdGgsIGRhdGEuaGVpZ2h0KTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBmcm9tVmVjdG9ycyh2ZWN0b3JBLCB2ZWN0b3JCKSB7XHJcbiAgICBsZXQgeCwgeSwgd2lkdGgsIGhlaWdodDtcclxuXHJcbiAgICBpZiAodmVjdG9yQS54ID4gdmVjdG9yQi54KSB7XHJcbiAgICAgIHggPSB2ZWN0b3JCLng7XHJcbiAgICAgIHdpZHRoID0gTWF0aC5hYnModmVjdG9yQS54IC0gdmVjdG9yQi54KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHggPSB2ZWN0b3JBLng7XHJcbiAgICAgIHdpZHRoID0gTWF0aC5hYnModmVjdG9yQi54IC0gdmVjdG9yQS54KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodmVjdG9yQS55ID4gdmVjdG9yQi55KSB7XHJcbiAgICAgIHkgPSB2ZWN0b3JCLnk7XHJcbiAgICAgIGhlaWdodCA9IE1hdGguYWJzKHZlY3RvckEueSAtIHZlY3RvckIueSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB5ID0gdmVjdG9yQS55O1xyXG4gICAgICBoZWlnaHQgPSBNYXRoLmFicyh2ZWN0b3JCLnkgLSB2ZWN0b3JBLnkpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBuZXcgUmVjdGFuZ2xlKHgsIHksIHdpZHRoLCBoZWlnaHQpO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIHNldCh4LCB5LCB3aWR0aCwgaGVpZ2h0KSB7XHJcbiAgICB0aGlzLnggPSB4IHx8IDA7XHJcbiAgICB0aGlzLnkgPSB5IHx8IDA7XHJcbiAgICB0aGlzLndpZHRoID0gd2lkdGggfHwgMTA7XHJcbiAgICB0aGlzLmhlaWdodCA9IGhlaWdodCB8fCAxMDtcclxuICB9XHJcblxyXG4gIG9iamVjdGlmeSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHg6IHRoaXMueCxcclxuICAgICAgeTogdGhpcy55LFxyXG4gICAgICB3aWR0aDogdGhpcy53aWR0aCxcclxuICAgICAgaGVpZ2h0OiB0aGlzLmhlaWdodFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGVxdWFscyhvYmopIHtcclxuICAgIHJldHVybiBvYmoueCA9PT0gdGhpcy54ICYmIG9iai55ID09PSB0aGlzLnkgJiYgb2JqLndpZHRoID09PSB0aGlzLndpZHRoICYmIG9iai5oZWlnaHQgPT09IHRoaXMuaGVpZ2h0O1xyXG4gIH1cclxuXHJcbiAgdW5sb2FkKCkge31cclxuXHJcbiAgLyoqXHJcbiAgKiBHZXQgdGhlIHJlY3RhbmdsZSB2ZXJ0aWNlcyBiYXNlZCBvbiB0aGUgcG9zaXRpb24gYW5kIHdpZHRoL2hlaWdodFxyXG4gICogQHJldHVybnMge3t0b3BMZWZ0OiBWZWN0b3IyLCB0b3BSaWdodDogXHJcbiAgICAgICAgICBWZWN0b3IyLCBib3R0b21SaWdodDogVmVjdG9yMiwgYm90dG9tTGVmdDogVmVjdG9yMn19XHJcbiAgKi9cclxuICBnZXRWZXJ0aWNlcygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRvcExlZnQ6IG5ldyBWZWN0b3IyKHRoaXMueCwgdGhpcy55KSxcclxuICAgICAgdG9wUmlnaHQ6IG5ldyBWZWN0b3IyKHRoaXMueCArIHRoaXMud2lkdGgsIHRoaXMueSksXHJcbiAgICAgIGJvdHRvbVJpZ2h0OiBuZXcgVmVjdG9yMih0aGlzLnggKyB0aGlzLndpZHRoLCB0aGlzLnkgKyB0aGlzLmhlaWdodCksXHJcbiAgICAgIGJvdHRvbUxlZnQ6IG5ldyBWZWN0b3IyKHRoaXMueCwgdGhpcy55ICsgdGhpcy5oZWlnaHQpXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBDaGVja3MgaWYgdGhlIHJlY3RhbmdsZSBpcyBpbnRlcnNlY3RpbmcgdGhlIGdpdmVuIHJlY3RhbmdsZVxyXG4gICAgICogQHBhcmFtIHtSZWN0YW5nbGV9IHJlY3RhbmdsZVxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAgICAgKi9cclxuICBpbnRlcnNlY3RzKHJlY3RhbmdsZSkge1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgcmVjdGFuZ2xlLnggPD0gdGhpcy54ICsgdGhpcy53aWR0aCAmJlxyXG4gICAgICB0aGlzLnggPD0gcmVjdGFuZ2xlLnggKyByZWN0YW5nbGUud2lkdGggJiZcclxuICAgICAgcmVjdGFuZ2xlLnkgPD0gdGhpcy55ICsgdGhpcy5oZWlnaHQgJiZcclxuICAgICAgdGhpcy55IDw9IHJlY3RhbmdsZS55ICsgcmVjdGFuZ2xlLmhlaWdodFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogQ2hlY2tzIGlmIHRoZSBnaXZlbiByZWN0YW5nbGUgaXMgY29udGFpbmVkIGJ5IHRoZSBpbnN0YW5jZVxyXG4gICAgICogQHBhcmFtIHtSZWN0YW5nbGV9IHJlY3RhbmdsZVxyXG4gICAgICovXHJcbiAgY29udGFpbnMocmVjdGFuZ2xlKSB7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICByZWN0YW5nbGUueCA+PSB0aGlzLnggJiZcclxuICAgICAgcmVjdGFuZ2xlLnggKyByZWN0YW5nbGUud2lkdGggPD0gdGhpcy54ICsgdGhpcy53aWR0aCAmJlxyXG4gICAgICByZWN0YW5nbGUueSA+PSB0aGlzLnkgJiZcclxuICAgICAgcmVjdGFuZ2xlLnkgKyByZWN0YW5nbGUuaGVpZ2h0IDw9IHRoaXMueSArIHRoaXMuaGVpZ2h0XHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9tYXRoL3JlY3RhbmdsZS5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBTUE7QUFDQTtBQUNBO0FBN0dBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 29 */
/* exports provided: default */
/* exports used: default */
/*!***********************************************!*\
  !*** ./src/shaders/primitiveShader.shader.js ***!
  \***********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shader__ = __webpack_require__(/*! ./shader */ 17);\n\n\n/**\n * PrimitiveShader Class\n */\nclass PrimitiveShader extends __WEBPACK_IMPORTED_MODULE_0__shader__[\"a\" /* default */] {\n  static get shaderContent() {\n    return {\n      vertex: [\"attribute vec2 aVertexPosition;\", \"attribute vec4 aVertexColorPosition;\", \"uniform mat4 uMatrix;\", \"uniform mat4 uTransform;\", \"uniform float uPointSize;\", \"varying vec4 vColor;\", \"void main(void) {\", \"   vColor = aVertexColorPosition;\", \"   gl_PointSize = uPointSize;\", \"   gl_Position = uMatrix * uTransform * vec4(aVertexPosition, 0.0, 1.0);\", \"}\"].join(\"\\n\"),\n      fragment: [\"precision mediump float;\", \"varying vec4 vColor;\", \"void main(void) {\", \"   gl_FragColor = vColor;\", \"}\"].join(\"\\n\"),\n      uniforms: {\n        uMatrix: { type: \"mat4\", value: new Float32Array(16) },\n        uTransform: { type: \"mat4\", value: new Float32Array(16) },\n        uPointSize: { type: \"1i\", value: 2 }\n      },\n      attributes: {\n        aVertexPosition: -1,\n        aVertexColorPosition: -1\n      }\n    };\n  }\n\n  constructor() {\n    let content = PrimitiveShader.shaderContent;\n\n    super(content.vertex, content.fragment, content.uniforms, content.attributes);\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = PrimitiveShader;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMjkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NoYWRlcnMvcHJpbWl0aXZlU2hhZGVyLnNoYWRlci5qcz80MjRlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTaGFkZXIgZnJvbSBcIi4vc2hhZGVyXCI7XG5cbi8qKlxuICogUHJpbWl0aXZlU2hhZGVyIENsYXNzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFByaW1pdGl2ZVNoYWRlciBleHRlbmRzIFNoYWRlciB7XG4gIHN0YXRpYyBnZXQgc2hhZGVyQ29udGVudCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmVydGV4OiBbXG4gICAgICAgIFwiYXR0cmlidXRlIHZlYzIgYVZlcnRleFBvc2l0aW9uO1wiLFxuICAgICAgICBcImF0dHJpYnV0ZSB2ZWM0IGFWZXJ0ZXhDb2xvclBvc2l0aW9uO1wiLFxuXG4gICAgICAgIFwidW5pZm9ybSBtYXQ0IHVNYXRyaXg7XCIsXG4gICAgICAgIFwidW5pZm9ybSBtYXQ0IHVUcmFuc2Zvcm07XCIsXG4gICAgICAgIFwidW5pZm9ybSBmbG9hdCB1UG9pbnRTaXplO1wiLFxuXG4gICAgICAgIFwidmFyeWluZyB2ZWM0IHZDb2xvcjtcIixcblxuICAgICAgICBcInZvaWQgbWFpbih2b2lkKSB7XCIsXG4gICAgICAgIFwiICAgdkNvbG9yID0gYVZlcnRleENvbG9yUG9zaXRpb247XCIsXG4gICAgICAgIFwiICAgZ2xfUG9pbnRTaXplID0gdVBvaW50U2l6ZTtcIixcbiAgICAgICAgXCIgICBnbF9Qb3NpdGlvbiA9IHVNYXRyaXggKiB1VHJhbnNmb3JtICogdmVjNChhVmVydGV4UG9zaXRpb24sIDAuMCwgMS4wKTtcIixcbiAgICAgICAgXCJ9XCJcbiAgICAgIF0uam9pbihcIlxcblwiKSxcbiAgICAgIGZyYWdtZW50OiBbXG4gICAgICAgIFwicHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XCIsXG5cbiAgICAgICAgXCJ2YXJ5aW5nIHZlYzQgdkNvbG9yO1wiLFxuXG4gICAgICAgIFwidm9pZCBtYWluKHZvaWQpIHtcIixcbiAgICAgICAgXCIgICBnbF9GcmFnQ29sb3IgPSB2Q29sb3I7XCIsXG4gICAgICAgIFwifVwiXG4gICAgICBdLmpvaW4oXCJcXG5cIiksXG4gICAgICB1bmlmb3Jtczoge1xuICAgICAgICB1TWF0cml4OiB7IHR5cGU6IFwibWF0NFwiLCB2YWx1ZTogbmV3IEZsb2F0MzJBcnJheSgxNikgfSxcbiAgICAgICAgdVRyYW5zZm9ybTogeyB0eXBlOiBcIm1hdDRcIiwgdmFsdWU6IG5ldyBGbG9hdDMyQXJyYXkoMTYpIH0sXG4gICAgICAgIHVQb2ludFNpemU6IHsgdHlwZTogXCIxaVwiLCB2YWx1ZTogMiB9XG4gICAgICB9LFxuICAgICAgYXR0cmlidXRlczoge1xuICAgICAgICBhVmVydGV4UG9zaXRpb246IC0xLFxuICAgICAgICBhVmVydGV4Q29sb3JQb3NpdGlvbjogLTFcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgbGV0IGNvbnRlbnQgPSBQcmltaXRpdmVTaGFkZXIuc2hhZGVyQ29udGVudDtcblxuICAgIHN1cGVyKGNvbnRlbnQudmVydGV4LCBjb250ZW50LmZyYWdtZW50LCBjb250ZW50LnVuaWZvcm1zLCBjb250ZW50LmF0dHJpYnV0ZXMpO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3NoYWRlcnMvcHJpbWl0aXZlU2hhZGVyLnNoYWRlci5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBZ0JBO0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTtBQUZBO0FBL0JBO0FBb0NBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBNUNBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 30 */
/* no static exports found */
/* all exports used */
/*!******************************!*\
  !*** ./~/lodash/toString.js ***!
  \******************************/
/***/ (function(module, exports) {

eval("/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC90b1N0cmluZy5qcz9hOGZlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhpcyBtZXRob2QgcmV0dXJucyB0aGUgZmlyc3QgYXJndW1lbnQgaXQgcmVjZWl2ZXMuXG4gKlxuICogQHN0YXRpY1xuICogQHNpbmNlIDAuMS4wXG4gKiBAbWVtYmVyT2YgX1xuICogQGNhdGVnb3J5IFV0aWxcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgQW55IHZhbHVlLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgYHZhbHVlYC5cbiAqIEBleGFtcGxlXG4gKlxuICogdmFyIG9iamVjdCA9IHsgJ2EnOiAxIH07XG4gKlxuICogY29uc29sZS5sb2coXy5pZGVudGl0eShvYmplY3QpID09PSBvYmplY3QpO1xuICogLy8gPT4gdHJ1ZVxuICovXG5mdW5jdGlvbiBpZGVudGl0eSh2YWx1ZSkge1xuICByZXR1cm4gdmFsdWU7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaWRlbnRpdHk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL3RvU3RyaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSAzMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 31 */
/* no static exports found */
/* all exports used */
/*!***********************************************!*\
  !*** ./~/matter-js/src/collision/Detector.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = __webpack_require__(/*! ./SAT */ 33);\nvar Pair = __webpack_require__(/*! ./Pair */ 25);\nvar Bounds = __webpack_require__(/*! ../geometry/Bounds */ 2);\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        // @if DEBUG\n        var metrics = engine.metrics;\n        // @endif\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n            // @if DEBUG\n            metrics.midphaseTests += 1;\n            // @endif\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n                            // @if DEBUG\n                            metrics.narrowphaseTests += 1;\n                            if (collision.reused)\n                                metrics.narrowReuseCount += 1;\n                            // @endif\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                                // @if DEBUG\n                                metrics.narrowDetections += 1;\n                                // @endif\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hdHRlci1qcy9zcmMvY29sbGlzaW9uL0RldGVjdG9yLmpzP2U5ZjEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4qIFRoZSBgTWF0dGVyLkRldGVjdG9yYCBtb2R1bGUgY29udGFpbnMgbWV0aG9kcyBmb3IgZGV0ZWN0aW5nIGNvbGxpc2lvbnMgZ2l2ZW4gYSBzZXQgb2YgcGFpcnMuXG4qXG4qIEBjbGFzcyBEZXRlY3RvclxuKi9cblxuLy8gVE9ETzogc3BlY3VsYXRpdmUgY29udGFjdHNcblxudmFyIERldGVjdG9yID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gRGV0ZWN0b3I7XG5cbnZhciBTQVQgPSByZXF1aXJlKCcuL1NBVCcpO1xudmFyIFBhaXIgPSByZXF1aXJlKCcuL1BhaXInKTtcbnZhciBCb3VuZHMgPSByZXF1aXJlKCcuLi9nZW9tZXRyeS9Cb3VuZHMnKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgLyoqXG4gICAgICogRmluZHMgYWxsIGNvbGxpc2lvbnMgZ2l2ZW4gYSBsaXN0IG9mIHBhaXJzLlxuICAgICAqIEBtZXRob2QgY29sbGlzaW9uc1xuICAgICAqIEBwYXJhbSB7cGFpcltdfSBicm9hZHBoYXNlUGFpcnNcbiAgICAgKiBAcGFyYW0ge2VuZ2luZX0gZW5naW5lXG4gICAgICogQHJldHVybiB7YXJyYXl9IGNvbGxpc2lvbnNcbiAgICAgKi9cbiAgICBEZXRlY3Rvci5jb2xsaXNpb25zID0gZnVuY3Rpb24oYnJvYWRwaGFzZVBhaXJzLCBlbmdpbmUpIHtcbiAgICAgICAgdmFyIGNvbGxpc2lvbnMgPSBbXSxcbiAgICAgICAgICAgIHBhaXJzVGFibGUgPSBlbmdpbmUucGFpcnMudGFibGU7XG5cbiAgICAgICAgLy8gQGlmIERFQlVHXG4gICAgICAgIHZhciBtZXRyaWNzID0gZW5naW5lLm1ldHJpY3M7XG4gICAgICAgIC8vIEBlbmRpZlxuICAgICAgICBcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBicm9hZHBoYXNlUGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBib2R5QSA9IGJyb2FkcGhhc2VQYWlyc1tpXVswXSwgXG4gICAgICAgICAgICAgICAgYm9keUIgPSBicm9hZHBoYXNlUGFpcnNbaV1bMV07XG5cbiAgICAgICAgICAgIGlmICgoYm9keUEuaXNTdGF0aWMgfHwgYm9keUEuaXNTbGVlcGluZykgJiYgKGJvZHlCLmlzU3RhdGljIHx8IGJvZHlCLmlzU2xlZXBpbmcpKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoIURldGVjdG9yLmNhbkNvbGxpZGUoYm9keUEuY29sbGlzaW9uRmlsdGVyLCBib2R5Qi5jb2xsaXNpb25GaWx0ZXIpKVxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xuXG4gICAgICAgICAgICAvLyBAaWYgREVCVUdcbiAgICAgICAgICAgIG1ldHJpY3MubWlkcGhhc2VUZXN0cyArPSAxO1xuICAgICAgICAgICAgLy8gQGVuZGlmXG5cbiAgICAgICAgICAgIC8vIG1pZCBwaGFzZVxuICAgICAgICAgICAgaWYgKEJvdW5kcy5vdmVybGFwcyhib2R5QS5ib3VuZHMsIGJvZHlCLmJvdW5kcykpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gYm9keUEucGFydHMubGVuZ3RoID4gMSA/IDEgOiAwOyBqIDwgYm9keUEucGFydHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcnRBID0gYm9keUEucGFydHNbal07XG5cbiAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgayA9IGJvZHlCLnBhcnRzLmxlbmd0aCA+IDEgPyAxIDogMDsgayA8IGJvZHlCLnBhcnRzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgcGFydEIgPSBib2R5Qi5wYXJ0c1trXTtcblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChwYXJ0QSA9PT0gYm9keUEgJiYgcGFydEIgPT09IGJvZHlCKSB8fCBCb3VuZHMub3ZlcmxhcHMocGFydEEuYm91bmRzLCBwYXJ0Qi5ib3VuZHMpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gZmluZCBhIHByZXZpb3VzIGNvbGxpc2lvbiB3ZSBjb3VsZCByZXVzZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhciBwYWlySWQgPSBQYWlyLmlkKHBhcnRBLCBwYXJ0QiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhaXIgPSBwYWlyc1RhYmxlW3BhaXJJZF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpb3VzQ29sbGlzaW9uO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHBhaXIgJiYgcGFpci5pc0FjdGl2ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcmV2aW91c0NvbGxpc2lvbiA9IHBhaXIuY29sbGlzaW9uO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByZXZpb3VzQ29sbGlzaW9uID0gbnVsbDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBuYXJyb3cgcGhhc2VcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgY29sbGlzaW9uID0gU0FULmNvbGxpZGVzKHBhcnRBLCBwYXJ0QiwgcHJldmlvdXNDb2xsaXNpb24pO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQGlmIERFQlVHXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0cmljcy5uYXJyb3dwaGFzZVRlc3RzICs9IDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbGxpc2lvbi5yZXVzZWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldHJpY3MubmFycm93UmV1c2VDb3VudCArPSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIEBlbmRpZlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbGxpc2lvbi5jb2xsaWRlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb2xsaXNpb25zLnB1c2goY29sbGlzaW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQGlmIERFQlVHXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1ldHJpY3MubmFycm93RGV0ZWN0aW9ucyArPSAxO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBAZW5kaWZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY29sbGlzaW9ucztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBgdHJ1ZWAgaWYgYm90aCBzdXBwbGllZCBjb2xsaXNpb24gZmlsdGVycyB3aWxsIGFsbG93IGEgY29sbGlzaW9uIHRvIG9jY3VyLlxuICAgICAqIFNlZSBgYm9keS5jb2xsaXNpb25GaWx0ZXJgIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICAgICAqIEBtZXRob2QgY2FuQ29sbGlkZVxuICAgICAqIEBwYXJhbSB7fSBmaWx0ZXJBXG4gICAgICogQHBhcmFtIHt9IGZpbHRlckJcbiAgICAgKiBAcmV0dXJuIHtib29sfSBgdHJ1ZWAgaWYgY29sbGlzaW9uIGNhbiBvY2N1clxuICAgICAqL1xuICAgIERldGVjdG9yLmNhbkNvbGxpZGUgPSBmdW5jdGlvbihmaWx0ZXJBLCBmaWx0ZXJCKSB7XG4gICAgICAgIGlmIChmaWx0ZXJBLmdyb3VwID09PSBmaWx0ZXJCLmdyb3VwICYmIGZpbHRlckEuZ3JvdXAgIT09IDApXG4gICAgICAgICAgICByZXR1cm4gZmlsdGVyQS5ncm91cCA+IDA7XG5cbiAgICAgICAgcmV0dXJuIChmaWx0ZXJBLm1hc2sgJiBmaWx0ZXJCLmNhdGVnb3J5KSAhPT0gMCAmJiAoZmlsdGVyQi5tYXNrICYgZmlsdGVyQS5jYXRlZ29yeSkgIT09IDA7XG4gICAgfTtcblxufSkoKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9tYXR0ZXItanMvc3JjL2NvbGxpc2lvbi9EZXRlY3Rvci5qc1xuLy8gbW9kdWxlIGlkID0gMzFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 32 */
/* no static exports found */
/* all exports used */
/*!*******************************************!*\
  !*** ./~/matter-js/src/collision/Grid.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = __webpack_require__(/*! ./Pair */ 25);\nvar Detector = __webpack_require__(/*! ./Detector */ 31);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n        // @if DEBUG\n        var metrics = engine.metrics;\n        metrics.broadphaseTests = 0;\n        // @endif\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = _getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n                // @if DEBUG\n                metrics.broadphaseTests += 1;\n                // @endif\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = _regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = _getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    _bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = _createBucket(buckets, bucketId);\n                            _bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = _createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    var _regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    var _getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return _createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    var _createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    var _getBucketId = function(column, row) {\n        return column + ',' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    var _createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    var _bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    var _createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 33 */
/* no static exports found */
/* all exports used */
/*!******************************************!*\
  !*** ./~/matter-js/src/collision/SAT.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = __webpack_require__(/*! ../geometry/Vertices */ 7);\nvar Vector = __webpack_require__(/*! ../geometry/Vector */ 3);\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            prevCol = previousCollision,\n            canReusePrevCol = false;\n\n        if (prevCol) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = prevCol && prevCol.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = prevCol;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (prevCol && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[prevCol.axisNumber]];\n\n            minOverlap = _overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = _overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = _overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.normal = minOverlap.axis;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(collision.normal, Vector.sub(bodyB.position, bodyA.position)) > 0) \n            collision.normal = Vector.neg(collision.normal);\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = { \n            x: collision.normal.x * collision.depth, \n            y: collision.normal.y * collision.depth \n        };\n\n        // find support points, there is always either exactly one or two\n        var verticesB = _findSupports(bodyA, bodyB, collision.normal),\n            supports = collision.supports || [];\n        supports.length = 0;\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = _findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    var _overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            _projectToAxis(projectionA, verticesA, axis);\n            _projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    var _projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    var _findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hdHRlci1qcy9zcmMvY29sbGlzaW9uL1NBVC5qcz9kMTkwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuKiBUaGUgYE1hdHRlci5TQVRgIG1vZHVsZSBjb250YWlucyBtZXRob2RzIGZvciBkZXRlY3RpbmcgY29sbGlzaW9ucyB1c2luZyB0aGUgU2VwYXJhdGluZyBBeGlzIFRoZW9yZW0uXG4qXG4qIEBjbGFzcyBTQVRcbiovXG5cbi8vIFRPRE86IHRydWUgY2lyY2xlcyBhbmQgY3VydmVzXG5cbnZhciBTQVQgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBTQVQ7XG5cbnZhciBWZXJ0aWNlcyA9IHJlcXVpcmUoJy4uL2dlb21ldHJ5L1ZlcnRpY2VzJyk7XG52YXIgVmVjdG9yID0gcmVxdWlyZSgnLi4vZ2VvbWV0cnkvVmVjdG9yJyk7XG5cbihmdW5jdGlvbigpIHtcblxuICAgIC8qKlxuICAgICAqIERldGVjdCBjb2xsaXNpb24gYmV0d2VlbiB0d28gYm9kaWVzIHVzaW5nIHRoZSBTZXBhcmF0aW5nIEF4aXMgVGhlb3JlbS5cbiAgICAgKiBAbWV0aG9kIGNvbGxpZGVzXG4gICAgICogQHBhcmFtIHtib2R5fSBib2R5QVxuICAgICAqIEBwYXJhbSB7Ym9keX0gYm9keUJcbiAgICAgKiBAcGFyYW0ge2NvbGxpc2lvbn0gcHJldmlvdXNDb2xsaXNpb25cbiAgICAgKiBAcmV0dXJuIHtjb2xsaXNpb259IGNvbGxpc2lvblxuICAgICAqL1xuICAgIFNBVC5jb2xsaWRlcyA9IGZ1bmN0aW9uKGJvZHlBLCBib2R5QiwgcHJldmlvdXNDb2xsaXNpb24pIHtcbiAgICAgICAgdmFyIG92ZXJsYXBBQixcbiAgICAgICAgICAgIG92ZXJsYXBCQSwgXG4gICAgICAgICAgICBtaW5PdmVybGFwLFxuICAgICAgICAgICAgY29sbGlzaW9uLFxuICAgICAgICAgICAgcHJldkNvbCA9IHByZXZpb3VzQ29sbGlzaW9uLFxuICAgICAgICAgICAgY2FuUmV1c2VQcmV2Q29sID0gZmFsc2U7XG5cbiAgICAgICAgaWYgKHByZXZDb2wpIHtcbiAgICAgICAgICAgIC8vIGVzdGltYXRlIHRvdGFsIG1vdGlvblxuICAgICAgICAgICAgdmFyIHBhcmVudEEgPSBib2R5QS5wYXJlbnQsXG4gICAgICAgICAgICAgICAgcGFyZW50QiA9IGJvZHlCLnBhcmVudCxcbiAgICAgICAgICAgICAgICBtb3Rpb24gPSBwYXJlbnRBLnNwZWVkICogcGFyZW50QS5zcGVlZCArIHBhcmVudEEuYW5ndWxhclNwZWVkICogcGFyZW50QS5hbmd1bGFyU3BlZWRcbiAgICAgICAgICAgICAgICAgICAgICAgKyBwYXJlbnRCLnNwZWVkICogcGFyZW50Qi5zcGVlZCArIHBhcmVudEIuYW5ndWxhclNwZWVkICogcGFyZW50Qi5hbmd1bGFyU3BlZWQ7XG5cbiAgICAgICAgICAgIC8vIHdlIG1heSBiZSBhYmxlIHRvIChwYXJ0aWFsbHkpIHJldXNlIGNvbGxpc2lvbiByZXN1bHQgXG4gICAgICAgICAgICAvLyBidXQgb25seSBzYWZlIGlmIGNvbGxpc2lvbiB3YXMgcmVzdGluZ1xuICAgICAgICAgICAgY2FuUmV1c2VQcmV2Q29sID0gcHJldkNvbCAmJiBwcmV2Q29sLmNvbGxpZGVkICYmIG1vdGlvbiA8IDAuMjtcblxuICAgICAgICAgICAgLy8gcmV1c2UgY29sbGlzaW9uIG9iamVjdFxuICAgICAgICAgICAgY29sbGlzaW9uID0gcHJldkNvbDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbGxpc2lvbiA9IHsgY29sbGlkZWQ6IGZhbHNlLCBib2R5QTogYm9keUEsIGJvZHlCOiBib2R5QiB9O1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKHByZXZDb2wgJiYgY2FuUmV1c2VQcmV2Q29sKSB7XG4gICAgICAgICAgICAvLyBpZiB3ZSBjYW4gcmV1c2UgdGhlIGNvbGxpc2lvbiByZXN1bHRcbiAgICAgICAgICAgIC8vIHdlIG9ubHkgbmVlZCB0byB0ZXN0IHRoZSBwcmV2aW91c2x5IGZvdW5kIGF4aXNcbiAgICAgICAgICAgIHZhciBheGlzQm9keUEgPSBjb2xsaXNpb24uYXhpc0JvZHksXG4gICAgICAgICAgICAgICAgYXhpc0JvZHlCID0gYXhpc0JvZHlBID09PSBib2R5QSA/IGJvZHlCIDogYm9keUEsXG4gICAgICAgICAgICAgICAgYXhlcyA9IFtheGlzQm9keUEuYXhlc1twcmV2Q29sLmF4aXNOdW1iZXJdXTtcblxuICAgICAgICAgICAgbWluT3ZlcmxhcCA9IF9vdmVybGFwQXhlcyhheGlzQm9keUEudmVydGljZXMsIGF4aXNCb2R5Qi52ZXJ0aWNlcywgYXhlcyk7XG4gICAgICAgICAgICBjb2xsaXNpb24ucmV1c2VkID0gdHJ1ZTtcblxuICAgICAgICAgICAgaWYgKG1pbk92ZXJsYXAub3ZlcmxhcCA8PSAwKSB7XG4gICAgICAgICAgICAgICAgY29sbGlzaW9uLmNvbGxpZGVkID0gZmFsc2U7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbGxpc2lvbjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIGlmIHdlIGNhbid0IHJldXNlIGEgcmVzdWx0LCBwZXJmb3JtIGEgZnVsbCBTQVQgdGVzdFxuXG4gICAgICAgICAgICBvdmVybGFwQUIgPSBfb3ZlcmxhcEF4ZXMoYm9keUEudmVydGljZXMsIGJvZHlCLnZlcnRpY2VzLCBib2R5QS5heGVzKTtcblxuICAgICAgICAgICAgaWYgKG92ZXJsYXBBQi5vdmVybGFwIDw9IDApIHtcbiAgICAgICAgICAgICAgICBjb2xsaXNpb24uY29sbGlkZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29sbGlzaW9uO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBvdmVybGFwQkEgPSBfb3ZlcmxhcEF4ZXMoYm9keUIudmVydGljZXMsIGJvZHlBLnZlcnRpY2VzLCBib2R5Qi5heGVzKTtcblxuICAgICAgICAgICAgaWYgKG92ZXJsYXBCQS5vdmVybGFwIDw9IDApIHtcbiAgICAgICAgICAgICAgICBjb2xsaXNpb24uY29sbGlkZWQgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29sbGlzaW9uO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAob3ZlcmxhcEFCLm92ZXJsYXAgPCBvdmVybGFwQkEub3ZlcmxhcCkge1xuICAgICAgICAgICAgICAgIG1pbk92ZXJsYXAgPSBvdmVybGFwQUI7XG4gICAgICAgICAgICAgICAgY29sbGlzaW9uLmF4aXNCb2R5ID0gYm9keUE7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1pbk92ZXJsYXAgPSBvdmVybGFwQkE7XG4gICAgICAgICAgICAgICAgY29sbGlzaW9uLmF4aXNCb2R5ID0gYm9keUI7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIC8vIGltcG9ydGFudCBmb3IgcmV1c2UgbGF0ZXJcbiAgICAgICAgICAgIGNvbGxpc2lvbi5heGlzTnVtYmVyID0gbWluT3ZlcmxhcC5heGlzTnVtYmVyO1xuICAgICAgICB9XG5cbiAgICAgICAgY29sbGlzaW9uLmJvZHlBID0gYm9keUEuaWQgPCBib2R5Qi5pZCA/IGJvZHlBIDogYm9keUI7XG4gICAgICAgIGNvbGxpc2lvbi5ib2R5QiA9IGJvZHlBLmlkIDwgYm9keUIuaWQgPyBib2R5QiA6IGJvZHlBO1xuICAgICAgICBjb2xsaXNpb24uY29sbGlkZWQgPSB0cnVlO1xuICAgICAgICBjb2xsaXNpb24ubm9ybWFsID0gbWluT3ZlcmxhcC5heGlzO1xuICAgICAgICBjb2xsaXNpb24uZGVwdGggPSBtaW5PdmVybGFwLm92ZXJsYXA7XG4gICAgICAgIGNvbGxpc2lvbi5wYXJlbnRBID0gY29sbGlzaW9uLmJvZHlBLnBhcmVudDtcbiAgICAgICAgY29sbGlzaW9uLnBhcmVudEIgPSBjb2xsaXNpb24uYm9keUIucGFyZW50O1xuICAgICAgICBcbiAgICAgICAgYm9keUEgPSBjb2xsaXNpb24uYm9keUE7XG4gICAgICAgIGJvZHlCID0gY29sbGlzaW9uLmJvZHlCO1xuXG4gICAgICAgIC8vIGVuc3VyZSBub3JtYWwgaXMgZmFjaW5nIGF3YXkgZnJvbSBib2R5QVxuICAgICAgICBpZiAoVmVjdG9yLmRvdChjb2xsaXNpb24ubm9ybWFsLCBWZWN0b3Iuc3ViKGJvZHlCLnBvc2l0aW9uLCBib2R5QS5wb3NpdGlvbikpID4gMCkgXG4gICAgICAgICAgICBjb2xsaXNpb24ubm9ybWFsID0gVmVjdG9yLm5lZyhjb2xsaXNpb24ubm9ybWFsKTtcblxuICAgICAgICBjb2xsaXNpb24udGFuZ2VudCA9IFZlY3Rvci5wZXJwKGNvbGxpc2lvbi5ub3JtYWwpO1xuXG4gICAgICAgIGNvbGxpc2lvbi5wZW5ldHJhdGlvbiA9IHsgXG4gICAgICAgICAgICB4OiBjb2xsaXNpb24ubm9ybWFsLnggKiBjb2xsaXNpb24uZGVwdGgsIFxuICAgICAgICAgICAgeTogY29sbGlzaW9uLm5vcm1hbC55ICogY29sbGlzaW9uLmRlcHRoIFxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIGZpbmQgc3VwcG9ydCBwb2ludHMsIHRoZXJlIGlzIGFsd2F5cyBlaXRoZXIgZXhhY3RseSBvbmUgb3IgdHdvXG4gICAgICAgIHZhciB2ZXJ0aWNlc0IgPSBfZmluZFN1cHBvcnRzKGJvZHlBLCBib2R5QiwgY29sbGlzaW9uLm5vcm1hbCksXG4gICAgICAgICAgICBzdXBwb3J0cyA9IGNvbGxpc2lvbi5zdXBwb3J0cyB8fCBbXTtcbiAgICAgICAgc3VwcG9ydHMubGVuZ3RoID0gMDtcblxuICAgICAgICAvLyBmaW5kIHRoZSBzdXBwb3J0cyBmcm9tIGJvZHlCIHRoYXQgYXJlIGluc2lkZSBib2R5QVxuICAgICAgICBpZiAoVmVydGljZXMuY29udGFpbnMoYm9keUEudmVydGljZXMsIHZlcnRpY2VzQlswXSkpXG4gICAgICAgICAgICBzdXBwb3J0cy5wdXNoKHZlcnRpY2VzQlswXSk7XG5cbiAgICAgICAgaWYgKFZlcnRpY2VzLmNvbnRhaW5zKGJvZHlBLnZlcnRpY2VzLCB2ZXJ0aWNlc0JbMV0pKVxuICAgICAgICAgICAgc3VwcG9ydHMucHVzaCh2ZXJ0aWNlc0JbMV0pO1xuXG4gICAgICAgIC8vIGZpbmQgdGhlIHN1cHBvcnRzIGZyb20gYm9keUEgdGhhdCBhcmUgaW5zaWRlIGJvZHlCXG4gICAgICAgIGlmIChzdXBwb3J0cy5sZW5ndGggPCAyKSB7XG4gICAgICAgICAgICB2YXIgdmVydGljZXNBID0gX2ZpbmRTdXBwb3J0cyhib2R5QiwgYm9keUEsIFZlY3Rvci5uZWcoY29sbGlzaW9uLm5vcm1hbCkpO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKFZlcnRpY2VzLmNvbnRhaW5zKGJvZHlCLnZlcnRpY2VzLCB2ZXJ0aWNlc0FbMF0pKVxuICAgICAgICAgICAgICAgIHN1cHBvcnRzLnB1c2godmVydGljZXNBWzBdKTtcblxuICAgICAgICAgICAgaWYgKHN1cHBvcnRzLmxlbmd0aCA8IDIgJiYgVmVydGljZXMuY29udGFpbnMoYm9keUIudmVydGljZXMsIHZlcnRpY2VzQVsxXSkpXG4gICAgICAgICAgICAgICAgc3VwcG9ydHMucHVzaCh2ZXJ0aWNlc0FbMV0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gYWNjb3VudCBmb3IgdGhlIGVkZ2UgY2FzZSBvZiBvdmVybGFwcGluZyBidXQgbm8gdmVydGV4IGNvbnRhaW5tZW50XG4gICAgICAgIGlmIChzdXBwb3J0cy5sZW5ndGggPCAxKVxuICAgICAgICAgICAgc3VwcG9ydHMgPSBbdmVydGljZXNCWzBdXTtcbiAgICAgICAgXG4gICAgICAgIGNvbGxpc2lvbi5zdXBwb3J0cyA9IHN1cHBvcnRzO1xuXG4gICAgICAgIHJldHVybiBjb2xsaXNpb247XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIEZpbmQgdGhlIG92ZXJsYXAgYmV0d2VlbiB0d28gc2V0cyBvZiB2ZXJ0aWNlcy5cbiAgICAgKiBAbWV0aG9kIF9vdmVybGFwQXhlc1xuICAgICAqIEBwcml2YXRlXG4gICAgICogQHBhcmFtIHt9IHZlcnRpY2VzQVxuICAgICAqIEBwYXJhbSB7fSB2ZXJ0aWNlc0JcbiAgICAgKiBAcGFyYW0ge30gYXhlc1xuICAgICAqIEByZXR1cm4gcmVzdWx0XG4gICAgICovXG4gICAgdmFyIF9vdmVybGFwQXhlcyA9IGZ1bmN0aW9uKHZlcnRpY2VzQSwgdmVydGljZXNCLCBheGVzKSB7XG4gICAgICAgIHZhciBwcm9qZWN0aW9uQSA9IFZlY3Rvci5fdGVtcFswXSwgXG4gICAgICAgICAgICBwcm9qZWN0aW9uQiA9IFZlY3Rvci5fdGVtcFsxXSxcbiAgICAgICAgICAgIHJlc3VsdCA9IHsgb3ZlcmxhcDogTnVtYmVyLk1BWF9WQUxVRSB9LFxuICAgICAgICAgICAgb3ZlcmxhcCxcbiAgICAgICAgICAgIGF4aXM7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBheGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBheGlzID0gYXhlc1tpXTtcblxuICAgICAgICAgICAgX3Byb2plY3RUb0F4aXMocHJvamVjdGlvbkEsIHZlcnRpY2VzQSwgYXhpcyk7XG4gICAgICAgICAgICBfcHJvamVjdFRvQXhpcyhwcm9qZWN0aW9uQiwgdmVydGljZXNCLCBheGlzKTtcblxuICAgICAgICAgICAgb3ZlcmxhcCA9IE1hdGgubWluKHByb2plY3Rpb25BLm1heCAtIHByb2plY3Rpb25CLm1pbiwgcHJvamVjdGlvbkIubWF4IC0gcHJvamVjdGlvbkEubWluKTtcblxuICAgICAgICAgICAgaWYgKG92ZXJsYXAgPD0gMCkge1xuICAgICAgICAgICAgICAgIHJlc3VsdC5vdmVybGFwID0gb3ZlcmxhcDtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAob3ZlcmxhcCA8IHJlc3VsdC5vdmVybGFwKSB7XG4gICAgICAgICAgICAgICAgcmVzdWx0Lm92ZXJsYXAgPSBvdmVybGFwO1xuICAgICAgICAgICAgICAgIHJlc3VsdC5heGlzID0gYXhpcztcbiAgICAgICAgICAgICAgICByZXN1bHQuYXhpc051bWJlciA9IGk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBQcm9qZWN0cyB2ZXJ0aWNlcyBvbiBhbiBheGlzIGFuZCByZXR1cm5zIGFuIGludGVydmFsLlxuICAgICAqIEBtZXRob2QgX3Byb2plY3RUb0F4aXNcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7fSBwcm9qZWN0aW9uXG4gICAgICogQHBhcmFtIHt9IHZlcnRpY2VzXG4gICAgICogQHBhcmFtIHt9IGF4aXNcbiAgICAgKi9cbiAgICB2YXIgX3Byb2plY3RUb0F4aXMgPSBmdW5jdGlvbihwcm9qZWN0aW9uLCB2ZXJ0aWNlcywgYXhpcykge1xuICAgICAgICB2YXIgbWluID0gVmVjdG9yLmRvdCh2ZXJ0aWNlc1swXSwgYXhpcyksXG4gICAgICAgICAgICBtYXggPSBtaW47XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPCB2ZXJ0aWNlcy5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgICAgICAgdmFyIGRvdCA9IFZlY3Rvci5kb3QodmVydGljZXNbaV0sIGF4aXMpO1xuXG4gICAgICAgICAgICBpZiAoZG90ID4gbWF4KSB7IFxuICAgICAgICAgICAgICAgIG1heCA9IGRvdDsgXG4gICAgICAgICAgICB9IGVsc2UgaWYgKGRvdCA8IG1pbikgeyBcbiAgICAgICAgICAgICAgICBtaW4gPSBkb3Q7IFxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcHJvamVjdGlvbi5taW4gPSBtaW47XG4gICAgICAgIHByb2plY3Rpb24ubWF4ID0gbWF4O1xuICAgIH07XG4gICAgXG4gICAgLyoqXG4gICAgICogRmluZHMgc3VwcG9ydGluZyB2ZXJ0aWNlcyBnaXZlbiB0d28gYm9kaWVzIGFsb25nIGEgZ2l2ZW4gZGlyZWN0aW9uIHVzaW5nIGhpbGwtY2xpbWJpbmcuXG4gICAgICogQG1ldGhvZCBfZmluZFN1cHBvcnRzXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge30gYm9keUFcbiAgICAgKiBAcGFyYW0ge30gYm9keUJcbiAgICAgKiBAcGFyYW0ge30gbm9ybWFsXG4gICAgICogQHJldHVybiBbdmVjdG9yXVxuICAgICAqL1xuICAgIHZhciBfZmluZFN1cHBvcnRzID0gZnVuY3Rpb24oYm9keUEsIGJvZHlCLCBub3JtYWwpIHtcbiAgICAgICAgdmFyIG5lYXJlc3REaXN0YW5jZSA9IE51bWJlci5NQVhfVkFMVUUsXG4gICAgICAgICAgICB2ZXJ0ZXhUb0JvZHkgPSBWZWN0b3IuX3RlbXBbMF0sXG4gICAgICAgICAgICB2ZXJ0aWNlcyA9IGJvZHlCLnZlcnRpY2VzLFxuICAgICAgICAgICAgYm9keUFQb3NpdGlvbiA9IGJvZHlBLnBvc2l0aW9uLFxuICAgICAgICAgICAgZGlzdGFuY2UsXG4gICAgICAgICAgICB2ZXJ0ZXgsXG4gICAgICAgICAgICB2ZXJ0ZXhBLFxuICAgICAgICAgICAgdmVydGV4QjtcblxuICAgICAgICAvLyBmaW5kIGNsb3Nlc3QgdmVydGV4IG9uIGJvZHlCXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdmVydGljZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZlcnRleCA9IHZlcnRpY2VzW2ldO1xuICAgICAgICAgICAgdmVydGV4VG9Cb2R5LnggPSB2ZXJ0ZXgueCAtIGJvZHlBUG9zaXRpb24ueDtcbiAgICAgICAgICAgIHZlcnRleFRvQm9keS55ID0gdmVydGV4LnkgLSBib2R5QVBvc2l0aW9uLnk7XG4gICAgICAgICAgICBkaXN0YW5jZSA9IC1WZWN0b3IuZG90KG5vcm1hbCwgdmVydGV4VG9Cb2R5KTtcblxuICAgICAgICAgICAgaWYgKGRpc3RhbmNlIDwgbmVhcmVzdERpc3RhbmNlKSB7XG4gICAgICAgICAgICAgICAgbmVhcmVzdERpc3RhbmNlID0gZGlzdGFuY2U7XG4gICAgICAgICAgICAgICAgdmVydGV4QSA9IHZlcnRleDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGZpbmQgbmV4dCBjbG9zZXN0IHZlcnRleCB1c2luZyB0aGUgdHdvIGNvbm5lY3RlZCB0byBpdFxuICAgICAgICB2YXIgcHJldkluZGV4ID0gdmVydGV4QS5pbmRleCAtIDEgPj0gMCA/IHZlcnRleEEuaW5kZXggLSAxIDogdmVydGljZXMubGVuZ3RoIC0gMTtcbiAgICAgICAgdmVydGV4ID0gdmVydGljZXNbcHJldkluZGV4XTtcbiAgICAgICAgdmVydGV4VG9Cb2R5LnggPSB2ZXJ0ZXgueCAtIGJvZHlBUG9zaXRpb24ueDtcbiAgICAgICAgdmVydGV4VG9Cb2R5LnkgPSB2ZXJ0ZXgueSAtIGJvZHlBUG9zaXRpb24ueTtcbiAgICAgICAgbmVhcmVzdERpc3RhbmNlID0gLVZlY3Rvci5kb3Qobm9ybWFsLCB2ZXJ0ZXhUb0JvZHkpO1xuICAgICAgICB2ZXJ0ZXhCID0gdmVydGV4O1xuXG4gICAgICAgIHZhciBuZXh0SW5kZXggPSAodmVydGV4QS5pbmRleCArIDEpICUgdmVydGljZXMubGVuZ3RoO1xuICAgICAgICB2ZXJ0ZXggPSB2ZXJ0aWNlc1tuZXh0SW5kZXhdO1xuICAgICAgICB2ZXJ0ZXhUb0JvZHkueCA9IHZlcnRleC54IC0gYm9keUFQb3NpdGlvbi54O1xuICAgICAgICB2ZXJ0ZXhUb0JvZHkueSA9IHZlcnRleC55IC0gYm9keUFQb3NpdGlvbi55O1xuICAgICAgICBkaXN0YW5jZSA9IC1WZWN0b3IuZG90KG5vcm1hbCwgdmVydGV4VG9Cb2R5KTtcbiAgICAgICAgaWYgKGRpc3RhbmNlIDwgbmVhcmVzdERpc3RhbmNlKSB7XG4gICAgICAgICAgICB2ZXJ0ZXhCID0gdmVydGV4O1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIFt2ZXJ0ZXhBLCB2ZXJ0ZXhCXTtcbiAgICB9O1xuXG59KSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L21hdHRlci1qcy9zcmMvY29sbGlzaW9uL1NBVC5qc1xuLy8gbW9kdWxlIGlkID0gMzNcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 34 */
/* no static exports found */
/* all exports used */
/*!*******************************************!*\
  !*** ./~/matter-js/src/factory/Bodies.js ***!
  \*******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = __webpack_require__(/*! ../geometry/Vertices */ 7);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\nvar Body = __webpack_require__(/*! ../body/Body */ 19);\nvar Bounds = __webpack_require__(/*! ../geometry/Bounds */ 2);\nvar Vector = __webpack_require__(/*! ../geometry/Vector */ 3);\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!window.decomp) {\n            Common.log('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.', 'warn');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !window.decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = new decomp.Polygon();\n                for (i = 0; i < vertices.length; i++) {\n                    concave.vertices.push([vertices[i].x, vertices[i].y]);\n                }\n\n                // vertices are concave and simple, we can decompose into parts\n                concave.makeCCW();\n                if (removeCollinear !== false)\n                    concave.removeCollinearPoints(removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = concave.quickDecomp();\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i],\n                        chunkVertices = [];\n\n                    // convert vertices into the correct structure\n                    for (j = 0; j < chunk.vertices.length; j++) {\n                        chunkVertices.push({ x: chunk.vertices[j][0], y: chunk.vertices[j][1] });\n                    }\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 35 */
/* no static exports found */
/* all exports used */
/*!******************************************!*\
  !*** ./~/matter-js/src/geometry/Axes.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = __webpack_require__(/*! ../geometry/Vector */ 3);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hdHRlci1qcy9zcmMvZ2VvbWV0cnkvQXhlcy5qcz9hN2EyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuKiBUaGUgYE1hdHRlci5BeGVzYCBtb2R1bGUgY29udGFpbnMgbWV0aG9kcyBmb3IgY3JlYXRpbmcgYW5kIG1hbmlwdWxhdGluZyBzZXRzIG9mIGF4ZXMuXG4qXG4qIEBjbGFzcyBBeGVzXG4qL1xuXG52YXIgQXhlcyA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEF4ZXM7XG5cbnZhciBWZWN0b3IgPSByZXF1aXJlKCcuLi9nZW9tZXRyeS9WZWN0b3InKTtcbnZhciBDb21tb24gPSByZXF1aXJlKCcuLi9jb3JlL0NvbW1vbicpO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IHNldCBvZiBheGVzIGZyb20gdGhlIGdpdmVuIHZlcnRpY2VzLlxuICAgICAqIEBtZXRob2QgZnJvbVZlcnRpY2VzXG4gICAgICogQHBhcmFtIHt2ZXJ0aWNlc30gdmVydGljZXNcbiAgICAgKiBAcmV0dXJuIHtheGVzfSBBIG5ldyBheGVzIGZyb20gdGhlIGdpdmVuIHZlcnRpY2VzXG4gICAgICovXG4gICAgQXhlcy5mcm9tVmVydGljZXMgPSBmdW5jdGlvbih2ZXJ0aWNlcykge1xuICAgICAgICB2YXIgYXhlcyA9IHt9O1xuXG4gICAgICAgIC8vIGZpbmQgdGhlIHVuaXF1ZSBheGVzLCB1c2luZyBlZGdlIG5vcm1hbCBncmFkaWVudHNcbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB2ZXJ0aWNlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGogPSAoaSArIDEpICUgdmVydGljZXMubGVuZ3RoLCBcbiAgICAgICAgICAgICAgICBub3JtYWwgPSBWZWN0b3Iubm9ybWFsaXNlKHsgXG4gICAgICAgICAgICAgICAgICAgIHg6IHZlcnRpY2VzW2pdLnkgLSB2ZXJ0aWNlc1tpXS55LCBcbiAgICAgICAgICAgICAgICAgICAgeTogdmVydGljZXNbaV0ueCAtIHZlcnRpY2VzW2pdLnhcbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBncmFkaWVudCA9IChub3JtYWwueSA9PT0gMCkgPyBJbmZpbml0eSA6IChub3JtYWwueCAvIG5vcm1hbC55KTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgLy8gbGltaXQgcHJlY2lzaW9uXG4gICAgICAgICAgICBncmFkaWVudCA9IGdyYWRpZW50LnRvRml4ZWQoMykudG9TdHJpbmcoKTtcbiAgICAgICAgICAgIGF4ZXNbZ3JhZGllbnRdID0gbm9ybWFsO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIENvbW1vbi52YWx1ZXMoYXhlcyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJvdGF0ZXMgYSBzZXQgb2YgYXhlcyBieSB0aGUgZ2l2ZW4gYW5nbGUuXG4gICAgICogQG1ldGhvZCByb3RhdGVcbiAgICAgKiBAcGFyYW0ge2F4ZXN9IGF4ZXNcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gYW5nbGVcbiAgICAgKi9cbiAgICBBeGVzLnJvdGF0ZSA9IGZ1bmN0aW9uKGF4ZXMsIGFuZ2xlKSB7XG4gICAgICAgIGlmIChhbmdsZSA9PT0gMClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgXG4gICAgICAgIHZhciBjb3MgPSBNYXRoLmNvcyhhbmdsZSksXG4gICAgICAgICAgICBzaW4gPSBNYXRoLnNpbihhbmdsZSk7XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBheGVzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICB2YXIgYXhpcyA9IGF4ZXNbaV0sXG4gICAgICAgICAgICAgICAgeHg7XG4gICAgICAgICAgICB4eCA9IGF4aXMueCAqIGNvcyAtIGF4aXMueSAqIHNpbjtcbiAgICAgICAgICAgIGF4aXMueSA9IGF4aXMueCAqIHNpbiArIGF4aXMueSAqIGNvcztcbiAgICAgICAgICAgIGF4aXMueCA9IHh4O1xuICAgICAgICB9XG4gICAgfTtcblxufSkoKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9tYXR0ZXItanMvc3JjL2dlb21ldHJ5L0F4ZXMuanNcbi8vIG1vZHVsZSBpZCA9IDM1XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 36 */
/* no static exports found */
/* all exports used */
/*!******************************************!*\
  !*** ./~/matter-js/src/render/Render.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\nvar Composite = __webpack_require__(/*! ../body/Composite */ 6);\nvar Bounds = __webpack_require__(/*! ../geometry/Bounds */ 2);\nvar Events = __webpack_require__(/*! ../core/Events */ 13);\nvar Grid = __webpack_require__(/*! ../collision/Grid */ 32);\nvar Vector = __webpack_require__(/*! ../geometry/Vector */ 3);\n\n(function() {\n    \n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || { \n            min: { \n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / options.width,\n                boundsScaleY = boundsHeight / options.height;\n\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n        \n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            context.setTransform(options.pixelRatio, 0, 0, options.pixelRatio, 0, 0);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n            // @if DEBUG\n            if (metrics.extended) {\n                if (metrics.timing) {\n                    text += \"delta: \" + metrics.timing.delta.toFixed(3) + space;\n                    text += \"correction: \" + metrics.timing.correction.toFixed(3) + space;\n                }\n\n                text += \"bodies: \" + bodies.length + space;\n\n                if (engine.broadphase.controller === Grid)\n                    text += \"buckets: \" + metrics.buckets + space;\n\n                text += \"\\n\";\n\n                text += \"collisions: \" + metrics.collisions + space;\n                text += \"pairs: \" + engine.pairs.list.length + space;\n                text += \"broad: \" + metrics.broadEff + space;\n                text += \"mid: \" + metrics.midEff + space;\n                text += \"narrow: \" + metrics.narrowEff + space;\n            }\n            // @endif            \n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB;\n\n            if (bodyA) {\n                c.beginPath();\n                c.moveTo(bodyA.position.x + constraint.pointA.x, bodyA.position.y + constraint.pointA.y);\n            } else {\n                c.beginPath();\n                c.moveTo(constraint.pointA.x, constraint.pointA.y);\n            }\n\n            if (bodyB) {\n                c.lineTo(bodyB.position.x + constraint.pointB.x, bodyB.position.y + constraint.pointB.y);\n            } else {\n                c.lineTo(constraint.pointB.x, constraint.pointB.y);\n            }\n\n            c.lineWidth = constraint.render.lineWidth;\n            c.strokeStyle = constraint.render.strokeStyle;\n            c.stroke();\n        }\n    };\n    \n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y); \n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale, \n                        texture.height * -sprite.yOffset * sprite.yScale, \n                        texture.width * sprite.xScale, \n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y); \n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n                        \n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n                        c.lineWidth = part.render.lineWidth;\n                        c.strokeStyle = part.render.strokeStyle;\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                    }\n\n                    c.stroke();\n                }\n\n                c.globalAlpha = 1;\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n                \n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n            \n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2, \n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.8)';\n            c.globalCompositeOperation = 'overlay';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n            \n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n                \n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(',');\n            c.rect(0.5 + parseInt(region[0], 10) * grid.bucketWidth, \n                    0.5 + parseInt(region[1], 10) * grid.bucketHeight, \n                    grid.bucketWidth, \n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n            \n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3), \n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y), \n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"contain\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region. \n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 37 */
/* exports provided: EventManager */
/* exports used: EventManager */
/*!************************************!*\
  !*** ./src/common/eventManager.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("// unique key\nconst _eventManagerSingleton = Symbol(\"eventManagerSingleton\");\n\n/**\r\n * Event Manager Singleton Class\r\n */\nclass EventManagerSingleton {\n  //#region Constructors\n\n  constructor(eventManagerSingletonToken) {\n    if (_eventManagerSingleton !== eventManagerSingletonToken) {\n      throw new Error(\"Cannot instantiate directly.\");\n    }\n    this._handlers = {};\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static get instance() {\n    if (!this[_eventManagerSingleton]) {\n      this[_eventManagerSingleton] = new EventManagerSingleton(_eventManagerSingleton);\n    }\n\n    return this[_eventManagerSingleton];\n  }\n\n  //#endregion\n\n  /**\r\n     *\r\n     * @param topic\r\n     * @param callback\r\n     * @param context (optional)\r\n     */\n  subscribe(topic, callback, context) {\n    if (!this._handlers.hasOwnProperty(topic)) {\n      this._handlers[topic] = [];\n    }\n\n    this._handlers[topic].push({\n      callback: callback,\n      context: context\n    });\n  }\n\n  /**\r\n     * Removes the subscription of a topic\r\n     * @param topic\r\n     * @param callback (for reference)\r\n     */\n  removeSubscription(topic, callback) {\n    if (!this._handlers[topic]) {\n      return;\n    }\n\n    for (let i = this._handlers[topic].length - 1; i >= 0; i--) {\n      if (this._handlers[topic][i].callback == callback) {\n        this._handlers[topic].splice(i, 1);\n      }\n    }\n\n    // no more subscriptions for this topic?\n    if (this._handlers[topic].length == 0) {\n      // nope... let's remove the topic then:\n      delete this._handlers[topic];\n    }\n  }\n\n  /**\r\n     *\r\n     * @param topic\r\n     */\n  emit(topic) {\n    // get the remaining arguments (if exist)\n    let args = [],\n        i;\n    if (arguments.length > 1) {\n      for (i = 1; i < arguments.length; i++) {\n        args.push(arguments[i]);\n      }\n    }\n\n    if (!this._handlers.hasOwnProperty(topic)) {\n      return;\n    }\n\n    for (i = this._handlers[topic].length - 1; i >= 0; i--) {\n      if (this._handlers[topic][i].callback) {\n        this._handlers[topic][i].callback.apply(this._handlers[topic][i].context, args);\n      } else {\n        // this doesn't seem to exist anymore\n        // let's remove it from the subscribers\n        this._handlers[topic].splice(i, 1);\n      }\n    }\n  }\n\n  /**\r\n     * Clears all subscriptions\r\n     */\n  clear() {\n    this._handlers = {};\n  }\n\n  //#endregion\n}\n\n/**\r\n * Event Manager alias to Event Manager Singleton instance\r\n */\nconst EventManager = EventManagerSingleton.instance;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = EventManager;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1vbi9ldmVudE1hbmFnZXIuanM/ZjE2YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB1bmlxdWUga2V5XHJcbmNvbnN0IF9ldmVudE1hbmFnZXJTaW5nbGV0b24gPSBTeW1ib2woXCJldmVudE1hbmFnZXJTaW5nbGV0b25cIik7XHJcblxyXG4vKipcclxuICogRXZlbnQgTWFuYWdlciBTaW5nbGV0b24gQ2xhc3NcclxuICovXHJcbmNsYXNzIEV2ZW50TWFuYWdlclNpbmdsZXRvbiB7XHJcbiAgLy8jcmVnaW9uIENvbnN0cnVjdG9yc1xyXG5cclxuICBjb25zdHJ1Y3RvcihldmVudE1hbmFnZXJTaW5nbGV0b25Ub2tlbikge1xyXG4gICAgaWYgKF9ldmVudE1hbmFnZXJTaW5nbGV0b24gIT09IGV2ZW50TWFuYWdlclNpbmdsZXRvblRva2VuKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbm5vdCBpbnN0YW50aWF0ZSBkaXJlY3RseS5cIik7XHJcbiAgICB9XHJcbiAgICB0aGlzLl9oYW5kbGVycyA9IHt9O1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBNZXRob2RzXHJcblxyXG4gIC8vI3JlZ2lvbiBTdGF0aWMgTWV0aG9kc1xyXG5cclxuICBzdGF0aWMgZ2V0IGluc3RhbmNlKCkge1xyXG4gICAgaWYgKCF0aGlzW19ldmVudE1hbmFnZXJTaW5nbGV0b25dKSB7XHJcbiAgICAgIHRoaXNbX2V2ZW50TWFuYWdlclNpbmdsZXRvbl0gPSBuZXcgRXZlbnRNYW5hZ2VyU2luZ2xldG9uKF9ldmVudE1hbmFnZXJTaW5nbGV0b24pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB0aGlzW19ldmVudE1hbmFnZXJTaW5nbGV0b25dO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB0b3BpY1xyXG4gICAgICogQHBhcmFtIGNhbGxiYWNrXHJcbiAgICAgKiBAcGFyYW0gY29udGV4dCAob3B0aW9uYWwpXHJcbiAgICAgKi9cclxuICBzdWJzY3JpYmUodG9waWMsIGNhbGxiYWNrLCBjb250ZXh0KSB7XHJcbiAgICBpZiAoIXRoaXMuX2hhbmRsZXJzLmhhc093blByb3BlcnR5KHRvcGljKSkge1xyXG4gICAgICB0aGlzLl9oYW5kbGVyc1t0b3BpY10gPSBbXTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9oYW5kbGVyc1t0b3BpY10ucHVzaCh7XHJcbiAgICAgIGNhbGxiYWNrOiBjYWxsYmFjayxcclxuICAgICAgY29udGV4dDogY29udGV4dFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIFJlbW92ZXMgdGhlIHN1YnNjcmlwdGlvbiBvZiBhIHRvcGljXHJcbiAgICAgKiBAcGFyYW0gdG9waWNcclxuICAgICAqIEBwYXJhbSBjYWxsYmFjayAoZm9yIHJlZmVyZW5jZSlcclxuICAgICAqL1xyXG4gIHJlbW92ZVN1YnNjcmlwdGlvbih0b3BpYywgY2FsbGJhY2spIHtcclxuICAgIGlmICghdGhpcy5faGFuZGxlcnNbdG9waWNdKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGxldCBpID0gdGhpcy5faGFuZGxlcnNbdG9waWNdLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XHJcbiAgICAgIGlmICh0aGlzLl9oYW5kbGVyc1t0b3BpY11baV0uY2FsbGJhY2sgPT0gY2FsbGJhY2spIHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVyc1t0b3BpY10uc3BsaWNlKGksIDEpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gbm8gbW9yZSBzdWJzY3JpcHRpb25zIGZvciB0aGlzIHRvcGljP1xyXG4gICAgaWYgKHRoaXMuX2hhbmRsZXJzW3RvcGljXS5sZW5ndGggPT0gMCkge1xyXG4gICAgICAvLyBub3BlLi4uIGxldCdzIHJlbW92ZSB0aGUgdG9waWMgdGhlbjpcclxuICAgICAgZGVsZXRlIHRoaXMuX2hhbmRsZXJzW3RvcGljXTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB0b3BpY1xyXG4gICAgICovXHJcbiAgZW1pdCh0b3BpYykge1xyXG4gICAgLy8gZ2V0IHRoZSByZW1haW5pbmcgYXJndW1lbnRzIChpZiBleGlzdClcclxuICAgIGxldCBhcmdzID0gW10sXHJcbiAgICAgIGk7XHJcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA+IDEpIHtcclxuICAgICAgZm9yIChpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIGFyZ3MucHVzaChhcmd1bWVudHNbaV0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKCF0aGlzLl9oYW5kbGVycy5oYXNPd25Qcm9wZXJ0eSh0b3BpYykpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGZvciAoaSA9IHRoaXMuX2hhbmRsZXJzW3RvcGljXS5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xyXG4gICAgICBpZiAodGhpcy5faGFuZGxlcnNbdG9waWNdW2ldLmNhbGxiYWNrKSB7XHJcbiAgICAgICAgdGhpcy5faGFuZGxlcnNbdG9waWNdW2ldLmNhbGxiYWNrLmFwcGx5KHRoaXMuX2hhbmRsZXJzW3RvcGljXVtpXS5jb250ZXh0LCBhcmdzKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyB0aGlzIGRvZXNuJ3Qgc2VlbSB0byBleGlzdCBhbnltb3JlXHJcbiAgICAgICAgLy8gbGV0J3MgcmVtb3ZlIGl0IGZyb20gdGhlIHN1YnNjcmliZXJzXHJcbiAgICAgICAgdGhpcy5faGFuZGxlcnNbdG9waWNdLnNwbGljZShpLCAxKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBDbGVhcnMgYWxsIHN1YnNjcmlwdGlvbnNcclxuICAgICAqL1xyXG4gIGNsZWFyKCkge1xyXG4gICAgdGhpcy5faGFuZGxlcnMgPSB7fTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG59XHJcblxyXG4vKipcclxuICogRXZlbnQgTWFuYWdlciBhbGlhcyB0byBFdmVudCBNYW5hZ2VyIFNpbmdsZXRvbiBpbnN0YW5jZVxyXG4gKi9cclxuZXhwb3J0IGNvbnN0IEV2ZW50TWFuYWdlciA9IEV2ZW50TWFuYWdlclNpbmdsZXRvbi5pbnN0YW5jZTtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb21tb24vZXZlbnRNYW5hZ2VyLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdEdBO0FBQ0E7QUF3R0E7OztBQUdBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 38 */
/* exports provided: default */
/* exports used: default */
/*!***********************************!*\
  !*** ./src/common/fileContext.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * File Context Class\r\n */\nclass FileContext {\n  /**\r\n     *\r\n     * @param {*} headers\r\n     * @param {String} content\r\n     */\n  constructor(headers, content) {\n    this.headers = headers;\n    this.content = content;\n  }\n\n  /**\r\n     * Creates a file context from a XHR object\r\n     * @param {XMLHttpRequest} xhr\r\n     * @returns {FileContext}\r\n     */\n  static fromXHR(xhr) {\n    let headers = {};\n\n    // iterate through every header line\n    xhr.getAllResponseHeaders().split(\"\\r\\n\").forEach(headerLine => {\n      let index = headerLine.indexOf(\":\");\n\n      // if ':' character does not exist,\n      // no need to go further on this iteration\n      if (index === -1) {\n        return;\n      }\n\n      let key = headerLine.slice(0, index).toLowerCase().trim();\n      let value = headerLine.slice(index + 1).trim();\n\n      headers[key] = value;\n    });\n\n    return new FileContext(headers, xhr.responseText);\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = FileContext;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1vbi9maWxlQ29udGV4dC5qcz83YTNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBGaWxlIENvbnRleHQgQ2xhc3NcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpbGVDb250ZXh0IHtcclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0geyp9IGhlYWRlcnNcclxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBjb250ZW50XHJcbiAgICAgKi9cclxuICBjb25zdHJ1Y3RvcihoZWFkZXJzLCBjb250ZW50KSB7XHJcbiAgICB0aGlzLmhlYWRlcnMgPSBoZWFkZXJzO1xyXG4gICAgdGhpcy5jb250ZW50ID0gY29udGVudDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogQ3JlYXRlcyBhIGZpbGUgY29udGV4dCBmcm9tIGEgWEhSIG9iamVjdFxyXG4gICAgICogQHBhcmFtIHtYTUxIdHRwUmVxdWVzdH0geGhyXHJcbiAgICAgKiBAcmV0dXJucyB7RmlsZUNvbnRleHR9XHJcbiAgICAgKi9cclxuICBzdGF0aWMgZnJvbVhIUih4aHIpIHtcclxuICAgIGxldCBoZWFkZXJzID0ge307XHJcblxyXG4gICAgLy8gaXRlcmF0ZSB0aHJvdWdoIGV2ZXJ5IGhlYWRlciBsaW5lXHJcbiAgICB4aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkuc3BsaXQoXCJcXHJcXG5cIikuZm9yRWFjaChoZWFkZXJMaW5lID0+IHtcclxuICAgICAgbGV0IGluZGV4ID0gaGVhZGVyTGluZS5pbmRleE9mKFwiOlwiKTtcclxuXHJcbiAgICAgIC8vIGlmICc6JyBjaGFyYWN0ZXIgZG9lcyBub3QgZXhpc3QsXHJcbiAgICAgIC8vIG5vIG5lZWQgdG8gZ28gZnVydGhlciBvbiB0aGlzIGl0ZXJhdGlvblxyXG4gICAgICBpZiAoaW5kZXggPT09IC0xKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBsZXQga2V5ID0gaGVhZGVyTGluZS5zbGljZSgwLCBpbmRleCkudG9Mb3dlckNhc2UoKS50cmltKCk7XHJcbiAgICAgIGxldCB2YWx1ZSA9IGhlYWRlckxpbmUuc2xpY2UoaW5kZXggKyAxKS50cmltKCk7XHJcblxyXG4gICAgICBoZWFkZXJzW2tleV0gPSB2YWx1ZTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiBuZXcgRmlsZUNvbnRleHQoaGVhZGVycywgeGhyLnJlc3BvbnNlVGV4dCk7XHJcbiAgfVxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29tbW9uL2ZpbGVDb250ZXh0LmpzIl0sIm1hcHBpbmdzIjoiQUFBQTs7O0FBR0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBcENBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 39 */
/* exports provided: default */
/* exports used: default */
/*!******************************!*\
  !*** ./src/core/camera2D.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_math_matrix4__ = __webpack_require__(/*! math/matrix4 */ 16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_math_vector2__ = __webpack_require__(/*! math/vector2 */ 5);\n\n\n\n/**\r\n * Camera2D class\r\n */\n\nclass Camera2D {\n  //#region Constructors\n\n  /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     * @param viewWidth\r\n     * @param viewHeight\r\n     * @param zoom\r\n     */\n  constructor(x, y, viewWidth, viewHeight, zoom) {\n    // public properties:\n    this.x = x || 0;\n    this.y = y || 0;\n    this.zoom = zoom || 1.0;\n    this.viewWidth = viewWidth || 0;\n    this.viewHeight = viewHeight || 0;\n\n    // private properties:\n    this._lastX = null;\n    this._lastY = null;\n    this._lastZoom = null;\n    this._matrix = new __WEBPACK_IMPORTED_MODULE_0_math_matrix4__[\"a\" /* default */]();\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  /**\r\n     *\r\n     * @param data\r\n     * @returns {Camera2D}\r\n     */\n  static restore(data) {\n    return new Camera2D(data.x, data.y, data.viewWidth, data.viewHeight, data.zoom);\n  }\n\n  //#endregion\n\n  /**\r\n     *\r\n     * @returns {Float32Array}\r\n     */\n  calculateMatrix() {\n    // generate orthographic perspective:\n    this._matrix.orthographic(this.x + -this.viewWidth * this.zoom / 2.0, this.x + this.viewWidth * this.zoom / 2.0, this.y + this.viewHeight * this.zoom / 2.0, this.y + -this.viewHeight * this.zoom / 2.0, 0.0, 1.0);\n\n    this._lastX = this.x;\n    this._lastY = this.y;\n    this._lastZoom = this.zoom;\n\n    return this._matrix.asArray();\n  }\n\n  /**\r\n     *\r\n     * @param viewWidth\r\n     * @param viewHeight\r\n     */\n  setViewSize(viewWidth, viewHeight) {\n    this.viewWidth = viewWidth;\n    this.viewHeight = viewHeight;\n\n    // force the camera calculations\n    this.calculateMatrix();\n  }\n\n  /**\r\n     *\r\n     * @returns {*|number}\r\n     */\n  getViewWidth() {\n    return this.viewWidth;\n  }\n\n  /**\r\n     *\r\n     * @returns {*|number}\r\n     */\n  getViewHeight() {\n    return this.viewHeight;\n  }\n\n  /**\r\n     *\r\n     * @returns {Float32Array}\r\n     */\n  getMatrix() {\n    // needs to have a new calculation?\n    if (this.x != this._lastX || this.y != this._lastY || this._lastZoom != this.zoom) {\n      return this.calculateMatrix();\n    }\n\n    return this._matrix.asArray();\n  }\n\n  /**\r\n     *\r\n     * @param screenX\r\n     * @param screenY\r\n     */\n  screenToWorldCoordinates(screenX, screenY) {\n    // first we normalize the screen position:\n    let x = 2.0 * screenX / this.viewWidth - 1.0;\n    let y = 1.0 - 2.0 * screenY / this.viewHeight;\n\n    // then we calculate and return the world coordinates:\n    return __WEBPACK_IMPORTED_MODULE_1_math_vector2__[\"a\" /* default */].transformMat4(new __WEBPACK_IMPORTED_MODULE_1_math_vector2__[\"a\" /* default */](x, y), new __WEBPACK_IMPORTED_MODULE_0_math_matrix4__[\"a\" /* default */](this.getMatrix()).invert());\n  }\n\n  /**\r\n     *\r\n     */\n  unload() {}\n\n  /**\r\n     *\r\n     * @returns {{x: (*|number), y: (*|number), zoom: (*|number)}}\r\n     */\n  objectify() {\n    return {\n      x: this.x,\n      y: this.y,\n      zoom: this.zoom\n    };\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Camera2D;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvcmUvY2FtZXJhMkQuanM/MTAxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgTWF0cml4NCBmcm9tIFwibWF0aC9tYXRyaXg0XCI7XHJcbmltcG9ydCBWZWN0b3IyIGZyb20gXCJtYXRoL3ZlY3RvcjJcIjtcclxuXHJcbi8qKlxyXG4gKiBDYW1lcmEyRCBjbGFzc1xyXG4gKi9cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhbWVyYTJEIHtcclxuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB4XHJcbiAgICAgKiBAcGFyYW0geVxyXG4gICAgICogQHBhcmFtIHZpZXdXaWR0aFxyXG4gICAgICogQHBhcmFtIHZpZXdIZWlnaHRcclxuICAgICAqIEBwYXJhbSB6b29tXHJcbiAgICAgKi9cclxuICBjb25zdHJ1Y3Rvcih4LCB5LCB2aWV3V2lkdGgsIHZpZXdIZWlnaHQsIHpvb20pIHtcclxuICAgIC8vIHB1YmxpYyBwcm9wZXJ0aWVzOlxyXG4gICAgdGhpcy54ID0geCB8fCAwO1xyXG4gICAgdGhpcy55ID0geSB8fCAwO1xyXG4gICAgdGhpcy56b29tID0gem9vbSB8fCAxLjA7XHJcbiAgICB0aGlzLnZpZXdXaWR0aCA9IHZpZXdXaWR0aCB8fCAwO1xyXG4gICAgdGhpcy52aWV3SGVpZ2h0ID0gdmlld0hlaWdodCB8fCAwO1xyXG5cclxuICAgIC8vIHByaXZhdGUgcHJvcGVydGllczpcclxuICAgIHRoaXMuX2xhc3RYID0gbnVsbDtcclxuICAgIHRoaXMuX2xhc3RZID0gbnVsbDtcclxuICAgIHRoaXMuX2xhc3Rab29tID0gbnVsbDtcclxuICAgIHRoaXMuX21hdHJpeCA9IG5ldyBNYXRyaXg0KCk7XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIE1ldGhvZHNcclxuXHJcbiAgLy8jcmVnaW9uIFN0YXRpYyBNZXRob2RzXHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBkYXRhXHJcbiAgICAgKiBAcmV0dXJucyB7Q2FtZXJhMkR9XHJcbiAgICAgKi9cclxuICBzdGF0aWMgcmVzdG9yZShkYXRhKSB7XHJcbiAgICByZXR1cm4gbmV3IENhbWVyYTJEKGRhdGEueCwgZGF0YS55LCBkYXRhLnZpZXdXaWR0aCwgZGF0YS52aWV3SGVpZ2h0LCBkYXRhLnpvb20pO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm5zIHtGbG9hdDMyQXJyYXl9XHJcbiAgICAgKi9cclxuICBjYWxjdWxhdGVNYXRyaXgoKSB7XHJcbiAgICAvLyBnZW5lcmF0ZSBvcnRob2dyYXBoaWMgcGVyc3BlY3RpdmU6XHJcbiAgICB0aGlzLl9tYXRyaXgub3J0aG9ncmFwaGljKFxyXG4gICAgICB0aGlzLnggKyAtdGhpcy52aWV3V2lkdGggKiB0aGlzLnpvb20gLyAyLjAsXHJcbiAgICAgIHRoaXMueCArIHRoaXMudmlld1dpZHRoICogdGhpcy56b29tIC8gMi4wLFxyXG4gICAgICB0aGlzLnkgKyB0aGlzLnZpZXdIZWlnaHQgKiB0aGlzLnpvb20gLyAyLjAsXHJcbiAgICAgIHRoaXMueSArIC10aGlzLnZpZXdIZWlnaHQgKiB0aGlzLnpvb20gLyAyLjAsXHJcbiAgICAgIDAuMCxcclxuICAgICAgMS4wXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX2xhc3RYID0gdGhpcy54O1xyXG4gICAgdGhpcy5fbGFzdFkgPSB0aGlzLnk7XHJcbiAgICB0aGlzLl9sYXN0Wm9vbSA9IHRoaXMuem9vbTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5fbWF0cml4LmFzQXJyYXkoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSB2aWV3V2lkdGhcclxuICAgICAqIEBwYXJhbSB2aWV3SGVpZ2h0XHJcbiAgICAgKi9cclxuICBzZXRWaWV3U2l6ZSh2aWV3V2lkdGgsIHZpZXdIZWlnaHQpIHtcclxuICAgIHRoaXMudmlld1dpZHRoID0gdmlld1dpZHRoO1xyXG4gICAgdGhpcy52aWV3SGVpZ2h0ID0gdmlld0hlaWdodDtcclxuXHJcbiAgICAvLyBmb3JjZSB0aGUgY2FtZXJhIGNhbGN1bGF0aW9uc1xyXG4gICAgdGhpcy5jYWxjdWxhdGVNYXRyaXgoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm5zIHsqfG51bWJlcn1cclxuICAgICAqL1xyXG4gIGdldFZpZXdXaWR0aCgpIHtcclxuICAgIHJldHVybiB0aGlzLnZpZXdXaWR0aDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEByZXR1cm5zIHsqfG51bWJlcn1cclxuICAgICAqL1xyXG4gIGdldFZpZXdIZWlnaHQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy52aWV3SGVpZ2h0O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybnMge0Zsb2F0MzJBcnJheX1cclxuICAgICAqL1xyXG4gIGdldE1hdHJpeCgpIHtcclxuICAgIC8vIG5lZWRzIHRvIGhhdmUgYSBuZXcgY2FsY3VsYXRpb24/XHJcbiAgICBpZiAodGhpcy54ICE9IHRoaXMuX2xhc3RYIHx8IHRoaXMueSAhPSB0aGlzLl9sYXN0WSB8fCB0aGlzLl9sYXN0Wm9vbSAhPSB0aGlzLnpvb20pIHtcclxuICAgICAgcmV0dXJuIHRoaXMuY2FsY3VsYXRlTWF0cml4KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuX21hdHJpeC5hc0FycmF5KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gc2NyZWVuWFxyXG4gICAgICogQHBhcmFtIHNjcmVlbllcclxuICAgICAqL1xyXG4gIHNjcmVlblRvV29ybGRDb29yZGluYXRlcyhzY3JlZW5YLCBzY3JlZW5ZKSB7XHJcbiAgICAvLyBmaXJzdCB3ZSBub3JtYWxpemUgdGhlIHNjcmVlbiBwb3NpdGlvbjpcclxuICAgIGxldCB4ID0gMi4wICogc2NyZWVuWCAvIHRoaXMudmlld1dpZHRoIC0gMS4wO1xyXG4gICAgbGV0IHkgPSAxLjAgLSAyLjAgKiBzY3JlZW5ZIC8gdGhpcy52aWV3SGVpZ2h0O1xyXG5cclxuICAgIC8vIHRoZW4gd2UgY2FsY3VsYXRlIGFuZCByZXR1cm4gdGhlIHdvcmxkIGNvb3JkaW5hdGVzOlxyXG4gICAgcmV0dXJuIFZlY3RvcjIudHJhbnNmb3JtTWF0NChuZXcgVmVjdG9yMih4LCB5KSwgbmV3IE1hdHJpeDQodGhpcy5nZXRNYXRyaXgoKSkuaW52ZXJ0KCkpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICovXHJcbiAgdW5sb2FkKCkge31cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHJldHVybnMge3t4OiAoKnxudW1iZXIpLCB5OiAoKnxudW1iZXIpLCB6b29tOiAoKnxudW1iZXIpfX1cclxuICAgICAqL1xyXG4gIG9iamVjdGlmeSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHg6IHRoaXMueCxcclxuICAgICAgeTogdGhpcy55LFxyXG4gICAgICB6b29tOiB0aGlzLnpvb21cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvcmUvY2FtZXJhMkQuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7OztBQVFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFIQTtBQUtBO0FBQ0E7QUFDQTtBQTFJQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 40 */
/* exports provided: default */
/* exports used: default */
/*!*******************************!*\
  !*** ./src/core/fontStyle.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_attributeDictionary__ = __webpack_require__(/*! common/attributeDictionary */ 8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_contentLoader__ = __webpack_require__(/*! common/contentLoader */ 14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_utility_bmFontParser__ = __webpack_require__(/*! utility/bmFontParser */ 56);\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"fontStyle\", \"_fontDescriptionFilePath\", {\n  displayName: \"Font Description Source\",\n  editor: \"filepath\"\n});\n__WEBPACK_IMPORTED_MODULE_0_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"fontStyle\", \"_fontDescription\", {\n  visible: false\n});\n\n/**\n * FontStyle Class\n */\nclass FontStyle {\n  //#region Constructors\n\n  /**\n     * @param fontDescription\n     * @constructor\n     */\n  constructor(fontDescription, fontDescriptionFilePath) {\n    this._fontDescriptionFilePath = fontDescriptionFilePath;\n    this._fontDescription = fontDescription;\n    this._fontSize = 70;\n    this._letterSpacing = 0;\n    this._spread = 4;\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static restore(data) {\n    let fontStyle = new FontStyle(data.fontDescription, data.fontDescriptionFilePath);\n\n    fontStyle.setSpread(data.spread);\n    fontStyle.setFontSize(data.fontSize);\n    fontStyle.setLetterSpacing(data.letterSpacing);\n\n    return fontStyle;\n  }\n\n  //#endregion\n\n  //#region Public Methods\n\n  getFontDescription() {\n    return this._fontDescription;\n  }\n\n  setFontDescription(fontInfo) {\n    // don't go further if fontInfo is invalid\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(fontInfo)) {\n      throw new Error(\"fontInfo needs to be valid.\");\n    }\n\n    // TODO: make sure fontInfo follows bmfont format!\n\n    return this._fontDescription = fontInfo;\n  }\n\n  getFontDescriptionFilePath() {\n    return this._fontDescriptionFilePath;\n  }\n\n  async setFontDescriptionFilePath(filepath) {\n    const fileContext = await __WEBPACK_IMPORTED_MODULE_1_common_contentLoader__[\"a\" /* ContentLoader */].loadFile(filepath, \"openSansFont\");\n\n    if (fileContext === false) {\n      return;\n    }\n\n    let parsedBMFont = __WEBPACK_IMPORTED_MODULE_3_utility_bmFontParser__[\"a\" /* default */].parse(fileContext);\n\n    this.setFontDescription(parsedBMFont);\n    this._fontDescriptionFilePath = filepath;\n  }\n\n  getFontSize() {\n    return this._fontSize;\n  }\n\n  setFontSize(size) {\n    this._fontSize = size;\n  }\n\n  /**\n     * Retrieves font style scale based on \n     * font size and font's description info size\n     * @returns {number|null} font style scale or null if invalid\n     */\n  getScale() {\n    let metricsSize = this.getFontDescription().info.size;\n\n    // TODO: possibly validated in setFontInfo instead?\n    if (!metricsSize) {\n      return null;\n    }\n\n    // calculate scale between generated\n    // font's size and the desired (font) size of the text\n    let scale = this.getFontSize() / metricsSize;\n\n    if (!scale || scale <= 0) {\n      return null;\n    }\n\n    return scale;\n  }\n\n  getLetterSpacing() {\n    return this._letterSpacing;\n  }\n\n  setLetterSpacing(spacing) {\n    this._letterSpacing = spacing;\n  }\n\n  getSpread() {\n    return this._spread;\n  }\n\n  setSpread(spread) {\n    this._spread = spread;\n  }\n\n  /**\n     *\n     * @param {string} char character whose correspondent (font) \n     * ID is to be found (different from ascii code!)\n     * @returns {number|null} font's character's ID or null if invalid\n     * @public\n     */\n  findCharID(char) {\n    let fontDescriptionChars = this.getFontDescription().chars;\n\n    // make sure the parameter is valid\n    if (!char || !fontDescriptionChars || fontDescriptionChars.length == 0) {\n      return null;\n    }\n    // retrieve character's ascii code\n    let charCode = char.charCodeAt(0);\n\n    // if code is invalid, no need to go further\n    if (!charCode) {\n      return null;\n    }\n\n    // go through every character\n    for (let i = 0; i < fontDescriptionChars.length; i++) {\n      // store glyphID (Ascii Code)\n      let glyphID = fontDescriptionChars[i].id;\n\n      // skip if invalid\n      if (!glyphID) {\n        continue;\n      }\n\n      // if that's the code we are looking for\n      if (glyphID === charCode) {\n        // return the iteration number\n        // (the position of that character inside the array of characters)\n        return i;\n      }\n    }\n    return null;\n  }\n\n  /**\n     * Retrieves Kerning value between the given characters\n     * @param {number} firstCharCode first character ascii code\n     * @param {number} secondCharCode second character ascii code\n     * @returns {number} kerning value or 0 if not found\n     * @public\n     */\n  getKerning(firstCharCode, secondCharCode) {\n    let fontDescriptionKernings = this.getFontDescription().kernings;\n\n    if (!firstCharCode || !secondCharCode || !fontDescriptionKernings || !fontDescriptionKernings.length || fontDescriptionKernings.length === 0) {\n      return 0;\n    }\n\n    // iterate through the kernings\n    for (let i = 0; i < fontDescriptionKernings.length; i++) {\n      let kern = fontDescriptionKernings[i];\n\n      // skip if table is invalid\n      if (!kern || !kern.first || !kern.second) {\n        continue;\n      }\n\n      // if there is a match\n      if (kern.first === firstCharCode && kern.second === secondCharCode)\n        // return kerning\n        return kern.amount;\n    }\n\n    // return 0 if there is no match\n    return 0;\n  }\n\n  objectify() {\n    return {\n      fontDescriptionFilePath: this.getFontDescriptionFilePath(),\n      fontDescription: this.getFontDescription(),\n      fontSize: this.getFontSize(),\n      letterSpacing: this.getLetterSpacing(),\n      spread: this.getSpread()\n    };\n  }\n\n  //#endregion\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = FontStyle;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 41 */
/* exports provided: default */
/* exports used: default */
/*!**************************!*\
  !*** ./src/core/game.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_matter_js__ = __webpack_require__(/*! matter-js */ 22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_matter_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_matter_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_constants__ = __webpack_require__(/*! common/constants */ 23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_common_logger__ = __webpack_require__(/*! common/logger */ 9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__gameManager__ = __webpack_require__(/*! ./gameManager */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_webgl_webGLContext__ = __webpack_require__(/*! webgl/webGLContext */ 60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_shaders_shaderManager__ = __webpack_require__(/*! shaders/shaderManager */ 53);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_input_keys__ = __webpack_require__(/*! input/keys */ 51);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_input_keyboard__ = __webpack_require__(/*! input/keyboard */ 49);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_utility_utils__ = __webpack_require__(/*! utility/utils */ 12);\n\n\n\n\n\n\n\n\n\n\n\n/**\r\n * GameScene Class\r\n */\nclass Game {\n  //#region Constructors\n\n  constructor(params) {\n    params = params || {};\n\n    let DEFAULT_VIRTUAL_WIDTH = 800;\n    let DEFAULT_VIRTUAL_HEIGHT = 640;\n\n    // public properties:\n\n    // private properties:\n    this._renderContext = null;\n    this._logger = new __WEBPACK_IMPORTED_MODULE_2_common_logger__[\"a\" /* default */](\"Game\");\n    this._initialized = false;\n    this._gameScene = params.scene;\n    this._totalElapsedTime = null;\n    this._virtualResolution = null;\n    this._shaderManager = null;\n    this._executionPhase = __WEBPACK_IMPORTED_MODULE_1_common_constants__[\"a\" /* CONSTANTS */].EXECUTION_PHASES.WAITING;\n    this._physicsEngine = __WEBPACK_IMPORTED_MODULE_0_matter_js___default.a.Engine.create();\n    this._physicsEngine.enableSleeping = true;\n    this._renderExtensions = {};\n    this._paused = false;\n    this._swapScene = null; // used to contain a temporary scene before swapping\n    this._swappingScenes = false;\n    this._inputHandlersBinded = false;\n\n    __WEBPACK_IMPORTED_MODULE_0_matter_js___default.a.Engine.run(this._physicsEngine);\n\n    // set the default virtual resolution\n    this.setVirtualResolution(DEFAULT_VIRTUAL_WIDTH, DEFAULT_VIRTUAL_HEIGHT);\n\n    // the target container is defined?\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"b\" /* isString */])(params.target)) {\n      this.setTarget(params.target);\n    }\n  }\n\n  //#endregion\n\n  //#region Public Methods\n\n  /**\r\n     *\r\n     * @param name\r\n     * @param extension\r\n     */\n  addRenderExtension(name, extension) {\n    this._renderExtensions[name] = extension;\n  }\n\n  /**\r\n     *\r\n     * @param name\r\n     */\n  removeRenderExtension(name) {\n    delete this._renderExtensions[name];\n  }\n\n  /**\r\n     *\r\n     */\n  clearRenderExtensions() {\n    this._renderExtensions = [];\n  }\n\n  /**\r\n     *\r\n     * @returns {engine|*}\r\n     */\n  getPhysicsEngine() {\n    return this._physicsEngine;\n  }\n\n  pauseGame() {\n    this._paused = true;\n  }\n\n  resumeGame() {\n    this._paused = false;\n  }\n\n  getShaderManager() {\n    return this._shaderManager;\n  }\n\n  getActiveCamera() {\n    return this._gameScene ? this._gameScene.getCamera() : null;\n  }\n\n  getExecutionPhase() {\n    return this._executionPhase;\n  }\n\n  init(params) {\n    params = params || {};\n\n    // context initialization\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"a\" /* isObjectAssigned */])(this._canvas)) {\n      this._logger.warn(\"Cannot initialize game, \" + \"the render display target was not provided or is invalid.\");\n      return;\n    }\n\n    // request to begin the animation frame handling\n    this._onAnimationFrame(0);\n\n    // set this as the active game:\n    __WEBPACK_IMPORTED_MODULE_3__gameManager__[\"a\" /* default */].activeGame = this;\n\n    if (!params.ignoreInputHandler) {\n      this._bindInputHandlers();\n    }\n\n    this._initalized = true;\n  }\n\n  /**\r\n     * Set this as the active game\r\n     */\n  setActive() {\n    __WEBPACK_IMPORTED_MODULE_3__gameManager__[\"a\" /* default */].activeGame = this;\n  }\n\n  setVirtualResolution(width, height) {\n    this._virtualResolution = {\n      width: width,\n      height: height\n    };\n\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"a\" /* isObjectAssigned */])(this._renderContext)) {\n      this._renderContext.setVirtualResolution(width, height);\n\n      // update camera view size:\n      this.getActiveCamera().setViewSize(width, height);\n    }\n  }\n\n  refreshVirtualResolution() {\n    this._renderContext.setVirtualResolution(this._virtualResolution.width, this._virtualResolution.height);\n\n    let camera = this.getActiveCamera();\n    if (camera) {\n      camera.setViewSize(this._virtualResolution.width, this._virtualResolution.height);\n    }\n  }\n\n  getVirtualResolution() {\n    return this._virtualResolution;\n  }\n\n  getRenderContext() {\n    return this._renderContext;\n  }\n\n  setTarget(target) {\n    this._canvas = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"b\" /* isString */])(target) ? document.getElementById(target) : null;\n\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"a\" /* isObjectAssigned */])(this._canvas)) {\n      // OPTIONAL: for now there is only WebGL Context, add more if needed:\n      // assign the render context..\n      this._renderContext = new __WEBPACK_IMPORTED_MODULE_4_webgl_webGLContext__[\"a\" /* default */]({\n        renderContainer: this._canvas\n      });\n\n      // setting the global active render as the one selected for this game:\n      __WEBPACK_IMPORTED_MODULE_3__gameManager__[\"a\" /* default */].renderContext = this._renderContext;\n      this._shaderManager = new __WEBPACK_IMPORTED_MODULE_5_shaders_shaderManager__[\"a\" /* default */](this);\n\n      this.refreshVirtualResolution();\n    }\n  }\n\n  changeScene(scene) {\n    if (!__WEBPACK_IMPORTED_MODULE_9_utility_utils__[\"a\" /* default */].isGameScene(scene)) {\n      return;\n    }\n\n    // is it safe to swap scenes now?\n    if (this._executionPhase == __WEBPACK_IMPORTED_MODULE_1_common_constants__[\"a\" /* CONSTANTS */].EXECUTION_PHASES.WAITING) {\n      // flag the swapping state\n      this._swappingScenes = true;\n\n      if (this._gameScene) {\n        // unload the active scene:\n        this._gameScene.unload();\n      }\n\n      this._gameScene = scene;\n      this._gameScene.setGame(this);\n\n      __WEBPACK_IMPORTED_MODULE_3__gameManager__[\"a\" /* default */].activeScene = scene;\n      this.refreshVirtualResolution();\n\n      // the user defined the game scene initialize function?\n      if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"e\" /* isFunction */])(this._gameScene.initialize)) {\n        // call user defined update function:\n        this._gameScene.initialize();\n      }\n\n      this._swappingScenes = false;\n    } else {\n      // nope, store this scene to change in the next animation frame start\n      this._swapScene = scene;\n    }\n  }\n\n  getTotalElapsedTime() {\n    return this._totalElapsedTime;\n  }\n\n  unload() {\n    if (this._inputHandlersBinded) {\n      this._unbindInputHandlers();\n    }\n  }\n\n  //#endregion\n\n  //#region Private Methods\n\n  /**\r\n     *\r\n     * @private\r\n     */\n  _bindInputHandlers() {\n    window.addEventListener(\"keyup\", this._keyUpListener.bind(this), false);\n    window.addEventListener(\"keydown\", this._keyDownListener.bind(this), false);\n    this._inputHandlersBinded = true;\n  }\n\n  /**\r\n     *\r\n     * @private\r\n     */\n  _unbindInputHandlers() {\n    window.removeEventListener(\"keyup\", this._keyUpListener.bind(this), false);\n    window.removeEventListener(\"keydown\", this._keyDownListener.bind(this), false);\n    this._inputHandlersBinded = false;\n  }\n\n  /**\r\n     *\r\n     * @param e\r\n     * @private\r\n     */\n  _keyUpListener(e) {\n    let keys = [e.keyCode];\n\n    if (e.ctrlKey) {\n      keys.push(__WEBPACK_IMPORTED_MODULE_6_input_keys__[\"a\" /* default */].Ctrl);\n    }\n\n    if (e.shiftKey) {\n      keys.push(__WEBPACK_IMPORTED_MODULE_6_input_keys__[\"a\" /* default */].Shift);\n    }\n\n    // update the keyboard data:\n    __WEBPACK_IMPORTED_MODULE_7_input_keyboard__[\"a\" /* Keyboard */].removeKeys(keys);\n  }\n\n  /**\r\n     *\r\n     * @param e\r\n     * @private\r\n     */\n  _keyDownListener(e) {\n    let keys = [e.keyCode];\n\n    if (e.ctrlKey) {\n      keys.push(__WEBPACK_IMPORTED_MODULE_6_input_keys__[\"a\" /* default */].Ctrl);\n    }\n\n    if (e.shiftKey) {\n      keys.push(__WEBPACK_IMPORTED_MODULE_6_input_keys__[\"a\" /* default */].Shift);\n    }\n\n    // update the keyboard data:\n    __WEBPACK_IMPORTED_MODULE_7_input_keyboard__[\"a\" /* Keyboard */].addKeys(keys);\n  }\n\n  /**\r\n     *\r\n     * @param timestamp\r\n     * @private\r\n     */\n  _onAnimationFrame(timestamp) {\n    // is this the first run?\n    if (this._totalElapsedTime === null) {\n      this._totalElapsedTime = timestamp;\n    }\n\n    // any scene waiting to be swapped?\n    if (this._swapScene && !this._swappingScenes) {\n      this.changeScene(this._swapScene);\n      this._swapScene = null;\n    }\n\n    // calculate the current delta time value:\n    let delta = (timestamp - this._totalElapsedTime) / 1000;\n    let self = this;\n    this._totalElapsedTime = timestamp;\n\n    if (!this._paused && __WEBPACK_IMPORTED_MODULE_9_utility_utils__[\"a\" /* default */].isGameScene(this._gameScene) && !this._swappingScenes) {\n      // handle the active game scene interactions here:\n\n      // TODO: before release, add the try here..\n      //try {\n      // the user defined the game scene update function?\n      if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"e\" /* isFunction */])(this._gameScene.update)) {\n        // call user defined update function:\n        this._executionPhase = __WEBPACK_IMPORTED_MODULE_1_common_constants__[\"a\" /* CONSTANTS */].EXECUTION_PHASES.UPDATE;\n        this._gameScene.update(delta);\n      }\n\n      this._gameScene.sceneUpdate(delta);\n\n      if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"e\" /* isFunction */])(this._gameScene.lateUpdate)) {\n        // call user defined update function:\n        this._executionPhase = __WEBPACK_IMPORTED_MODULE_1_common_constants__[\"a\" /* CONSTANTS */].EXECUTION_PHASES.LATE_UPDATE;\n        this._gameScene.lateUpdate(delta);\n      }\n\n      this._gameScene.sceneLateUpdate(delta);\n\n      // prepare the webgl context for rendering:\n      this._gameScene.prepareRender();\n\n      // render extensions?\n      let renderExtensions = Object.keys(this._renderExtensions);\n      renderExtensions.forEach(function (name) {\n        self._renderExtensions[name].render(delta);\n      });\n\n      // the user defined the game scene early-render function?\n      if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"e\" /* isFunction */])(this._gameScene.render)) {\n        this._executionPhase = __WEBPACK_IMPORTED_MODULE_1_common_constants__[\"a\" /* CONSTANTS */].EXECUTION_PHASES.RENDER;\n        this._gameScene.render(delta);\n      }\n\n      // call internal scene render function:\n      this._executionPhase = __WEBPACK_IMPORTED_MODULE_1_common_constants__[\"a\" /* CONSTANTS */].EXECUTION_PHASES.SCENE_RENDER;\n      this._gameScene.sceneRender(delta);\n\n      this._gameScene.flushRender();\n\n      // the user defined the game scene pre-render function?\n      if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8_common_utils__[\"e\" /* isFunction */])(this._gameScene.lateRender)) {\n        this._executionPhase = __WEBPACK_IMPORTED_MODULE_1_common_constants__[\"a\" /* CONSTANTS */].EXECUTION_PHASES.LATE_RENDER;\n        this._gameScene.lateRender(delta);\n        this._gameScene.flushRender();\n      }\n\n      //} catch (ex) {\n      //    this._logger.error(ex);\n      //}\n\n      this._executionPhase = __WEBPACK_IMPORTED_MODULE_1_common_constants__[\"a\" /* CONSTANTS */].EXECUTION_PHASES.WAITING;\n    }\n\n    // request a new animation frame:\n    if (!this._paused) {\n      requestAnimationFrame(this._onAnimationFrame.bind(this));\n    } else {\n      // when the game is paused it's a good idea to wait a\n      // few ms before requesting a new animation frame to\n      // save some machine resources...\n      setTimeout(function () {\n        requestAnimationFrame(self._onAnimationFrame.bind(self));\n      }, 100);\n    }\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Game;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 42 */
/* exports provided: default */
/* exports used: default */
/*!*******************************!*\
  !*** ./src/core/gameScene.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_matter_js__ = __webpack_require__(/*! matter-js */ 22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_matter_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_matter_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_attributeDictionary__ = __webpack_require__(/*! common/attributeDictionary */ 8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_core_color__ = __webpack_require__(/*! core/color */ 11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_core_camera2D__ = __webpack_require__(/*! core/camera2D */ 39);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_core_gameManager__ = __webpack_require__(/*! core/gameManager */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_utility_objectify__ = __webpack_require__(/*! utility/objectify */ 18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__spriteBatch__ = __webpack_require__(/*! ./spriteBatch */ 46);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_1_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"gameScene\", \"_game\", { visible: false });\n__WEBPACK_IMPORTED_MODULE_1_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"gameScene\", \"_gameObjects\", { visible: false });\n__WEBPACK_IMPORTED_MODULE_1_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"gameScene\", \"_camera\", { visible: false });\n__WEBPACK_IMPORTED_MODULE_1_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"gameScene\", \"_spriteBatch\", { visible: false });\n\n/**\n * GameScene class\n */\nclass GameScene {\n  //#region Constructors\n\n  /**\n     *\n     * @param params\n     */\n  constructor(params) {\n    params = params || {};\n\n    if (!params.game) {\n      throw new Error(\"Cannot create a game scene without the game parameter\");\n    }\n\n    // public properties:\n\n    this.name = params.name || \"GameScene\";\n\n    // private properties:\n    this._uid = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7_common_utils__[\"d\" /* generateUID */])();\n    this._game = params.game || null;\n    this._backgroundColor = params.backgroundColor || __WEBPACK_IMPORTED_MODULE_2_core_color__[\"a\" /* default */].CornflowerBlue;\n    this._gameObjects = params.gameObjects || [];\n    // the default scene camera\n    this._camera = params.camera || new __WEBPACK_IMPORTED_MODULE_3_core_camera2D__[\"a\" /* default */](0, 0, this._game.getVirtualResolution().width, this._game.getVirtualResolution().height);\n    this._spriteBatch = new __WEBPACK_IMPORTED_MODULE_6__spriteBatch__[\"a\" /* default */](params.game);\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static restore(data) {\n    return new GameScene({\n      game: __WEBPACK_IMPORTED_MODULE_4_core_gameManager__[\"a\" /* default */].activeGame,\n      backgroundColor: __WEBPACK_IMPORTED_MODULE_2_core_color__[\"a\" /* default */].restore(data.backgroundColor),\n      camera: __WEBPACK_IMPORTED_MODULE_3_core_camera2D__[\"a\" /* default */].restore(data.camera),\n      gameObjects: __WEBPACK_IMPORTED_MODULE_5_utility_objectify__[\"a\" /* default */].restoreArray(data.gameObjects)\n    });\n  }\n\n  //#endregion\n\n  getUID() {\n    return this._uid;\n  }\n\n  getPhysicsWorld() {\n    return this._game.getPhysicsEngine().world;\n  }\n\n  getCamera() {\n    return this._camera;\n  }\n\n  setGame(game) {\n    this._game = game;\n  }\n\n  getGame() {\n    return this._game;\n  }\n\n  setBackgroundColor(color) {\n    this._backgroundColor = color;\n  }\n\n  getBackgroundColor() {\n    return this._backgroundColor;\n  }\n\n  addGameObject(gameObject, index) {\n    // let's be safe, make sure to remove parent if any\n    gameObject.removeParent();\n\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7_common_utils__[\"a\" /* isObjectAssigned */])(index)) {\n      this._gameObjects.insert(index, gameObject);\n    } else {\n      this._gameObjects.push(gameObject);\n    }\n  }\n\n  getGameObjects() {\n    return this._gameObjects;\n  }\n\n  removeGameObject(gameObject) {\n    for (let i = this._gameObjects.length - 1; i >= 0; i--) {\n      if (this._gameObjects[i].getUID() == gameObject.getUID()) {\n        return this._gameObjects.splice(i, 1);\n      }\n    }\n  }\n\n  /**\n     * Returns an array with all the game objects of this scene. \n     * All child game objects are included.\n     */\n  getAllGameObjects() {\n    let result = [];\n\n    // TODO: make it a private function\n    function recursive(gameObjects) {\n      gameObjects.forEach(function (elem) {\n        result.push(elem);\n        recursive(elem.getChildren());\n      });\n    }\n\n    recursive(this._gameObjects);\n\n    return result;\n  }\n\n  prepareRender() {\n    let gl = this._game.getRenderContext().getContext();\n\n    // set clear color and clear the screen:\n    gl.clearColor(this._backgroundColor.r, this._backgroundColor.g, this._backgroundColor.b, this._backgroundColor.a);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    this._spriteBatch.begin();\n  }\n\n  // eslint-disable-next-line\n  sceneLateUpdate(delta) {\n    __WEBPACK_IMPORTED_MODULE_0_matter_js___default.a.Engine.update(this._game.getPhysicsEngine(), 1000 / 60);\n  }\n\n  sceneUpdate(delta) {\n    // let's render all game objects on scene:\n    for (let i = 0; i < this._gameObjects.length; i++) {\n      this._gameObjects[i].update(delta);\n    }\n  }\n\n  sceneRender(delta) {\n    // let's render all game objects on scene:\n    for (let i = 0; i < this._gameObjects.length; i++) {\n      this._gameObjects[i].render(delta, this._spriteBatch);\n    }\n  }\n\n  flushRender() {\n    // all draw data was stored. let's actually render stuff into the screen!\n    this._spriteBatch.flush();\n  }\n\n  objectify() {\n    return {\n      name: this.name,\n      camera: this._camera.objectify(),\n      backgroundColor: this._backgroundColor.objectify(),\n      gameObjects: __WEBPACK_IMPORTED_MODULE_5_utility_objectify__[\"a\" /* default */].array(this._gameObjects)\n    };\n  }\n\n  unload() {}\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = GameScene;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvcmUvZ2FtZVNjZW5lLmpzPzk2YjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE1hdHRlciBmcm9tIFwibWF0dGVyLWpzXCI7XG5pbXBvcnQgeyBBdHRyaWJ1dGVEaWN0aW9uYXJ5IH0gZnJvbSBcImNvbW1vbi9hdHRyaWJ1dGVEaWN0aW9uYXJ5XCI7XG5pbXBvcnQgQ29sb3IgZnJvbSBcImNvcmUvY29sb3JcIjtcbmltcG9ydCBDYW1lcmEyRCBmcm9tIFwiY29yZS9jYW1lcmEyRFwiO1xuaW1wb3J0IEdhbWVNYW5hZ2VyIGZyb20gXCJjb3JlL2dhbWVNYW5hZ2VyXCI7XG5pbXBvcnQgT2JqZWN0aWZ5IGZyb20gXCJ1dGlsaXR5L29iamVjdGlmeVwiO1xuaW1wb3J0IFNwcml0ZUJhdGNoIGZyb20gXCIuL3Nwcml0ZUJhdGNoXCI7XG5pbXBvcnQgeyBnZW5lcmF0ZVVJRCwgaXNPYmplY3RBc3NpZ25lZCB9IGZyb20gXCJjb21tb24vdXRpbHNcIjtcblxuQXR0cmlidXRlRGljdGlvbmFyeS5hZGRSdWxlKFwiZ2FtZVNjZW5lXCIsIFwiX2dhbWVcIiwgeyB2aXNpYmxlOiBmYWxzZSB9KTtcbkF0dHJpYnV0ZURpY3Rpb25hcnkuYWRkUnVsZShcImdhbWVTY2VuZVwiLCBcIl9nYW1lT2JqZWN0c1wiLCB7IHZpc2libGU6IGZhbHNlIH0pO1xuQXR0cmlidXRlRGljdGlvbmFyeS5hZGRSdWxlKFwiZ2FtZVNjZW5lXCIsIFwiX2NhbWVyYVwiLCB7IHZpc2libGU6IGZhbHNlIH0pO1xuQXR0cmlidXRlRGljdGlvbmFyeS5hZGRSdWxlKFwiZ2FtZVNjZW5lXCIsIFwiX3Nwcml0ZUJhdGNoXCIsIHsgdmlzaWJsZTogZmFsc2UgfSk7XG5cbi8qKlxuICogR2FtZVNjZW5lIGNsYXNzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbWVTY2VuZSB7XG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcblxuICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBwYXJhbXNcbiAgICAgKi9cbiAgY29uc3RydWN0b3IocGFyYW1zKSB7XG4gICAgcGFyYW1zID0gcGFyYW1zIHx8IHt9O1xuXG4gICAgaWYgKCFwYXJhbXMuZ2FtZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNyZWF0ZSBhIGdhbWUgc2NlbmUgd2l0aG91dCB0aGUgZ2FtZSBwYXJhbWV0ZXJcIik7XG4gICAgfVxuXG4gICAgLy8gcHVibGljIHByb3BlcnRpZXM6XG5cbiAgICB0aGlzLm5hbWUgPSBwYXJhbXMubmFtZSB8fCBcIkdhbWVTY2VuZVwiO1xuXG4gICAgLy8gcHJpdmF0ZSBwcm9wZXJ0aWVzOlxuICAgIHRoaXMuX3VpZCA9IGdlbmVyYXRlVUlEKCk7XG4gICAgdGhpcy5fZ2FtZSA9IHBhcmFtcy5nYW1lIHx8IG51bGw7XG4gICAgdGhpcy5fYmFja2dyb3VuZENvbG9yID0gcGFyYW1zLmJhY2tncm91bmRDb2xvciB8fCBDb2xvci5Db3JuZmxvd2VyQmx1ZTtcbiAgICB0aGlzLl9nYW1lT2JqZWN0cyA9IHBhcmFtcy5nYW1lT2JqZWN0cyB8fCBbXTtcbiAgICAvLyB0aGUgZGVmYXVsdCBzY2VuZSBjYW1lcmFcbiAgICB0aGlzLl9jYW1lcmEgPVxuICAgICAgcGFyYW1zLmNhbWVyYSB8fFxuICAgICAgbmV3IENhbWVyYTJEKDAsIDAsIHRoaXMuX2dhbWUuZ2V0VmlydHVhbFJlc29sdXRpb24oKS53aWR0aCwgdGhpcy5fZ2FtZS5nZXRWaXJ0dWFsUmVzb2x1dGlvbigpLmhlaWdodCk7XG4gICAgdGhpcy5fc3ByaXRlQmF0Y2ggPSBuZXcgU3ByaXRlQmF0Y2gocGFyYW1zLmdhbWUpO1xuICB9XG5cbiAgLy8jZW5kcmVnaW9uXG5cbiAgLy8jcmVnaW9uIE1ldGhvZHNcblxuICAvLyNyZWdpb24gU3RhdGljIE1ldGhvZHNcblxuICBzdGF0aWMgcmVzdG9yZShkYXRhKSB7XG4gICAgcmV0dXJuIG5ldyBHYW1lU2NlbmUoe1xuICAgICAgZ2FtZTogR2FtZU1hbmFnZXIuYWN0aXZlR2FtZSxcbiAgICAgIGJhY2tncm91bmRDb2xvcjogQ29sb3IucmVzdG9yZShkYXRhLmJhY2tncm91bmRDb2xvciksXG4gICAgICBjYW1lcmE6IENhbWVyYTJELnJlc3RvcmUoZGF0YS5jYW1lcmEpLFxuICAgICAgZ2FtZU9iamVjdHM6IE9iamVjdGlmeS5yZXN0b3JlQXJyYXkoZGF0YS5nYW1lT2JqZWN0cylcbiAgICB9KTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxuXG4gIGdldFVJRCgpIHtcbiAgICByZXR1cm4gdGhpcy5fdWlkO1xuICB9XG5cbiAgZ2V0UGh5c2ljc1dvcmxkKCkge1xuICAgIHJldHVybiB0aGlzLl9nYW1lLmdldFBoeXNpY3NFbmdpbmUoKS53b3JsZDtcbiAgfVxuXG4gIGdldENhbWVyYSgpIHtcbiAgICByZXR1cm4gdGhpcy5fY2FtZXJhO1xuICB9XG5cbiAgc2V0R2FtZShnYW1lKSB7XG4gICAgdGhpcy5fZ2FtZSA9IGdhbWU7XG4gIH1cblxuICBnZXRHYW1lKCkge1xuICAgIHJldHVybiB0aGlzLl9nYW1lO1xuICB9XG5cbiAgc2V0QmFja2dyb3VuZENvbG9yKGNvbG9yKSB7XG4gICAgdGhpcy5fYmFja2dyb3VuZENvbG9yID0gY29sb3I7XG4gIH1cblxuICBnZXRCYWNrZ3JvdW5kQ29sb3IoKSB7XG4gICAgcmV0dXJuIHRoaXMuX2JhY2tncm91bmRDb2xvcjtcbiAgfVxuXG4gIGFkZEdhbWVPYmplY3QoZ2FtZU9iamVjdCwgaW5kZXgpIHtcbiAgICAvLyBsZXQncyBiZSBzYWZlLCBtYWtlIHN1cmUgdG8gcmVtb3ZlIHBhcmVudCBpZiBhbnlcbiAgICBnYW1lT2JqZWN0LnJlbW92ZVBhcmVudCgpO1xuXG4gICAgaWYgKGlzT2JqZWN0QXNzaWduZWQoaW5kZXgpKSB7XG4gICAgICB0aGlzLl9nYW1lT2JqZWN0cy5pbnNlcnQoaW5kZXgsIGdhbWVPYmplY3QpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLl9nYW1lT2JqZWN0cy5wdXNoKGdhbWVPYmplY3QpO1xuICAgIH1cbiAgfVxuXG4gIGdldEdhbWVPYmplY3RzKCkge1xuICAgIHJldHVybiB0aGlzLl9nYW1lT2JqZWN0cztcbiAgfVxuXG4gIHJlbW92ZUdhbWVPYmplY3QoZ2FtZU9iamVjdCkge1xuICAgIGZvciAobGV0IGkgPSB0aGlzLl9nYW1lT2JqZWN0cy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xuICAgICAgaWYgKHRoaXMuX2dhbWVPYmplY3RzW2ldLmdldFVJRCgpID09IGdhbWVPYmplY3QuZ2V0VUlEKCkpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2dhbWVPYmplY3RzLnNwbGljZShpLCAxKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICAvKipcbiAgICAgKiBSZXR1cm5zIGFuIGFycmF5IHdpdGggYWxsIHRoZSBnYW1lIG9iamVjdHMgb2YgdGhpcyBzY2VuZS4gXG4gICAgICogQWxsIGNoaWxkIGdhbWUgb2JqZWN0cyBhcmUgaW5jbHVkZWQuXG4gICAgICovXG4gIGdldEFsbEdhbWVPYmplY3RzKCkge1xuICAgIGxldCByZXN1bHQgPSBbXTtcblxuICAgIC8vIFRPRE86IG1ha2UgaXQgYSBwcml2YXRlIGZ1bmN0aW9uXG4gICAgZnVuY3Rpb24gcmVjdXJzaXZlKGdhbWVPYmplY3RzKSB7XG4gICAgICBnYW1lT2JqZWN0cy5mb3JFYWNoKGZ1bmN0aW9uKGVsZW0pIHtcbiAgICAgICAgcmVzdWx0LnB1c2goZWxlbSk7XG4gICAgICAgIHJlY3Vyc2l2ZShlbGVtLmdldENoaWxkcmVuKCkpO1xuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmVjdXJzaXZlKHRoaXMuX2dhbWVPYmplY3RzKTtcblxuICAgIHJldHVybiByZXN1bHQ7XG4gIH1cblxuICBwcmVwYXJlUmVuZGVyKCkge1xuICAgIGxldCBnbCA9IHRoaXMuX2dhbWUuZ2V0UmVuZGVyQ29udGV4dCgpLmdldENvbnRleHQoKTtcblxuICAgIC8vIHNldCBjbGVhciBjb2xvciBhbmQgY2xlYXIgdGhlIHNjcmVlbjpcbiAgICBnbC5jbGVhckNvbG9yKHRoaXMuX2JhY2tncm91bmRDb2xvci5yLCB0aGlzLl9iYWNrZ3JvdW5kQ29sb3IuZywgdGhpcy5fYmFja2dyb3VuZENvbG9yLmIsIHRoaXMuX2JhY2tncm91bmRDb2xvci5hKTtcbiAgICBnbC5jbGVhcihnbC5DT0xPUl9CVUZGRVJfQklUKTtcblxuICAgIHRoaXMuX3Nwcml0ZUJhdGNoLmJlZ2luKCk7XG4gIH1cblxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcbiAgc2NlbmVMYXRlVXBkYXRlKGRlbHRhKSB7XG4gICAgTWF0dGVyLkVuZ2luZS51cGRhdGUodGhpcy5fZ2FtZS5nZXRQaHlzaWNzRW5naW5lKCksIDEwMDAgLyA2MCk7XG4gIH1cblxuICBzY2VuZVVwZGF0ZShkZWx0YSkge1xuICAgIC8vIGxldCdzIHJlbmRlciBhbGwgZ2FtZSBvYmplY3RzIG9uIHNjZW5lOlxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fZ2FtZU9iamVjdHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHRoaXMuX2dhbWVPYmplY3RzW2ldLnVwZGF0ZShkZWx0YSk7XG4gICAgfVxuICB9XG5cbiAgc2NlbmVSZW5kZXIoZGVsdGEpIHtcbiAgICAvLyBsZXQncyByZW5kZXIgYWxsIGdhbWUgb2JqZWN0cyBvbiBzY2VuZTpcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX2dhbWVPYmplY3RzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB0aGlzLl9nYW1lT2JqZWN0c1tpXS5yZW5kZXIoZGVsdGEsIHRoaXMuX3Nwcml0ZUJhdGNoKTtcbiAgICB9XG4gIH1cblxuICBmbHVzaFJlbmRlcigpIHtcbiAgICAvLyBhbGwgZHJhdyBkYXRhIHdhcyBzdG9yZWQuIGxldCdzIGFjdHVhbGx5IHJlbmRlciBzdHVmZiBpbnRvIHRoZSBzY3JlZW4hXG4gICAgdGhpcy5fc3ByaXRlQmF0Y2guZmx1c2goKTtcbiAgfVxuXG4gIG9iamVjdGlmeSgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbmFtZTogdGhpcy5uYW1lLFxuICAgICAgY2FtZXJhOiB0aGlzLl9jYW1lcmEub2JqZWN0aWZ5KCksXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IHRoaXMuX2JhY2tncm91bmRDb2xvci5vYmplY3RpZnkoKSxcbiAgICAgIGdhbWVPYmplY3RzOiBPYmplY3RpZnkuYXJyYXkodGhpcy5fZ2FtZU9iamVjdHMpXG4gICAgfTtcbiAgfVxuXG4gIHVubG9hZCgpIHt9XG5cbiAgLy8jZW5kcmVnaW9uXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvcmUvZ2FtZVNjZW5lLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQW5LQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 43 */
/* exports provided: default */
/* exports used: default */
/*!************************************!*\
  !*** ./src/core/primitiveBatch.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_shaders_primitiveShader_shader__ = __webpack_require__(/*! shaders/primitiveShader.shader */ 29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_math_matrix4__ = __webpack_require__(/*! math/matrix4 */ 16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_utility_utils__ = __webpack_require__(/*! utility/utils */ 12);\n\n\n\n\n/**\n * PrimitiveBatch class for on demand direct drawing\n */\nclass PrimitiveBatch {\n  //#region Constructors\n\n  /**\n     *\n     * @param game\n     */\n  constructor(game) {\n    if (!__WEBPACK_IMPORTED_MODULE_2_utility_utils__[\"a\" /* default */].isGame(game)) {\n      throw new Error(\"Cannot create primitive render the Game object is missing from the parameters\");\n    }\n\n    // public properties:\n\n    // private properties:\n    this._game = game;\n    this._gl = game.getRenderContext().getContext();\n    this._primitiveShader = new __WEBPACK_IMPORTED_MODULE_0_shaders_primitiveShader_shader__[\"a\" /* default */]();\n    this._vbo = this._gl.createBuffer();\n\n    this._rectangleVertexData = [];\n    this._rectangleColorData = [];\n    this._rectangleCount = 0;\n\n    this._lineArrayCount = 0;\n    this._lineVertexData = [];\n\n    this._transformMatrix = new __WEBPACK_IMPORTED_MODULE_1_math_matrix4__[\"a\" /* default */]();\n    this._rectangleData = new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]);\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  unload() {\n    this._gl.deleteBuffer(this._vbo);\n\n    this._primitiveShader.unload();\n  }\n\n  begin() {\n    this.clear();\n  }\n\n  clear() {\n    // rectangle data\n    this._rectangleVertexData = [];\n    this._rectangleColorData = [];\n    this._rectangleCount = 0;\n\n    // lines data\n    this._lineVertexData = [];\n    this._lineArrayCount = 0;\n  }\n\n  flushRectangles() {\n    if (this._rectangleCount === 0) {\n      // nothing to do..\n      return;\n    }\n\n    let gl = this._gl;\n    let cameraMatrix = this._game.getActiveCamera().getMatrix();\n\n    this._game.getShaderManager().useShader(this._primitiveShader);\n\n    // TODO: review this.. not batched at all!\n    // position buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, this._rectangleData, gl.STATIC_DRAW);\n\n    gl.enableVertexAttribArray(this._primitiveShader.attributes.aVertexPosition);\n    gl.vertexAttribPointer(this._primitiveShader.attributes.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\n\n    // set uniforms\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uMatrix._location, false, cameraMatrix);\n\n    for (let i = 0; i < this._rectangleCount; i++) {\n      this._transformMatrix.identity();\n      this._transformMatrix.translate([this._rectangleVertexData[i].x, this._rectangleVertexData[i].y, 0]);\n      this._transformMatrix.scale([this._rectangleVertexData[i].width, this._rectangleVertexData[i].height, 0]);\n\n      gl.uniformMatrix4fv(this._primitiveShader.uniforms.uTransform._location, false, this._transformMatrix.asArray());\n      gl.uniform4f(this._primitiveShader.uniforms.uColor._location, this._rectangleColorData[i].r, this._rectangleColorData[i].g, this._rectangleColorData[i].b, this._rectangleColorData[i].a);\n\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n  }\n\n  flushLines() {\n    if (this._lineVertexData.length === 0) {\n      // nothing to do..\n      return;\n    }\n\n    let gl = this._gl;\n\n    // TODO: not all implementations support this,\n    // to check again in a near future..\n    // gl.lineWidth(thickness);\n\n    this._game.getShaderManager().useShader(this._primitiveShader);\n\n    // vbo buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vbo);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(this._lineVertexData), gl.STATIC_DRAW);\n\n    gl.vertexAttribPointer(this._primitiveShader.attributes.aVertexPosition, 2, this._gl.FLOAT, false, 24, 0);\n    gl.enableVertexAttribArray(this._primitiveShader.attributes.aVertexPosition);\n\n    gl.vertexAttribPointer(this._primitiveShader.attributes.aVertexColorPosition, 4, this._gl.FLOAT, false, 24, 8);\n    gl.enableVertexAttribArray(this._primitiveShader.attributes.aVertexColorPosition);\n\n    this._transformMatrix.identity();\n\n    // set uniforms\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uMatrix._location, false, this._game.getActiveCamera().getMatrix());\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uTransform._location, false, this._transformMatrix.asArray());\n\n    // gl.uniform4f(this._primitiveShader.uniforms.uColor._location,\n    // color.r, color.g, color.b, color.a);\n\n    gl.drawArrays(gl.LINES, 0, this._lineArrayCount);\n  }\n\n  storeRectangle(rectangle, color) {\n    this._rectangleColorData.push(color);\n    this._rectangleVertexData.push(rectangle);\n    this._rectangleCount++;\n  }\n\n  storeLine(vectorA, vectorB, color) {\n    // Note: DO NOT use any kind of javascript concatenation mechanism here!\n    // it slows down things considerably\n    this._lineVertexData.push(vectorA.x);\n    this._lineVertexData.push(vectorA.y);\n    this._lineVertexData.push(color.r);\n    this._lineVertexData.push(color.g);\n    this._lineVertexData.push(color.b);\n    this._lineVertexData.push(color.a);\n\n    this._lineVertexData.push(vectorB.x);\n    this._lineVertexData.push(vectorB.y);\n    this._lineVertexData.push(color.r);\n    this._lineVertexData.push(color.g);\n    this._lineVertexData.push(color.b);\n    this._lineVertexData.push(color.a);\n\n    this._lineArrayCount += 2;\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = PrimitiveBatch;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 44 */
/* exports provided: default */
/* exports used: default */
/*!*************************************!*\
  !*** ./src/core/primitiveRender.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_shaders_primitiveShader_shader__ = __webpack_require__(/*! shaders/primitiveShader.shader */ 29);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_math_mathHelper__ = __webpack_require__(/*! math/mathHelper */ 15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_math_matrix4__ = __webpack_require__(/*! math/matrix4 */ 16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_utility_utils__ = __webpack_require__(/*! utility/utils */ 12);\n\n\n\n\n\n/**\n * PrimitiveRender class for on demand direct drawing\n */\nclass PrimitiveRender {\n  //#region Constructors\n\n  /**\n     *\n     * @param game\n     */\n  constructor(game) {\n    if (!__WEBPACK_IMPORTED_MODULE_3_utility_utils__[\"a\" /* default */].isGame(game)) {\n      throw new Error(\"Cannot create primitive render, as the Game object is missing from the parameters\");\n    }\n\n    // private properties:\n    this._game = game;\n    this._gl = game.getRenderContext().getContext();\n    this._primitiveShader = new __WEBPACK_IMPORTED_MODULE_0_shaders_primitiveShader_shader__[\"a\" /* default */]();\n    this._vertexBuffer = this._gl.createBuffer();\n    this._transformMatrix = new __WEBPACK_IMPORTED_MODULE_2_math_matrix4__[\"a\" /* default */]();\n    this._rectangleData = new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]);\n    this._pointData = new Float32Array([0.0, 0.0]);\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  unload() {\n    this._gl.deleteBuffer(this._vertexBuffer);\n    this._primitiveShader.unload();\n  }\n\n  drawPoint(vector, size, color) {\n    // TODO: refactor this method\n    let gl = this._gl;\n\n    this._game.getShaderManager().useShader(this._primitiveShader);\n\n    // position buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._pointData, gl.STATIC_DRAW);\n\n    gl.enableVertexAttribArray(this._primitiveShader.attributes.aVertexPosition);\n    gl.vertexAttribPointer(this._primitiveShader.attributes.aVertexPosition, 2, this._gl.FLOAT, false, 0, 0);\n\n    // calculate transformation matrix:\n    this._transformMatrix.identity();\n    this._transformMatrix.translate([vector.x, vector.y, 0]);\n\n    // set uniforms\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uMatrix._location, false, this._game.getActiveCamera().getMatrix());\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uTransform._location, false, this._transformMatrix.asArray());\n    //gl.uniform4f(this._primitiveShader.uniforms.uColor._location, color.r, color.g, color.b, color.a);\n    gl.uniform1f(this._primitiveShader.uniforms.uPointSize._location, size);\n\n    gl.drawArrays(gl.POINTS, 0, 1);\n  }\n\n  drawTriangle(vectorA, vectorB, vectorC, color) {\n    let gl = this._gl;\n    let transformMatrix = this._transformMatrix;\n\n    this._game.getShaderManager().useShader(this._primitiveShader);\n\n    let triangleData = new Float32Array([vectorA.x, vectorA.y, vectorB.x, vectorB.y, vectorC.x, vectorC.y]);\n\n    // position buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, triangleData, gl.STATIC_DRAW);\n\n    gl.enableVertexAttribArray(this._primitiveShader.attributes.aVertexPosition);\n    gl.vertexAttribPointer(this._primitiveShader.attributes.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\n\n    // calculate transformation matrix (if not provided):\n    this._transformMatrix.identity();\n\n    // set uniforms\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uMatrix._location, false, this._game.getActiveCamera().getMatrix());\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uTransform._location, false, transformMatrix.asArray());\n    gl.uniform4f(this._primitiveShader.uniforms.uColor._location, color.r, color.g, color.b, color.a);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 3);\n  }\n\n  drawCircle(position, radius, iterations) {\n    let gl = this._gl;\n\n    this._game.getShaderManager().useShader(this._primitiveShader);\n\n    let triangleData = [];\n    for (let i = 0; i < iterations; i++) {\n      triangleData.push(position.x + radius * Math.cos(i * __WEBPACK_IMPORTED_MODULE_1_math_mathHelper__[\"a\" /* default */].PI2 / iterations));\n      triangleData.push(position.y + radius * Math.sin(i * __WEBPACK_IMPORTED_MODULE_1_math_mathHelper__[\"a\" /* default */].PI2 / iterations));\n    }\n    triangleData = new Float32Array(triangleData);\n\n    // position buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, triangleData, gl.STATIC_DRAW);\n\n    gl.enableVertexAttribArray(this._primitiveShader.attributes.aVertexPosition);\n    gl.vertexAttribPointer(this._primitiveShader.attributes.aVertexPosition, 2, this._gl.FLOAT, false, 0, 0);\n\n    this._transformMatrix.identity();\n\n    // set uniforms\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uMatrix._location, false, this._game.getActiveCamera().getMatrix());\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uTransform._location, false, this._transformMatrix.asArray());\n    // gl.uniform4f(this._primitiveShader.uniforms.uColor._location, color.r, color.g, color.b, color.a);\n\n    gl.drawArrays(gl.TRIANGLE_FAN, 0, iterations);\n  }\n\n  drawRectangle(rectangle, color, rotation) {\n    let gl = this._gl;\n    let transformMatrix = this._transformMatrix;\n\n    this._game.getShaderManager().useShader(this._primitiveShader);\n\n    // position buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._rectangleData, gl.STATIC_DRAW);\n\n    gl.enableVertexAttribArray(this._primitiveShader.attributes.aVertexPosition);\n    gl.vertexAttribPointer(this._primitiveShader.attributes.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\n\n    // calculate transformation matrix (if not provided):\n    this._transformMatrix.identity();\n    this._transformMatrix.translate([rectangle.x, rectangle.y, 0]);\n\n    // rotate the rectangle?\n    if (rotation) {\n      this._transformMatrix.translate([rectangle.width / 2, rectangle.height / 2, 0]);\n      this._transformMatrix.rotate([0.0, 0.0, 1.0], rotation);\n      this._transformMatrix.translate([-rectangle.width / 2, -rectangle.height / 2, 0]);\n    }\n\n    this._transformMatrix.scale([rectangle.width, rectangle.height, 0]);\n\n    // set uniforms\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uMatrix._location, false, this._game.getActiveCamera().getMatrix());\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uTransform._location, false, transformMatrix.asArray());\n    // gl.uniform4f(this._primitiveShader.uniforms.uColor._location, color.r, color.g, color.b, color.a);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  drawRectangleFromMatrix(matrix, color) {\n    let gl = this._gl;\n\n    this._game.getShaderManager().useShader(this._primitiveShader);\n\n    // position buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, this._rectangleData, gl.STATIC_DRAW);\n\n    gl.enableVertexAttribArray(this._primitiveShader.attributes.aVertexPosition);\n    gl.vertexAttribPointer(this._primitiveShader.attributes.aVertexPosition, 2, gl.FLOAT, false, 0, 0);\n\n    // set uniforms\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uMatrix._location, false, this._game.getActiveCamera().getMatrix());\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uTransform._location, false, matrix);\n    // gl.uniform4f(this._primitiveShader.uniforms.uColor._location, color.r, color.g, color.b, color.a);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n\n  drawLine(vectorA, vectorB, thickness, color) {\n    let gl = this._gl;\n    //gl.lineWidth(thickness); // not all implementations support this\n\n    this._game.getShaderManager().useShader(this._primitiveShader);\n\n    let pointData = new Float32Array([vectorA.x, vectorA.y, vectorB.x, vectorB.y]);\n\n    // position buffer\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, pointData, gl.STATIC_DRAW);\n\n    gl.enableVertexAttribArray(this._primitiveShader.attributes.aVertexPosition);\n    gl.vertexAttribPointer(this._primitiveShader.attributes.aVertexPosition, 2, this._gl.FLOAT, false, 0, 0);\n\n    this._transformMatrix.identity();\n\n    // set uniforms\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uMatrix._location, false, this._game.getActiveCamera().getMatrix());\n    gl.uniformMatrix4fv(this._primitiveShader.uniforms.uTransform._location, false, this._transformMatrix.asArray());\n    // gl.uniform4f(this._primitiveShader.uniforms.uColor._location, color.r, color.g, color.b, color.a);\n\n    gl.drawArrays(gl.LINES, 0, 2);\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = PrimitiveRender;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 45 */
/* exports provided: default */
/* exports used: default */
/*!****************************!*\
  !*** ./src/core/sprite.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_core_gameObject__ = __webpack_require__(/*! core/gameObject */ 26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_core_transform__ = __webpack_require__(/*! core/transform */ 27);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_core_color__ = __webpack_require__(/*! core/color */ 11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_core_wrapMode__ = __webpack_require__(/*! core/wrapMode */ 48);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_core_texture2D__ = __webpack_require__(/*! core/texture2D */ 24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_utility_objectify__ = __webpack_require__(/*! utility/objectify */ 18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_utility_path__ = __webpack_require__(/*! utility/path */ 58);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_math_vector2__ = __webpack_require__(/*! math/vector2 */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_common_attributeDictionary__ = __webpack_require__(/*! common/attributeDictionary */ 8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_common_contentLoader__ = __webpack_require__(/*! common/contentLoader */ 14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_common_eventManager__ = __webpack_require__(/*! common/eventManager */ 37);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_common_constants__ = __webpack_require__(/*! common/constants */ 23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n\n\n\n\n\n\n\n\n\n\n\n\n//import { Debug } from \"common/logger\";\n\n\n__WEBPACK_IMPORTED_MODULE_8_common_attributeDictionary__[\"a\" /* AttributeDictionary */].inherit(\"sprite\", \"gameobject\");\n__WEBPACK_IMPORTED_MODULE_8_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"sprite\", \"_source\", {\n  displayName: \"Source\",\n  editor: \"filepath\"\n});\n__WEBPACK_IMPORTED_MODULE_8_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"sprite\", \"_tint\", { displayName: \"Tint\" });\n__WEBPACK_IMPORTED_MODULE_8_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"sprite\", \"_texture\", { visible: false });\n// temporary while we don't have cb's in editor\n__WEBPACK_IMPORTED_MODULE_8_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"sprite\", \"_wrapMode\", { visible: false });\n__WEBPACK_IMPORTED_MODULE_8_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"sprite\", \"_atlasRegion\", {\n  displayName: \"Region\",\n  available: function () {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12_common_utils__[\"a\" /* isObjectAssigned */])(this._atlas);\n  }\n});\n\n/**\n * Sprite class\n */\nclass Sprite extends __WEBPACK_IMPORTED_MODULE_0_core_gameObject__[\"a\" /* default */] {\n  //#region Constructors\n\n  /**\n     * Class constructor\n     * @param {Object} params\n     */\n  constructor(params) {\n    params = params || {};\n    params.name = params.name || \"Sprite\";\n\n    super(params);\n\n    // private properties:\n    this._source = \"\";\n    this._atlasRegion = \"\";\n    this._tint = params.tint || __WEBPACK_IMPORTED_MODULE_2_core_color__[\"a\" /* default */].fromRGB(255, 255, 255);\n    this._textureWidth = 0;\n    this._textureHeight = 0;\n    this._origin = new __WEBPACK_IMPORTED_MODULE_7_math_vector2__[\"a\" /* default */](0.5, 0.5);\n    this._wrapMode = __WEBPACK_IMPORTED_MODULE_3_core_wrapMode__[\"a\" /* WrapMode */].CLAMP;\n    this._atlas = null;\n\n    this.setTexture(params.texture);\n  }\n\n  //#endregion\n\n  //#region Public Methods\n\n  //#region Static Methods\n\n  static async restore(data) {\n    let sprite = new Sprite({\n      name: data.name,\n      transform: __WEBPACK_IMPORTED_MODULE_1_core_transform__[\"a\" /* default */].restore(data.transform),\n      children: __WEBPACK_IMPORTED_MODULE_5_utility_objectify__[\"a\" /* default */].restoreArray(data.children),\n      components: __WEBPACK_IMPORTED_MODULE_5_utility_objectify__[\"a\" /* default */].restoreArray(data.components)\n    });\n\n    return await sprite.setSource(data.src);\n  }\n\n  //#endregion\n\n  getBaseWidth() {\n    return this._textureWidth;\n  }\n\n  getBaseHeight() {\n    return this._textureHeight;\n  }\n\n  getMatrix() {\n    let x, y, width, height;\n\n    x = this.transform.getPosition().x;\n    y = this.transform.getPosition().y;\n    width = this._textureWidth * this.transform.getScale().x;\n    height = this._textureHeight * this.transform.getScale().y;\n\n    this._transformMatrix.identity();\n\n    if (this._wrapMode !== __WEBPACK_IMPORTED_MODULE_3_core_wrapMode__[\"a\" /* WrapMode */].REPEAT) {\n      this._transformMatrix.translate([x - width * this._origin.x, y - height * this._origin.y, 0]);\n    } else {\n      this._transformMatrix.translate([-width * this._origin.x, -height * this._origin.y, 0]);\n    }\n\n    this._transformMatrix.translate([width * this._origin.x, height * this._origin.y, 0]);\n    this._transformMatrix.rotate([0.0, 0.0, 1.0], this.transform.getRotation());\n    this._transformMatrix.translate([-width * this._origin.x, -height * this._origin.y, 0]);\n    this._transformMatrix.scale([width, height, 0]);\n\n    return this._transformMatrix.asArray();\n  }\n\n  setWrapMode(wrapMode) {\n    this._wrapMode = wrapMode;\n  }\n\n  getWrapMode() {\n    return this._wrapMode;\n  }\n\n  setOrigin(origin) {\n    this._origin = origin;\n  }\n\n  getOrigin() {\n    return this._origin;\n  }\n\n  setTint(color) {\n    this._tint = color;\n  }\n\n  getTint() {\n    return this._tint;\n  }\n\n  async setSource(path) {\n    this._source = path;\n\n    if (path == null || path.length <= 0) {\n      console.error(\"Invalid path\");\n      this.setTexture(null);\n      return;\n    }\n\n    let ext = __WEBPACK_IMPORTED_MODULE_6_utility_path__[\"a\" /* default */].getFileExtension(path);\n\n    if (ext == __WEBPACK_IMPORTED_MODULE_11_common_constants__[\"a\" /* CONSTANTS */].CONTENT_EXTENSIONS.ATLAS) {\n      const fileContext = await __WEBPACK_IMPORTED_MODULE_9_common_contentLoader__[\"a\" /* ContentLoader */].loadFile(path);\n\n      // if something went wrong with loading\n      if (fileContext == false) {\n        return;\n      }\n\n      let atlas = __WEBPACK_IMPORTED_MODULE_5_utility_objectify__[\"a\" /* default */].restoreFromString(fileContext);\n\n      // is this a valid atlas?\n      if (atlas == null || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12_common_utils__[\"a\" /* isObjectAssigned */])(atlas.sourcePath)) {\n        console.error(\"Couldn't restore atlas\");\n        return;\n      }\n\n      this._atlas = atlas;\n      this._assignTextureFromPath(this._atlas.sourcePath);\n\n      // FIXME: change to a more appropriate event?\n      // this is currently being used so the property editor refreshes the view after the atlas\n      // is asynchronously loaded.\n      __WEBPACK_IMPORTED_MODULE_10_common_eventManager__[\"a\" /* EventManager */].emit(__WEBPACK_IMPORTED_MODULE_11_common_constants__[\"a\" /* CONSTANTS */].EVENTS.CONTENT_ASSET_LOADED, path);\n    } else {\n      this._atlas = null;\n      await this._assignTextureFromPath(path);\n    }\n  }\n\n  getAtlasRegion() {\n    return this._atlasRegion;\n  }\n\n  setAtlasRegion(value) {\n    this._atlasRegion = value;\n  }\n\n  getSource() {\n    return this._source;\n  }\n\n  getType() {\n    return \"Sprite\";\n  }\n\n  getTexture() {\n    return this._texture;\n  }\n\n  setTexture(texture) {\n    // is this a ready texture?\n    if (!texture || !texture.isReady()) {\n      this._texture = null;\n      this._textureWidth = 0;\n      this._textureHeight = 0;\n      return;\n    }\n\n    this._texture = texture;\n\n    // cache the dimensions\n    this._textureWidth = this._texture.getWidth();\n    this._textureHeight = this._texture.getHeight();\n  }\n\n  render(delta, spriteBatch) {\n    if (!this.enabled) {\n      return;\n    }\n\n    // just store the sprite to render on flush:\n    spriteBatch.storeSprite(this);\n\n    // parent render function:\n    super.render(delta, spriteBatch);\n  }\n\n  // functions:\n  objectify() {\n    let superObjectify = super.objectify();\n    return __WEBPACK_IMPORTED_MODULE_5_utility_objectify__[\"a\" /* default */].extend(superObjectify, {\n      src: this._source,\n      tint: this._tint.objectify()\n    });\n  }\n\n  unload() {}\n\n  //#endregion\n\n  //#region Private Methods\n\n  async _assignTextureFromPath(path) {\n    const texture = await __WEBPACK_IMPORTED_MODULE_4_core_texture2D__[\"a\" /* default */].fromPath(path);\n\n    if (texture === false) {\n      return;\n    }\n\n    this.setTexture(texture);\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Sprite;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 46 */
/* exports provided: default */
/* exports used: default */
/*!*********************************!*\
  !*** ./src/core/spriteBatch.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_shaders_textureShader_shader__ = __webpack_require__(/*! shaders/textureShader.shader */ 55);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_utility_utils__ = __webpack_require__(/*! utility/utils */ 12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_math_vector2__ = __webpack_require__(/*! math/vector2 */ 5);\n\n\n\n\n/**\n * SpriteBatch class\n */\nclass SpriteBatch {\n  //#region Constructors\n\n  constructor(game) {\n    if (!__WEBPACK_IMPORTED_MODULE_1_utility_utils__[\"a\" /* default */].isGame(game)) {\n      throw new Error(\"Cannot create sprite render, the Game object \" + \"is missing from the parameters\");\n    }\n\n    // private properties:\n    this._game = game;\n    this._gl = game.getRenderContext().getContext();\n    this._renderBuffer = this._gl.createBuffer();\n    this._textureShader = new __WEBPACK_IMPORTED_MODULE_0_shaders_textureShader_shader__[\"a\" /* default */]();\n\n    this._stride = 16;\n    this._singleDataLength = 24;\n    this._maxSpritesPerBatch = 2500;\n    this._spriteData = new Float32Array(this._singleDataLength * this._maxSpritesPerBatch);\n    this._spriteDataIdx = 0;\n    this._sprites = [];\n\n    /*\n          Coordinates in WebGL goes like this:\n          0,1----1,1\n         #--------#\n         #--------#\n         #--------#\n         0,0----1,0\n          */\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  clear() {\n    this._sprites = [];\n    this._spriteDataIdx = 0;\n  }\n\n  begin() {\n    this.clear();\n  }\n\n  storeSprite(sprite) {\n    this._sprites.push(sprite);\n  }\n\n  _processSprite(sprite) {\n    let magnitude = 1.0;\n    let spriteMatrix = sprite.getMatrix();\n\n    let bottomLeft = __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */].transformMat4(new __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */](0, 0), spriteMatrix);\n    let bottomRight = __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */].transformMat4(new __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */](magnitude, 0), spriteMatrix);\n    let topLeft = __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */].transformMat4(new __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */](0, magnitude), spriteMatrix);\n    let topRight = __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */].transformMat4(new __WEBPACK_IMPORTED_MODULE_2_math_vector2__[\"a\" /* default */](magnitude, magnitude), spriteMatrix);\n\n    this._spriteData[this._spriteDataIdx++] = bottomLeft.x;\n    this._spriteData[this._spriteDataIdx++] = bottomLeft.y;\n    this._spriteData[this._spriteDataIdx++] = 0;\n    this._spriteData[this._spriteDataIdx++] = 0;\n\n    this._spriteData[this._spriteDataIdx++] = bottomRight.x;\n    this._spriteData[this._spriteDataIdx++] = bottomRight.y;\n    this._spriteData[this._spriteDataIdx++] = 1;\n    this._spriteData[this._spriteDataIdx++] = 0;\n\n    this._spriteData[this._spriteDataIdx++] = topLeft.x;\n    this._spriteData[this._spriteDataIdx++] = topLeft.y;\n    this._spriteData[this._spriteDataIdx++] = 0;\n    this._spriteData[this._spriteDataIdx++] = 1;\n\n    this._spriteData[this._spriteDataIdx++] = topLeft.x;\n    this._spriteData[this._spriteDataIdx++] = topLeft.y;\n    this._spriteData[this._spriteDataIdx++] = 0;\n    this._spriteData[this._spriteDataIdx++] = 1;\n\n    this._spriteData[this._spriteDataIdx++] = bottomRight.x;\n    this._spriteData[this._spriteDataIdx++] = bottomRight.y;\n    this._spriteData[this._spriteDataIdx++] = 1;\n    this._spriteData[this._spriteDataIdx++] = 0;\n\n    this._spriteData[this._spriteDataIdx++] = topRight.x;\n    this._spriteData[this._spriteDataIdx++] = topRight.y;\n    this._spriteData[this._spriteDataIdx++] = 1;\n    this._spriteData[this._spriteDataIdx++] = 1;\n  }\n\n  _renderBatch(count, color) {\n    let gl = this._gl;\n\n    gl.bufferData(gl.ARRAY_BUFFER, this._spriteData, gl.STATIC_DRAW);\n\n    // vertex position attribute\n    gl.enableVertexAttribArray(this._textureShader.attributes.aVertexPosition);\n    gl.vertexAttribPointer(this._textureShader.attributes.aVertexPosition, 2, gl.FLOAT, false, this._stride, 0);\n\n    // texture coordinate attribute\n    gl.enableVertexAttribArray(this._textureShader.attributes.aTextureCoord);\n    gl.vertexAttribPointer(this._textureShader.attributes.aTextureCoord, 2, gl.FLOAT, false, this._stride, 8);\n\n    // color uniform\n    if (__WEBPACK_IMPORTED_MODULE_1_utility_utils__[\"a\" /* default */].isColor(color)) {\n      gl.uniform4f(this._textureShader.uniforms.uColor._location, color.r, color.g, color.b, color.a);\n    }\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6 * (this._spriteDataIdx / this._singleDataLength));\n\n    this._spriteDataIdx = 0;\n  }\n\n  flush() {\n    if (this._sprites.length === 0) {\n      return;\n    }\n\n    let gl = this._gl;\n    let lastTextureId = -1;\n    let count = 0;\n    let sprite;\n    let texture;\n    let color;\n\n    this._game.getShaderManager().useShader(this._textureShader);\n\n    // since this is the only buffer...\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._renderBuffer);\n\n    // camera matrix uniform\n    gl.uniformMatrix4fv(this._textureShader.uniforms.uMatrix._location, false, this._game.getActiveCamera().getMatrix());\n\n    for (let i = 0; i < this._sprites.length; i++) {\n      sprite = this._sprites[i];\n      texture = sprite.getTexture();\n\n      if (texture == null || !texture.isReady()) {\n        continue;\n      }\n\n      color = sprite.getTint();\n\n      if (lastTextureId !== texture.getUID()) {\n        // is this the first check?\n        if (lastTextureId >= 0) {\n          this._renderBatch(count, color);\n          count = 0;\n        }\n\n        texture.bind();\n        lastTextureId = texture.getUID();\n      }\n\n      this._processSprite(sprite);\n      count++;\n\n      if (count >= this._maxSpritesPerBatch || i === this._sprites.length - 1) {\n        this._renderBatch(count, color);\n        count = 0;\n      }\n    }\n  }\n\n  unload() {\n    // delete buffers and unload shaders:\n    this._gl.deleteBuffer(this._renderBuffer);\n\n    this._textureShader.unload();\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = SpriteBatch;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 47 */
/* exports provided: default */
/* exports used: default */
/*!****************************!*\
  !*** ./src/core/stroke.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_core_color__ = __webpack_require__(/*! core/color */ 11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_math_mathHelper__ = __webpack_require__(/*! math/mathHelper */ 15);\n\n\n\n\n/**\r\n * Stroke Class\r\n * Stroke is a combination of a color and its size\r\n */\nclass Stroke {\n  //#region Static Properties\n\n  /**\r\n     *\r\n     * @returns {number}\r\n     */\n  getMaxSize() {\n    return this._maxSize;\n  }\n\n  /**\r\n     *\r\n     * @param {number} size\r\n     */\n  setMaxSize(size) {\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_utils__[\"c\" /* isNumber */])(size)) {\n      throw new Error(\"The given raw size is invalid\");\n    }\n    this._maxSize = size;\n  }\n\n  //#endregion\n\n  //#region Constructors\n\n  /**\r\n     * Stroke is a combination of a color and its size\r\n     * @param {Color=} color stroke color\r\n     * @param {number=} size size of the stroke\r\n     * @constructor\r\n     */\n  constructor(color, size) {\n    // stroke color\n    this._color = color || __WEBPACK_IMPORTED_MODULE_1_core_color__[\"a\" /* default */].fromRGBA(0.0, 0.0, 0.0, 1.0);\n    // stroke size\n    this._size = size || 0.0;\n    this._maxSize = 10;\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static restore(data) {\n    return new Stroke(__WEBPACK_IMPORTED_MODULE_1_core_color__[\"a\" /* default */].restore(data.color), data.size);\n  }\n\n  //#endregion\n\n  //#region Public Methods\n\n  getColor() {\n    return this._color;\n  }\n\n  /**\r\n     * Sets stroke's color\r\n     * @param {Color} color\r\n     */\n  setColor(color) {\n    if (color instanceof __WEBPACK_IMPORTED_MODULE_1_core_color__[\"a\" /* default */]) {\n      this._color = color.clone();\n      return;\n    }\n\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_utils__[\"c\" /* isNumber */])(color.r) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_utils__[\"c\" /* isNumber */])(color.g) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_utils__[\"c\" /* isNumber */])(color.b) || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_utils__[\"c\" /* isNumber */])(color.a)) {\n      throw new Error(\"The given stroke color is invalid\");\n    }\n\n    this._color.set(color.r, color.g, color.b, color.a);\n  }\n\n  setOpacity(alpha) {\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_utils__[\"c\" /* isNumber */])(alpha)) {\n      throw new Error(\"The given alpha is invalid\");\n    }\n\n    let currentColor = this.getColor();\n\n    this._color.set(currentColor.r, currentColor.g, currentColor.b, alpha);\n  }\n\n  getOpacity() {\n    return this.getColor().a;\n  }\n\n  getSize() {\n    return this._size;\n  }\n\n  setSize(size) {\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_utils__[\"c\" /* isNumber */])(size)) {\n      throw new Error(\"The given size is invalid\");\n    }\n\n    size = __WEBPACK_IMPORTED_MODULE_2_math_mathHelper__[\"a\" /* default */].clamp(size, 0, this.getMaxSize());\n\n    this._size = size;\n  }\n\n  objectify() {\n    return {\n      color: this._color.objectify(),\n      size: this.getSize()\n    };\n  }\n\n  //#endregion\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Stroke;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvcmUvc3Ryb2tlLmpzPzcwMmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNOdW1iZXIgfSBmcm9tIFwiY29tbW9uL3V0aWxzXCI7XHJcbmltcG9ydCBDb2xvciBmcm9tIFwiY29yZS9jb2xvclwiO1xyXG5pbXBvcnQgTWF0aEhlbHBlciBmcm9tIFwibWF0aC9tYXRoSGVscGVyXCI7XHJcblxyXG4vKipcclxuICogU3Ryb2tlIENsYXNzXHJcbiAqIFN0cm9rZSBpcyBhIGNvbWJpbmF0aW9uIG9mIGEgY29sb3IgYW5kIGl0cyBzaXplXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTdHJva2Uge1xyXG4gIC8vI3JlZ2lvbiBTdGF0aWMgUHJvcGVydGllc1xyXG5cclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfVxyXG4gICAgICovXHJcbiAgZ2V0TWF4U2l6ZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9tYXhTaXplO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHNpemVcclxuICAgICAqL1xyXG4gIHNldE1heFNpemUoc2l6ZSkge1xyXG4gICAgaWYgKCFpc051bWJlcihzaXplKSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgZ2l2ZW4gcmF3IHNpemUgaXMgaW52YWxpZFwiKTtcclxuICAgIH1cclxuICAgIHRoaXMuX21heFNpemUgPSBzaXplO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcclxuXHJcbiAgLyoqXHJcbiAgICAgKiBTdHJva2UgaXMgYSBjb21iaW5hdGlvbiBvZiBhIGNvbG9yIGFuZCBpdHMgc2l6ZVxyXG4gICAgICogQHBhcmFtIHtDb2xvcj19IGNvbG9yIHN0cm9rZSBjb2xvclxyXG4gICAgICogQHBhcmFtIHtudW1iZXI9fSBzaXplIHNpemUgb2YgdGhlIHN0cm9rZVxyXG4gICAgICogQGNvbnN0cnVjdG9yXHJcbiAgICAgKi9cclxuICBjb25zdHJ1Y3Rvcihjb2xvciwgc2l6ZSkge1xyXG4gICAgLy8gc3Ryb2tlIGNvbG9yXHJcbiAgICB0aGlzLl9jb2xvciA9IGNvbG9yIHx8IENvbG9yLmZyb21SR0JBKDAuMCwgMC4wLCAwLjAsIDEuMCk7XHJcbiAgICAvLyBzdHJva2Ugc2l6ZVxyXG4gICAgdGhpcy5fc2l6ZSA9IHNpemUgfHwgMC4wO1xyXG4gICAgdGhpcy5fbWF4U2l6ZSA9IDEwO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBNZXRob2RzXHJcblxyXG4gIC8vI3JlZ2lvbiBTdGF0aWMgTWV0aG9kc1xyXG5cclxuICBzdGF0aWMgcmVzdG9yZShkYXRhKSB7XHJcbiAgICByZXR1cm4gbmV3IFN0cm9rZShDb2xvci5yZXN0b3JlKGRhdGEuY29sb3IpLCBkYXRhLnNpemUpO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBQdWJsaWMgTWV0aG9kc1xyXG5cclxuICBnZXRDb2xvcigpIHtcclxuICAgIHJldHVybiB0aGlzLl9jb2xvcjtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogU2V0cyBzdHJva2UncyBjb2xvclxyXG4gICAgICogQHBhcmFtIHtDb2xvcn0gY29sb3JcclxuICAgICAqL1xyXG4gIHNldENvbG9yKGNvbG9yKSB7XHJcbiAgICBpZiAoY29sb3IgaW5zdGFuY2VvZiBDb2xvcikge1xyXG4gICAgICB0aGlzLl9jb2xvciA9IGNvbG9yLmNsb25lKCk7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoIWlzTnVtYmVyKGNvbG9yLnIpIHx8ICFpc051bWJlcihjb2xvci5nKSB8fCAhaXNOdW1iZXIoY29sb3IuYikgfHwgIWlzTnVtYmVyKGNvbG9yLmEpKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSBnaXZlbiBzdHJva2UgY29sb3IgaXMgaW52YWxpZFwiKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9jb2xvci5zZXQoY29sb3IuciwgY29sb3IuZywgY29sb3IuYiwgY29sb3IuYSk7XHJcbiAgfVxyXG5cclxuICBzZXRPcGFjaXR5KGFscGhhKSB7XHJcbiAgICBpZiAoIWlzTnVtYmVyKGFscGhhKSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJUaGUgZ2l2ZW4gYWxwaGEgaXMgaW52YWxpZFwiKTtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgY3VycmVudENvbG9yID0gdGhpcy5nZXRDb2xvcigpO1xyXG5cclxuICAgIHRoaXMuX2NvbG9yLnNldChjdXJyZW50Q29sb3IuciwgY3VycmVudENvbG9yLmcsIGN1cnJlbnRDb2xvci5iLCBhbHBoYSk7XHJcbiAgfVxyXG5cclxuICBnZXRPcGFjaXR5KCkge1xyXG4gICAgcmV0dXJuIHRoaXMuZ2V0Q29sb3IoKS5hO1xyXG4gIH1cclxuXHJcbiAgZ2V0U2l6ZSgpIHtcclxuICAgIHJldHVybiB0aGlzLl9zaXplO1xyXG4gIH1cclxuXHJcbiAgc2V0U2l6ZShzaXplKSB7XHJcbiAgICBpZiAoIWlzTnVtYmVyKHNpemUpKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIlRoZSBnaXZlbiBzaXplIGlzIGludmFsaWRcIik7XHJcbiAgICB9XHJcblxyXG4gICAgc2l6ZSA9IE1hdGhIZWxwZXIuY2xhbXAoc2l6ZSwgMCwgdGhpcy5nZXRNYXhTaXplKCkpO1xyXG5cclxuICAgIHRoaXMuX3NpemUgPSBzaXplO1xyXG4gIH1cclxuXHJcbiAgb2JqZWN0aWZ5KCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgY29sb3I6IHRoaXMuX2NvbG9yLm9iamVjdGlmeSgpLFxyXG4gICAgICBzaXplOiB0aGlzLmdldFNpemUoKVxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNlbmRyZWdpb25cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvcmUvc3Ryb2tlLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFoSEE7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 48 */
/* exports provided: WrapMode */
/* exports used: WrapMode */
/*!******************************!*\
  !*** ./src/core/wrapMode.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("const WrapMode = {\n  CLAMP: 0,\n  REPEAT: 1\n};\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = WrapMode;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvcmUvd3JhcE1vZGUuanM/NTEzNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgV3JhcE1vZGUgPSB7XHJcbiAgQ0xBTVA6IDAsXHJcbiAgUkVQRUFUOiAxXHJcbn07XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29yZS93cmFwTW9kZS5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBRkE7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 49 */
/* exports provided: Keyboard */
/* exports used: Keyboard */
/*!*******************************!*\
  !*** ./src/input/keyboard.js ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__keyboardState__ = __webpack_require__(/*! ./keyboardState */ 50);\n\n\n// unique key\nconst _keyboardSingleton = Symbol(\"keyboardSingleton\");\n\n/**\r\n * Global Keyboard handler\r\n */\nclass KeyboardSingleton {\n  //#region Constructors\n\n  constructor(keyboardSingletonToken) {\n    if (_keyboardSingleton !== keyboardSingletonToken) {\n      throw new Error(\"Cannot instantiate directly.\");\n    }\n    this._keys = [];\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static get instance() {\n    if (!this[_keyboardSingleton]) {\n      this[_keyboardSingleton] = new KeyboardSingleton(_keyboardSingleton);\n    }\n\n    return this[_keyboardSingleton];\n  }\n\n  //#endregion\n\n  removeKey(key) {\n    let idx = this._keys.indexOf(key);\n    if (idx >= 0) {\n      this._keys.splice(idx, 1);\n    }\n  }\n\n  removeKeys(keys) {\n    keys.forEach(function (key) {\n      this.removeKey(key);\n    }.bind(this));\n  }\n\n  addKey(key) {\n    if (this._keys.indexOf(key) < 0) {\n      this._keys.push(key);\n    }\n  }\n\n  addKeys(keys) {\n    keys.forEach(function (key) {\n      this.addKey(key);\n    }.bind(this));\n  }\n\n  setKeys(keys) {\n    this._keys = keys;\n  }\n\n  clearKeys() {\n    this._keys = [];\n  }\n\n  getState() {\n    return new __WEBPACK_IMPORTED_MODULE_0__keyboardState__[\"a\" /* default */](this._keys);\n  }\n\n  /**\r\n     * Gets if the given key is currently being pressed\r\n     * @param key\r\n     * @returns {boolean}\r\n     */\n  isKeyDown(key) {\n    return this._keys.indexOf(key) >= 0;\n  }\n\n  /**\r\n     * Gets if the given key is not currently being pressed\r\n     * @param key\r\n     * @returns {boolean}\r\n     */\n  isKeyUp(key) {\n    return this._keys.indexOf(key) < 0;\n  }\n\n  //#endregion\n}\n\nconst Keyboard = KeyboardSingleton.instance;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Keyboard;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2lucHV0L2tleWJvYXJkLmpzPzdjNzciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEtleWJvYXJkU3RhdGUgZnJvbSBcIi4va2V5Ym9hcmRTdGF0ZVwiO1xyXG5cclxuLy8gdW5pcXVlIGtleVxyXG5jb25zdCBfa2V5Ym9hcmRTaW5nbGV0b24gPSBTeW1ib2woXCJrZXlib2FyZFNpbmdsZXRvblwiKTtcclxuXHJcbi8qKlxyXG4gKiBHbG9iYWwgS2V5Ym9hcmQgaGFuZGxlclxyXG4gKi9cclxuY2xhc3MgS2V5Ym9hcmRTaW5nbGV0b24ge1xyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcclxuXHJcbiAgY29uc3RydWN0b3Ioa2V5Ym9hcmRTaW5nbGV0b25Ub2tlbikge1xyXG4gICAgaWYgKF9rZXlib2FyZFNpbmdsZXRvbiAhPT0ga2V5Ym9hcmRTaW5nbGV0b25Ub2tlbikge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgaW5zdGFudGlhdGUgZGlyZWN0bHkuXCIpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5fa2V5cyA9IFtdO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBNZXRob2RzXHJcblxyXG4gIC8vI3JlZ2lvbiBTdGF0aWMgTWV0aG9kc1xyXG5cclxuICBzdGF0aWMgZ2V0IGluc3RhbmNlKCkge1xyXG4gICAgaWYgKCF0aGlzW19rZXlib2FyZFNpbmdsZXRvbl0pIHtcclxuICAgICAgdGhpc1tfa2V5Ym9hcmRTaW5nbGV0b25dID0gbmV3IEtleWJvYXJkU2luZ2xldG9uKF9rZXlib2FyZFNpbmdsZXRvbik7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRoaXNbX2tleWJvYXJkU2luZ2xldG9uXTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICByZW1vdmVLZXkoa2V5KSB7XHJcbiAgICBsZXQgaWR4ID0gdGhpcy5fa2V5cy5pbmRleE9mKGtleSk7XHJcbiAgICBpZiAoaWR4ID49IDApIHtcclxuICAgICAgdGhpcy5fa2V5cy5zcGxpY2UoaWR4LCAxKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJlbW92ZUtleXMoa2V5cykge1xyXG4gICAga2V5cy5mb3JFYWNoKFxyXG4gICAgICBmdW5jdGlvbihrZXkpIHtcclxuICAgICAgICB0aGlzLnJlbW92ZUtleShrZXkpO1xyXG4gICAgICB9LmJpbmQodGhpcylcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBhZGRLZXkoa2V5KSB7XHJcbiAgICBpZiAodGhpcy5fa2V5cy5pbmRleE9mKGtleSkgPCAwKSB7XHJcbiAgICAgIHRoaXMuX2tleXMucHVzaChrZXkpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgYWRkS2V5cyhrZXlzKSB7XHJcbiAgICBrZXlzLmZvckVhY2goXHJcbiAgICAgIGZ1bmN0aW9uKGtleSkge1xyXG4gICAgICAgIHRoaXMuYWRkS2V5KGtleSk7XHJcbiAgICAgIH0uYmluZCh0aGlzKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIHNldEtleXMoa2V5cykge1xyXG4gICAgdGhpcy5fa2V5cyA9IGtleXM7XHJcbiAgfVxyXG5cclxuICBjbGVhcktleXMoKSB7XHJcbiAgICB0aGlzLl9rZXlzID0gW107XHJcbiAgfVxyXG5cclxuICBnZXRTdGF0ZSgpIHtcclxuICAgIHJldHVybiBuZXcgS2V5Ym9hcmRTdGF0ZSh0aGlzLl9rZXlzKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogR2V0cyBpZiB0aGUgZ2l2ZW4ga2V5IGlzIGN1cnJlbnRseSBiZWluZyBwcmVzc2VkXHJcbiAgICAgKiBAcGFyYW0ga2V5XHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gIGlzS2V5RG93bihrZXkpIHtcclxuICAgIHJldHVybiB0aGlzLl9rZXlzLmluZGV4T2Yoa2V5KSA+PSAwO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBHZXRzIGlmIHRoZSBnaXZlbiBrZXkgaXMgbm90IGN1cnJlbnRseSBiZWluZyBwcmVzc2VkXHJcbiAgICAgKiBAcGFyYW0ga2V5XHJcbiAgICAgKiBAcmV0dXJucyB7Ym9vbGVhbn1cclxuICAgICAqL1xyXG4gIGlzS2V5VXAoa2V5KSB7XHJcbiAgICByZXR1cm4gdGhpcy5fa2V5cy5pbmRleE9mKGtleSkgPCAwO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBLZXlib2FyZCA9IEtleWJvYXJkU2luZ2xldG9uLmluc3RhbmNlO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2lucHV0L2tleWJvYXJkLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBckZBO0FBQ0E7QUF1RkE7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 50 */
/* exports provided: default */
/* exports used: default */
/*!************************************!*\
  !*** ./src/input/keyboardState.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * Keyboard state Class\r\n */\n\nclass KeyboardState {\n  //#region Constructors\n\n  /**\r\n     * @param keys\r\n     */\n  constructor(keys) {\n    // now we copy the values to our state array.\n    this._keys = [];\n    keys.forEach(function (key) {\n      this._keys.push(key);\n    }.bind(this));\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  /**\r\n     * Gets the keys currently being pressed\r\n     * @returns {Array}\r\n     */\n  getKeys() {\n    return this._keys;\n  }\n\n  /**\r\n     * Gets if the given key is currently being pressed\r\n     * @param key\r\n     * @returns {boolean}\r\n     */\n  isKeyDown(key) {\n    return this._keys.indexOf(key) >= 0;\n  }\n\n  /**\r\n     * Gets if the given key is not currently being pressed\r\n     * @param key\r\n     * @returns {boolean}\r\n     */\n  isKeyUp(key) {\n    return this._keys.indexOf(key) < 0;\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = KeyboardState;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2lucHV0L2tleWJvYXJkU3RhdGUuanM/MDUwMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogS2V5Ym9hcmQgc3RhdGUgQ2xhc3NcclxuICovXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBLZXlib2FyZFN0YXRlIHtcclxuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXHJcblxyXG4gIC8qKlxyXG4gICAgICogQHBhcmFtIGtleXNcclxuICAgICAqL1xyXG4gIGNvbnN0cnVjdG9yKGtleXMpIHtcclxuICAgIC8vIG5vdyB3ZSBjb3B5IHRoZSB2YWx1ZXMgdG8gb3VyIHN0YXRlIGFycmF5LlxyXG4gICAgdGhpcy5fa2V5cyA9IFtdO1xyXG4gICAga2V5cy5mb3JFYWNoKFxyXG4gICAgICBmdW5jdGlvbihrZXkpIHtcclxuICAgICAgICB0aGlzLl9rZXlzLnB1c2goa2V5KTtcclxuICAgICAgfS5iaW5kKHRoaXMpXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBNZXRob2RzXHJcblxyXG4gIC8qKlxyXG4gICAgICogR2V0cyB0aGUga2V5cyBjdXJyZW50bHkgYmVpbmcgcHJlc3NlZFxyXG4gICAgICogQHJldHVybnMge0FycmF5fVxyXG4gICAgICovXHJcbiAgZ2V0S2V5cygpIHtcclxuICAgIHJldHVybiB0aGlzLl9rZXlzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBHZXRzIGlmIHRoZSBnaXZlbiBrZXkgaXMgY3VycmVudGx5IGJlaW5nIHByZXNzZWRcclxuICAgICAqIEBwYXJhbSBrZXlcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAgICovXHJcbiAgaXNLZXlEb3duKGtleSkge1xyXG4gICAgcmV0dXJuIHRoaXMuX2tleXMuaW5kZXhPZihrZXkpID49IDA7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIEdldHMgaWYgdGhlIGdpdmVuIGtleSBpcyBub3QgY3VycmVudGx5IGJlaW5nIHByZXNzZWRcclxuICAgICAqIEBwYXJhbSBrZXlcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAgICovXHJcbiAgaXNLZXlVcChrZXkpIHtcclxuICAgIHJldHVybiB0aGlzLl9rZXlzLmluZGV4T2Yoa2V5KSA8IDA7XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2lucHV0L2tleWJvYXJkU3RhdGUuanMiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE5Q0E7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 51 */
/* exports provided: default */
/* exports used: default */
/*!***************************!*\
  !*** ./src/input/keys.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n *  Keys Class\r\n */\nclass Keys {\n  constructor() {}\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Keys;\n\n\n/**\r\n *  Static Properties\r\n */\nKeys.Backspace = 8;\nKeys.Tab = 9;\nKeys.Enter = 13;\nKeys.Shift = 16;\nKeys.Ctrl = 17;\nKeys.Alt = 18;\nKeys.Pause = 19;\nKeys.Break = 19;\nKeys.CapsLock = 20;\nKeys.Escape = 27;\nKeys.PageUp = 33;\nKeys.PageDown = 34;\nKeys.End = 35;\nKeys.Home = 36;\nKeys.LeftArrow = 37;\nKeys.UpArrow = 38;\nKeys.RightArrow = 39;\nKeys.DownArrow = 40;\nKeys.Insert = 45;\nKeys.Delete = 46;\nKeys.Space = 32;\nKeys.D0 = 48;\nKeys.D1 = 49;\nKeys.D2 = 50;\nKeys.D3 = 51;\nKeys.D4 = 52;\nKeys.D5 = 53;\nKeys.D6 = 54;\nKeys.D7 = 55;\nKeys.D8 = 56;\nKeys.D9 = 57;\nKeys.A = 65;\nKeys.B = 66;\nKeys.C = 67;\nKeys.D = 68;\nKeys.E = 69;\nKeys.F = 70;\nKeys.G = 71;\nKeys.H = 72;\nKeys.I = 73;\nKeys.J = 74;\nKeys.K = 75;\nKeys.L = 76;\nKeys.M = 77;\nKeys.N = 78;\nKeys.O = 79;\nKeys.P = 80;\nKeys.Q = 81;\nKeys.R = 82;\nKeys.S = 83;\nKeys.T = 84;\nKeys.U = 85;\nKeys.V = 86;\nKeys.W = 87;\nKeys.X = 88;\nKeys.Y = 89;\nKeys.Z = 90;\nKeys.LeftWindowKey = 91;\nKeys.RightWindowKey = 92;\nKeys.SelectKey = 93;\nKeys.NumPad0 = 96;\nKeys.NumPad1 = 97;\nKeys.NumPad2 = 98;\nKeys.NumPad3 = 99;\nKeys.NumPad4 = 100;\nKeys.NumPad5 = 101;\nKeys.NumPad6 = 102;\nKeys.NumPad7 = 103;\nKeys.NumPad8 = 104;\nKeys.NumPad9 = 105;\nKeys.Multiply = 106;\nKeys.Add = 107;\nKeys.Subtract = 109;\nKeys.DecimalPoint = 110;\nKeys.Divide = 111;\nKeys.F1 = 112;\nKeys.F2 = 113;\nKeys.F3 = 114;\nKeys.F4 = 115;\nKeys.F5 = 116;\nKeys.F6 = 117;\nKeys.F7 = 118;\nKeys.F8 = 119;\nKeys.F9 = 120;\nKeys.F10 = 121;\nKeys.F11 = 122;\nKeys.F12 = 123;\nKeys.NumLock = 144;\nKeys.ScrollLock = 145;\nKeys.SemiColon = 186;\nKeys.EqualSign = 187;\nKeys.Comma = 188;\nKeys.Dash = 189;\nKeys.Period = 190;\nKeys.ForwardSlash = 191;\nKeys.GraveAccent = 192;\nKeys.OpenBracket = 219;\nKeys.BackSlash = 220;\nKeys.CloseBraket = 221;\nKeys.SingleQuote = 222;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2lucHV0L2tleXMuanM/MmQ2YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogIEtleXMgQ2xhc3NcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEtleXMge1xyXG4gIGNvbnN0cnVjdG9yKCkge31cclxufVxyXG5cclxuLyoqXHJcbiAqICBTdGF0aWMgUHJvcGVydGllc1xyXG4gKi9cclxuS2V5cy5CYWNrc3BhY2UgPSA4O1xyXG5LZXlzLlRhYiA9IDk7XHJcbktleXMuRW50ZXIgPSAxMztcclxuS2V5cy5TaGlmdCA9IDE2O1xyXG5LZXlzLkN0cmwgPSAxNztcclxuS2V5cy5BbHQgPSAxODtcclxuS2V5cy5QYXVzZSA9IDE5O1xyXG5LZXlzLkJyZWFrID0gMTk7XHJcbktleXMuQ2Fwc0xvY2sgPSAyMDtcclxuS2V5cy5Fc2NhcGUgPSAyNztcclxuS2V5cy5QYWdlVXAgPSAzMztcclxuS2V5cy5QYWdlRG93biA9IDM0O1xyXG5LZXlzLkVuZCA9IDM1O1xyXG5LZXlzLkhvbWUgPSAzNjtcclxuS2V5cy5MZWZ0QXJyb3cgPSAzNztcclxuS2V5cy5VcEFycm93ID0gMzg7XHJcbktleXMuUmlnaHRBcnJvdyA9IDM5O1xyXG5LZXlzLkRvd25BcnJvdyA9IDQwO1xyXG5LZXlzLkluc2VydCA9IDQ1O1xyXG5LZXlzLkRlbGV0ZSA9IDQ2O1xyXG5LZXlzLlNwYWNlID0gMzI7XHJcbktleXMuRDAgPSA0ODtcclxuS2V5cy5EMSA9IDQ5O1xyXG5LZXlzLkQyID0gNTA7XHJcbktleXMuRDMgPSA1MTtcclxuS2V5cy5ENCA9IDUyO1xyXG5LZXlzLkQ1ID0gNTM7XHJcbktleXMuRDYgPSA1NDtcclxuS2V5cy5ENyA9IDU1O1xyXG5LZXlzLkQ4ID0gNTY7XHJcbktleXMuRDkgPSA1NztcclxuS2V5cy5BID0gNjU7XHJcbktleXMuQiA9IDY2O1xyXG5LZXlzLkMgPSA2NztcclxuS2V5cy5EID0gNjg7XHJcbktleXMuRSA9IDY5O1xyXG5LZXlzLkYgPSA3MDtcclxuS2V5cy5HID0gNzE7XHJcbktleXMuSCA9IDcyO1xyXG5LZXlzLkkgPSA3MztcclxuS2V5cy5KID0gNzQ7XHJcbktleXMuSyA9IDc1O1xyXG5LZXlzLkwgPSA3NjtcclxuS2V5cy5NID0gNzc7XHJcbktleXMuTiA9IDc4O1xyXG5LZXlzLk8gPSA3OTtcclxuS2V5cy5QID0gODA7XHJcbktleXMuUSA9IDgxO1xyXG5LZXlzLlIgPSA4MjtcclxuS2V5cy5TID0gODM7XHJcbktleXMuVCA9IDg0O1xyXG5LZXlzLlUgPSA4NTtcclxuS2V5cy5WID0gODY7XHJcbktleXMuVyA9IDg3O1xyXG5LZXlzLlggPSA4ODtcclxuS2V5cy5ZID0gODk7XHJcbktleXMuWiA9IDkwO1xyXG5LZXlzLkxlZnRXaW5kb3dLZXkgPSA5MTtcclxuS2V5cy5SaWdodFdpbmRvd0tleSA9IDkyO1xyXG5LZXlzLlNlbGVjdEtleSA9IDkzO1xyXG5LZXlzLk51bVBhZDAgPSA5NjtcclxuS2V5cy5OdW1QYWQxID0gOTc7XHJcbktleXMuTnVtUGFkMiA9IDk4O1xyXG5LZXlzLk51bVBhZDMgPSA5OTtcclxuS2V5cy5OdW1QYWQ0ID0gMTAwO1xyXG5LZXlzLk51bVBhZDUgPSAxMDE7XHJcbktleXMuTnVtUGFkNiA9IDEwMjtcclxuS2V5cy5OdW1QYWQ3ID0gMTAzO1xyXG5LZXlzLk51bVBhZDggPSAxMDQ7XHJcbktleXMuTnVtUGFkOSA9IDEwNTtcclxuS2V5cy5NdWx0aXBseSA9IDEwNjtcclxuS2V5cy5BZGQgPSAxMDc7XHJcbktleXMuU3VidHJhY3QgPSAxMDk7XHJcbktleXMuRGVjaW1hbFBvaW50ID0gMTEwO1xyXG5LZXlzLkRpdmlkZSA9IDExMTtcclxuS2V5cy5GMSA9IDExMjtcclxuS2V5cy5GMiA9IDExMztcclxuS2V5cy5GMyA9IDExNDtcclxuS2V5cy5GNCA9IDExNTtcclxuS2V5cy5GNSA9IDExNjtcclxuS2V5cy5GNiA9IDExNztcclxuS2V5cy5GNyA9IDExODtcclxuS2V5cy5GOCA9IDExOTtcclxuS2V5cy5GOSA9IDEyMDtcclxuS2V5cy5GMTAgPSAxMjE7XHJcbktleXMuRjExID0gMTIyO1xyXG5LZXlzLkYxMiA9IDEyMztcclxuS2V5cy5OdW1Mb2NrID0gMTQ0O1xyXG5LZXlzLlNjcm9sbExvY2sgPSAxNDU7XHJcbktleXMuU2VtaUNvbG9uID0gMTg2O1xyXG5LZXlzLkVxdWFsU2lnbiA9IDE4NztcclxuS2V5cy5Db21tYSA9IDE4ODtcclxuS2V5cy5EYXNoID0gMTg5O1xyXG5LZXlzLlBlcmlvZCA9IDE5MDtcclxuS2V5cy5Gb3J3YXJkU2xhc2ggPSAxOTE7XHJcbktleXMuR3JhdmVBY2NlbnQgPSAxOTI7XHJcbktleXMuT3BlbkJyYWNrZXQgPSAyMTk7XHJcbktleXMuQmFja1NsYXNoID0gMjIwO1xyXG5LZXlzLkNsb3NlQnJha2V0ID0gMjIxO1xyXG5LZXlzLlNpbmdsZVF1b3RlID0gMjIyO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2lucHV0L2tleXMuanMiXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFHQTtBQUNBO0FBREE7QUFBQTtBQUFBO0FBQ0E7QUFHQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 52 */
/* exports provided: default */
/* exports used: default */
/*!******************************!*\
  !*** ./src/math/boundary.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__vector2__ = __webpack_require__(/*! ./vector2 */ 5);\n\n\n/*\r\n Boundary Class\r\n */\nclass Boundary {\n  //#region Constructors\n\n  /**\r\n     * Boundary structure\r\n     * @param {Vector2} topLeft\r\n     * @param {Vector2} topRight\r\n     * @param {Vector2} bottomRight\r\n     * @param {Vector2} bottomLeft\r\n     * @constructor\r\n     */\n  constructor(topLeft, topRight, bottomRight, bottomLeft) {\n    // public properties:\n    this.topLeft = topLeft || new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */]();\n    this.topRight = topRight || new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */]();\n    this.bottomRight = bottomRight || new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */]();\n    this.bottomLeft = bottomLeft || new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */]();\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static getMinMax(boundary, norm) {\n    let probeA = boundary.topRight.dot(norm);\n    let probeB = boundary.bottomRight.dot(norm);\n    let probeC = boundary.bottomLeft.dot(norm);\n    let probeD = boundary.topLeft.dot(norm);\n\n    return {\n      max: Math.max(probeA, probeB, probeC, probeD),\n      min: Math.min(probeA, probeB, probeC, probeD)\n    };\n  }\n\n  /**\r\n     * Tests if two boundaries are overlapping each other\r\n     * @param {Boundary} boundaryA\r\n     * @param {Boundary} boundaryB\r\n     * @returns {boolean} whether the boundaries overlap\r\n     */\n  static overlap(boundaryA, boundaryB) {\n    // the following collision detection is based\n    // on the separating axis theorem:\n    // eslint-disable-next-line\n    // http://www.gamedev.net/page/resources/_/technical/game-programming/2d-rotated-rectangle-collision-r2604\n    let normA = boundaryA.getNormals();\n    let normB = boundaryB.getNormals();\n\n    let p1, p2, normNode, norm;\n    for (let i = 0; i < 4; i++) {\n      normNode = i >= 2 ? normB : normA;\n      norm = i % 2 == 0 ? normNode.bottom : normNode.right;\n      p1 = Boundary.getMinMax(boundaryA, norm);\n      p2 = Boundary.getMinMax(boundaryB, norm);\n\n      if (p1.max < p2.min || p2.max < p1.min) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\r\n     * Creates a boundary object based on the given \r\n     * vector and adds the specified bulk dimension\r\n     * @param {Vector2} vec\r\n     * @param bulk\r\n     * @returns {Boundary} a boundary based on the given vector and bulk\r\n     */\n  static fromVector2(vec, bulk) {\n    let halfBulk = bulk / 2.0;\n    return new Boundary(new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */](vec.x - halfBulk, vec.y - halfBulk), new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */](vec.x + halfBulk, vec.y - halfBulk), new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */](vec.x + halfBulk, vec.y + halfBulk), new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */](vec.x - halfBulk, vec.y + halfBulk));\n  }\n\n  //#endregion\n\n  /**\r\n  * Returns all vertices in an array\r\n  * @returns {Array.<{topLeft: Vector2, topRight: \r\n              Vector2, bottomRight: Vector2, bottomLeft: Vector2}>}\r\n  */\n  getVertices() {\n    return [this.topLeft, this.topRight, this.bottomRight, this.bottomLeft];\n  }\n\n  /**\r\n     * Calculate the normals of each boundary side and \r\n     * returns a object mapped with the values of each side\r\n     * @returns {{top: Vector2, right: Vector2, bottom: Vector2, left: Vector2}}\r\n     */\n  getNormals() {\n    return {\n      top: new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */](this.topRight.x - this.topLeft.x, this.topRight.y - this.topLeft.y).normalLeft(),\n      right: new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */](this.bottomRight.x - this.topRight.x, this.bottomRight.y - this.topRight.y).normalLeft(),\n      bottom: new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */](this.bottomLeft.x - this.bottomRight.x, this.bottomLeft.y - this.bottomRight.y).normalLeft(),\n      left: new __WEBPACK_IMPORTED_MODULE_0__vector2__[\"a\" /* default */](this.topLeft.x - this.bottomLeft.x, this.topLeft.y - this.bottomLeft.y).normalLeft()\n    };\n  }\n\n  /**\r\n     * Tests if the boundary is overlapping another\r\n     * @param other\r\n     * @returns {boolean}\r\n     */\n  overlapsWith(other) {\n    return Boundary.overlap(this, other);\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Boundary;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdGgvYm91bmRhcnkuanM/N2RkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgVmVjdG9yMiBmcm9tIFwiLi92ZWN0b3IyXCI7XHJcblxyXG4vKlxyXG4gQm91bmRhcnkgQ2xhc3NcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJvdW5kYXJ5IHtcclxuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXHJcblxyXG4gIC8qKlxyXG4gICAgICogQm91bmRhcnkgc3RydWN0dXJlXHJcbiAgICAgKiBAcGFyYW0ge1ZlY3RvcjJ9IHRvcExlZnRcclxuICAgICAqIEBwYXJhbSB7VmVjdG9yMn0gdG9wUmlnaHRcclxuICAgICAqIEBwYXJhbSB7VmVjdG9yMn0gYm90dG9tUmlnaHRcclxuICAgICAqIEBwYXJhbSB7VmVjdG9yMn0gYm90dG9tTGVmdFxyXG4gICAgICogQGNvbnN0cnVjdG9yXHJcbiAgICAgKi9cclxuICBjb25zdHJ1Y3Rvcih0b3BMZWZ0LCB0b3BSaWdodCwgYm90dG9tUmlnaHQsIGJvdHRvbUxlZnQpIHtcclxuICAgIC8vIHB1YmxpYyBwcm9wZXJ0aWVzOlxyXG4gICAgdGhpcy50b3BMZWZ0ID0gdG9wTGVmdCB8fCBuZXcgVmVjdG9yMigpO1xyXG4gICAgdGhpcy50b3BSaWdodCA9IHRvcFJpZ2h0IHx8IG5ldyBWZWN0b3IyKCk7XHJcbiAgICB0aGlzLmJvdHRvbVJpZ2h0ID0gYm90dG9tUmlnaHQgfHwgbmV3IFZlY3RvcjIoKTtcclxuICAgIHRoaXMuYm90dG9tTGVmdCA9IGJvdHRvbUxlZnQgfHwgbmV3IFZlY3RvcjIoKTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNyZWdpb24gTWV0aG9kc1xyXG5cclxuICAvLyNyZWdpb24gU3RhdGljIE1ldGhvZHNcclxuXHJcbiAgc3RhdGljIGdldE1pbk1heChib3VuZGFyeSwgbm9ybSkge1xyXG4gICAgbGV0IHByb2JlQSA9IGJvdW5kYXJ5LnRvcFJpZ2h0LmRvdChub3JtKTtcclxuICAgIGxldCBwcm9iZUIgPSBib3VuZGFyeS5ib3R0b21SaWdodC5kb3Qobm9ybSk7XHJcbiAgICBsZXQgcHJvYmVDID0gYm91bmRhcnkuYm90dG9tTGVmdC5kb3Qobm9ybSk7XHJcbiAgICBsZXQgcHJvYmVEID0gYm91bmRhcnkudG9wTGVmdC5kb3Qobm9ybSk7XHJcblxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbWF4OiBNYXRoLm1heChwcm9iZUEsIHByb2JlQiwgcHJvYmVDLCBwcm9iZUQpLFxyXG4gICAgICBtaW46IE1hdGgubWluKHByb2JlQSwgcHJvYmVCLCBwcm9iZUMsIHByb2JlRClcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIFRlc3RzIGlmIHR3byBib3VuZGFyaWVzIGFyZSBvdmVybGFwcGluZyBlYWNoIG90aGVyXHJcbiAgICAgKiBAcGFyYW0ge0JvdW5kYXJ5fSBib3VuZGFyeUFcclxuICAgICAqIEBwYXJhbSB7Qm91bmRhcnl9IGJvdW5kYXJ5QlxyXG4gICAgICogQHJldHVybnMge2Jvb2xlYW59IHdoZXRoZXIgdGhlIGJvdW5kYXJpZXMgb3ZlcmxhcFxyXG4gICAgICovXHJcbiAgc3RhdGljIG92ZXJsYXAoYm91bmRhcnlBLCBib3VuZGFyeUIpIHtcclxuICAgIC8vIHRoZSBmb2xsb3dpbmcgY29sbGlzaW9uIGRldGVjdGlvbiBpcyBiYXNlZFxyXG4gICAgLy8gb24gdGhlIHNlcGFyYXRpbmcgYXhpcyB0aGVvcmVtOlxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXHJcbiAgICAvLyBodHRwOi8vd3d3LmdhbWVkZXYubmV0L3BhZ2UvcmVzb3VyY2VzL18vdGVjaG5pY2FsL2dhbWUtcHJvZ3JhbW1pbmcvMmQtcm90YXRlZC1yZWN0YW5nbGUtY29sbGlzaW9uLXIyNjA0XHJcbiAgICBsZXQgbm9ybUEgPSBib3VuZGFyeUEuZ2V0Tm9ybWFscygpO1xyXG4gICAgbGV0IG5vcm1CID0gYm91bmRhcnlCLmdldE5vcm1hbHMoKTtcclxuXHJcbiAgICBsZXQgcDEsIHAyLCBub3JtTm9kZSwgbm9ybTtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDsgaSsrKSB7XHJcbiAgICAgIG5vcm1Ob2RlID0gaSA+PSAyID8gbm9ybUIgOiBub3JtQTtcclxuICAgICAgbm9ybSA9IGkgJSAyID09IDAgPyBub3JtTm9kZS5ib3R0b20gOiBub3JtTm9kZS5yaWdodDtcclxuICAgICAgcDEgPSBCb3VuZGFyeS5nZXRNaW5NYXgoYm91bmRhcnlBLCBub3JtKTtcclxuICAgICAgcDIgPSBCb3VuZGFyeS5nZXRNaW5NYXgoYm91bmRhcnlCLCBub3JtKTtcclxuXHJcbiAgICAgIGlmIChwMS5tYXggPCBwMi5taW4gfHwgcDIubWF4IDwgcDEubWluKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIENyZWF0ZXMgYSBib3VuZGFyeSBvYmplY3QgYmFzZWQgb24gdGhlIGdpdmVuIFxyXG4gICAgICogdmVjdG9yIGFuZCBhZGRzIHRoZSBzcGVjaWZpZWQgYnVsayBkaW1lbnNpb25cclxuICAgICAqIEBwYXJhbSB7VmVjdG9yMn0gdmVjXHJcbiAgICAgKiBAcGFyYW0gYnVsa1xyXG4gICAgICogQHJldHVybnMge0JvdW5kYXJ5fSBhIGJvdW5kYXJ5IGJhc2VkIG9uIHRoZSBnaXZlbiB2ZWN0b3IgYW5kIGJ1bGtcclxuICAgICAqL1xyXG4gIHN0YXRpYyBmcm9tVmVjdG9yMih2ZWMsIGJ1bGspIHtcclxuICAgIGxldCBoYWxmQnVsayA9IGJ1bGsgLyAyLjA7XHJcbiAgICByZXR1cm4gbmV3IEJvdW5kYXJ5KFxyXG4gICAgICBuZXcgVmVjdG9yMih2ZWMueCAtIGhhbGZCdWxrLCB2ZWMueSAtIGhhbGZCdWxrKSxcclxuICAgICAgbmV3IFZlY3RvcjIodmVjLnggKyBoYWxmQnVsaywgdmVjLnkgLSBoYWxmQnVsayksXHJcbiAgICAgIG5ldyBWZWN0b3IyKHZlYy54ICsgaGFsZkJ1bGssIHZlYy55ICsgaGFsZkJ1bGspLFxyXG4gICAgICBuZXcgVmVjdG9yMih2ZWMueCAtIGhhbGZCdWxrLCB2ZWMueSArIGhhbGZCdWxrKVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvKipcclxuICAqIFJldHVybnMgYWxsIHZlcnRpY2VzIGluIGFuIGFycmF5XHJcbiAgKiBAcmV0dXJucyB7QXJyYXkuPHt0b3BMZWZ0OiBWZWN0b3IyLCB0b3BSaWdodDogXHJcbiAgICAgICAgICAgICAgVmVjdG9yMiwgYm90dG9tUmlnaHQ6IFZlY3RvcjIsIGJvdHRvbUxlZnQ6IFZlY3RvcjJ9Pn1cclxuICAqL1xyXG4gIGdldFZlcnRpY2VzKCkge1xyXG4gICAgcmV0dXJuIFt0aGlzLnRvcExlZnQsIHRoaXMudG9wUmlnaHQsIHRoaXMuYm90dG9tUmlnaHQsIHRoaXMuYm90dG9tTGVmdF07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIENhbGN1bGF0ZSB0aGUgbm9ybWFscyBvZiBlYWNoIGJvdW5kYXJ5IHNpZGUgYW5kIFxyXG4gICAgICogcmV0dXJucyBhIG9iamVjdCBtYXBwZWQgd2l0aCB0aGUgdmFsdWVzIG9mIGVhY2ggc2lkZVxyXG4gICAgICogQHJldHVybnMge3t0b3A6IFZlY3RvcjIsIHJpZ2h0OiBWZWN0b3IyLCBib3R0b206IFZlY3RvcjIsIGxlZnQ6IFZlY3RvcjJ9fVxyXG4gICAgICovXHJcbiAgZ2V0Tm9ybWFscygpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHRvcDogbmV3IFZlY3RvcjIodGhpcy50b3BSaWdodC54IC0gdGhpcy50b3BMZWZ0LngsIHRoaXMudG9wUmlnaHQueSAtIHRoaXMudG9wTGVmdC55KS5ub3JtYWxMZWZ0KCksXHJcbiAgICAgIHJpZ2h0OiBuZXcgVmVjdG9yMih0aGlzLmJvdHRvbVJpZ2h0LnggLSB0aGlzLnRvcFJpZ2h0LngsIHRoaXMuYm90dG9tUmlnaHQueSAtIHRoaXMudG9wUmlnaHQueSkubm9ybWFsTGVmdCgpLFxyXG4gICAgICBib3R0b206IG5ldyBWZWN0b3IyKHRoaXMuYm90dG9tTGVmdC54IC0gdGhpcy5ib3R0b21SaWdodC54LCB0aGlzLmJvdHRvbUxlZnQueSAtIHRoaXMuYm90dG9tUmlnaHQueSkubm9ybWFsTGVmdCgpLFxyXG4gICAgICBsZWZ0OiBuZXcgVmVjdG9yMih0aGlzLnRvcExlZnQueCAtIHRoaXMuYm90dG9tTGVmdC54LCB0aGlzLnRvcExlZnQueSAtIHRoaXMuYm90dG9tTGVmdC55KS5ub3JtYWxMZWZ0KClcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIFRlc3RzIGlmIHRoZSBib3VuZGFyeSBpcyBvdmVybGFwcGluZyBhbm90aGVyXHJcbiAgICAgKiBAcGFyYW0gb3RoZXJcclxuICAgICAqIEByZXR1cm5zIHtib29sZWFufVxyXG4gICAgICovXHJcbiAgb3ZlcmxhcHNXaXRoKG90aGVyKSB7XHJcbiAgICByZXR1cm4gQm91bmRhcnkub3ZlcmxhcCh0aGlzLCBvdGhlcik7XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL21hdGgvYm91bmRhcnkuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFKQTtBQU1BO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBckhBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 53 */
/* exports provided: default */
/* exports used: default */
/*!**************************************!*\
  !*** ./src/shaders/shaderManager.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n\n\n/**\r\n * ShaderManager class\r\n */\nclass ShaderManager {\n  //#region Constructors\n\n  /**\r\n     * @param game\r\n     * @constructor\r\n     */\n  constructor(game) {\n    // private variables\n    this._game = game;\n    this._gl = this._game.getRenderContext().getContext();\n    this._activeShader = null;\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  unload() {}\n\n  useShader(shader) {\n    // is this the same shader that is being used?\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_utils__[\"a\" /* isObjectAssigned */])(this._activeShader) || this._activeShader.getUID() !== shader.getUID()) {\n      this._activeShader = shader;\n      this._gl.useProgram(shader.getProgram());\n    }\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ShaderManager;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NoYWRlcnMvc2hhZGVyTWFuYWdlci5qcz8zZmU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzT2JqZWN0QXNzaWduZWQgfSBmcm9tIFwiY29tbW9uL3V0aWxzXCI7XHJcblxyXG4vKipcclxuICogU2hhZGVyTWFuYWdlciBjbGFzc1xyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2hhZGVyTWFuYWdlciB7XHJcbiAgLy8jcmVnaW9uIENvbnN0cnVjdG9yc1xyXG5cclxuICAvKipcclxuICAgICAqIEBwYXJhbSBnYW1lXHJcbiAgICAgKiBAY29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gIGNvbnN0cnVjdG9yKGdhbWUpIHtcclxuICAgIC8vIHByaXZhdGUgdmFyaWFibGVzXHJcbiAgICB0aGlzLl9nYW1lID0gZ2FtZTtcclxuICAgIHRoaXMuX2dsID0gdGhpcy5fZ2FtZS5nZXRSZW5kZXJDb250ZXh0KCkuZ2V0Q29udGV4dCgpO1xyXG4gICAgdGhpcy5fYWN0aXZlU2hhZGVyID0gbnVsbDtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNyZWdpb24gTWV0aG9kc1xyXG5cclxuICB1bmxvYWQoKSB7fVxyXG5cclxuICB1c2VTaGFkZXIoc2hhZGVyKSB7XHJcbiAgICAvLyBpcyB0aGlzIHRoZSBzYW1lIHNoYWRlciB0aGF0IGlzIGJlaW5nIHVzZWQ/XHJcbiAgICBpZiAoIWlzT2JqZWN0QXNzaWduZWQodGhpcy5fYWN0aXZlU2hhZGVyKSB8fCB0aGlzLl9hY3RpdmVTaGFkZXIuZ2V0VUlEKCkgIT09IHNoYWRlci5nZXRVSUQoKSkge1xyXG4gICAgICB0aGlzLl9hY3RpdmVTaGFkZXIgPSBzaGFkZXI7XHJcbiAgICAgIHRoaXMuX2dsLnVzZVByb2dyYW0oc2hhZGVyLmdldFByb2dyYW0oKSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3NoYWRlcnMvc2hhZGVyTWFuYWdlci5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE1QkE7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 54 */
/* exports provided: default */
/* exports used: default */
/*!******************************************!*\
  !*** ./src/shaders/textShader.shader.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shader__ = __webpack_require__(/*! ./shader */ 17);\n/**\r\n * Created by Luis on 16/12/2016.\r\n */\n\n\n\n/**\r\n * TextShader Class\r\n */\nclass TextShader extends __WEBPACK_IMPORTED_MODULE_0__shader__[\"a\" /* default */] {\n  static get shaderContent() {\n    return {\n      vertex: [\"attribute vec2 aPos;\", \"attribute vec2 aTexCoord;\", \"uniform mat4 uMatrix;\", \"uniform mat4 uTransform;\", \"uniform vec2 uTexSize;\", \"varying vec2 vTexCoord;\", \"void main() {\", \"   gl_Position = uMatrix * uTransform * vec4(aPos, 0, 1);\", \"   vTexCoord = aTexCoord / uTexSize;\", \"}\"].join(\"\\n\"),\n      fragment: [\"#ifdef GL_ES\", \"   precision mediump float;\", \"#endif\", \"uniform sampler2D uTexture;\", \"uniform vec4 uColor;\", \"uniform float uGamma;\", \"uniform float uOutlineDistance;\", \"uniform vec4 uOutlineColor;\", \"uniform vec4 uDropShadowColor;\", \"uniform float uDropShadowSmoothing;\", \"uniform vec2 uDropShadowOffset;\", \"uniform float uDebug;\", \"uniform float uDropShadow;\", \"uniform float uOutline;\", \"varying vec2 vTexCoord;\", \"void main() {\", \"   float distance = texture2D(uTexture, vTexCoord).a;\", \"   vec4 finalColor = uColor;\", \"   if (uDebug > 0.0) {\", \"       gl_FragColor = vec4(distance, distance, distance, 1);\", \"       return;\", \"   }\",\n      // outline effect\n      \"   if (uOutline > 0.0) {\", \"       float outlineFactor = \" + \"smoothstep(0.5 - uGamma, 0.5 + uGamma, distance);\", \"       vec4 color = mix(uOutlineColor, uColor, outlineFactor);\", \"       float alpha = smoothstep(uOutlineDistance - uGamma, \" + \"uOutlineDistance + uGamma, distance);\", \"       finalColor = vec4(color.rgb, color.a * alpha);\", \"   } else {\", \"       float alpha = \" + \"smoothstep(0.5 - uGamma, 0.5 + uGamma, distance);\", \"       finalColor = vec4(uColor.rgb, uColor.a * alpha);\", \"   }\",\n      // drop shadow effect\n      //'float alpha = smoothstep(0.5 - uGamma, 0.5 + uGamma, distance);',\n      //'     vec4 text = vec4(uColor.rgb, uColor.a * alpha);',\n      \"   if (uDropShadow > 0.0) {\", \"       float shadowDistance = \" + \"texture2D(uTexture, vTexCoord - uDropShadowOffset).a;\", \"       float shadowAlpha = smoothstep(0.5 - uDropShadowSmoothing, \" + \"0.5 + uDropShadowSmoothing, shadowDistance);\", \"       vec4 shadow = \" + \"vec4(uDropShadowColor.rgb, uDropShadowColor.a * shadowAlpha);\",\n      //      inner effect is the other way around... text, shadow\n      \"       gl_FragColor = mix(shadow, finalColor, finalColor.a);\", \"       return;\", \"   }\", \"   gl_FragColor = finalColor;\", \"}\"].join(\"\\n\"),\n      uniforms: {\n        uMatrix: { type: \"mat4\", value: new Float32Array(16) },\n        uTransform: { type: \"mat4\", value: new Float32Array(16) },\n        uTexture: { type: \"tex\", value: 0 },\n        uTexSize: { type: \"1i\", value: 24 },\n        uColor: [1.0, 0.0, 0.0, 1.0],\n        uOutlineColor: [1.0, 1.0, 1.0, 1.0],\n        uDropShadowColor: [0.0, 0.0, 0.0, 1.0],\n        uDropShadowSmoothing: { type: \"1i\", value: 0 },\n        uDropShadowOffset: [0.0, 0.0],\n        uOutlineDistance: { type: \"1i\", value: 0 },\n        uGamma: { type: \"1i\", value: 0 },\n        uDebug: { type: \"1i\", value: 1 },\n        uDropShadow: { type: \"1i\", value: 1 },\n        uOutline: { type: \"1i\", value: 1 }\n      },\n      attributes: {\n        aPos: 0,\n        aTexCoord: 0\n      }\n    };\n  }\n\n  constructor() {\n    let content = TextShader.shaderContent;\n\n    super(content.vertex, content.fragment, content.uniforms, content.attributes);\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = TextShader;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NoYWRlcnMvdGV4dFNoYWRlci5zaGFkZXIuanM/MDU1NSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlZCBieSBMdWlzIG9uIDE2LzEyLzIwMTYuXHJcbiAqL1xyXG5cclxuaW1wb3J0IFNoYWRlciBmcm9tIFwiLi9zaGFkZXJcIjtcclxuXHJcbi8qKlxyXG4gKiBUZXh0U2hhZGVyIENsYXNzXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZXh0U2hhZGVyIGV4dGVuZHMgU2hhZGVyIHtcclxuICBzdGF0aWMgZ2V0IHNoYWRlckNvbnRlbnQoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB2ZXJ0ZXg6IFtcclxuICAgICAgICBcImF0dHJpYnV0ZSB2ZWMyIGFQb3M7XCIsXHJcbiAgICAgICAgXCJhdHRyaWJ1dGUgdmVjMiBhVGV4Q29vcmQ7XCIsXHJcblxyXG4gICAgICAgIFwidW5pZm9ybSBtYXQ0IHVNYXRyaXg7XCIsXHJcbiAgICAgICAgXCJ1bmlmb3JtIG1hdDQgdVRyYW5zZm9ybTtcIixcclxuICAgICAgICBcInVuaWZvcm0gdmVjMiB1VGV4U2l6ZTtcIixcclxuXHJcbiAgICAgICAgXCJ2YXJ5aW5nIHZlYzIgdlRleENvb3JkO1wiLFxyXG5cclxuICAgICAgICBcInZvaWQgbWFpbigpIHtcIixcclxuICAgICAgICBcIiAgIGdsX1Bvc2l0aW9uID0gdU1hdHJpeCAqIHVUcmFuc2Zvcm0gKiB2ZWM0KGFQb3MsIDAsIDEpO1wiLFxyXG4gICAgICAgIFwiICAgdlRleENvb3JkID0gYVRleENvb3JkIC8gdVRleFNpemU7XCIsXHJcbiAgICAgICAgXCJ9XCJcclxuICAgICAgXS5qb2luKFwiXFxuXCIpLFxyXG4gICAgICBmcmFnbWVudDogW1xyXG4gICAgICAgIFwiI2lmZGVmIEdMX0VTXCIsXHJcbiAgICAgICAgXCIgICBwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcIixcclxuICAgICAgICBcIiNlbmRpZlwiLFxyXG5cclxuICAgICAgICBcInVuaWZvcm0gc2FtcGxlcjJEIHVUZXh0dXJlO1wiLFxyXG4gICAgICAgIFwidW5pZm9ybSB2ZWM0IHVDb2xvcjtcIixcclxuICAgICAgICBcInVuaWZvcm0gZmxvYXQgdUdhbW1hO1wiLFxyXG4gICAgICAgIFwidW5pZm9ybSBmbG9hdCB1T3V0bGluZURpc3RhbmNlO1wiLFxyXG4gICAgICAgIFwidW5pZm9ybSB2ZWM0IHVPdXRsaW5lQ29sb3I7XCIsXHJcblxyXG4gICAgICAgIFwidW5pZm9ybSB2ZWM0IHVEcm9wU2hhZG93Q29sb3I7XCIsXHJcbiAgICAgICAgXCJ1bmlmb3JtIGZsb2F0IHVEcm9wU2hhZG93U21vb3RoaW5nO1wiLFxyXG4gICAgICAgIFwidW5pZm9ybSB2ZWMyIHVEcm9wU2hhZG93T2Zmc2V0O1wiLFxyXG5cclxuICAgICAgICBcInVuaWZvcm0gZmxvYXQgdURlYnVnO1wiLFxyXG4gICAgICAgIFwidW5pZm9ybSBmbG9hdCB1RHJvcFNoYWRvdztcIixcclxuICAgICAgICBcInVuaWZvcm0gZmxvYXQgdU91dGxpbmU7XCIsXHJcblxyXG4gICAgICAgIFwidmFyeWluZyB2ZWMyIHZUZXhDb29yZDtcIixcclxuXHJcbiAgICAgICAgXCJ2b2lkIG1haW4oKSB7XCIsXHJcbiAgICAgICAgXCIgICBmbG9hdCBkaXN0YW5jZSA9IHRleHR1cmUyRCh1VGV4dHVyZSwgdlRleENvb3JkKS5hO1wiLFxyXG4gICAgICAgIFwiICAgdmVjNCBmaW5hbENvbG9yID0gdUNvbG9yO1wiLFxyXG4gICAgICAgIFwiICAgaWYgKHVEZWJ1ZyA+IDAuMCkge1wiLFxyXG4gICAgICAgIFwiICAgICAgIGdsX0ZyYWdDb2xvciA9IHZlYzQoZGlzdGFuY2UsIGRpc3RhbmNlLCBkaXN0YW5jZSwgMSk7XCIsXHJcbiAgICAgICAgXCIgICAgICAgcmV0dXJuO1wiLFxyXG4gICAgICAgIFwiICAgfVwiLFxyXG4gICAgICAgIC8vIG91dGxpbmUgZWZmZWN0XHJcbiAgICAgICAgXCIgICBpZiAodU91dGxpbmUgPiAwLjApIHtcIixcclxuICAgICAgICBcIiAgICAgICBmbG9hdCBvdXRsaW5lRmFjdG9yID0gXCIgKyBcInNtb290aHN0ZXAoMC41IC0gdUdhbW1hLCAwLjUgKyB1R2FtbWEsIGRpc3RhbmNlKTtcIixcclxuICAgICAgICBcIiAgICAgICB2ZWM0IGNvbG9yID0gbWl4KHVPdXRsaW5lQ29sb3IsIHVDb2xvciwgb3V0bGluZUZhY3Rvcik7XCIsXHJcbiAgICAgICAgXCIgICAgICAgZmxvYXQgYWxwaGEgPSBzbW9vdGhzdGVwKHVPdXRsaW5lRGlzdGFuY2UgLSB1R2FtbWEsIFwiICsgXCJ1T3V0bGluZURpc3RhbmNlICsgdUdhbW1hLCBkaXN0YW5jZSk7XCIsXHJcbiAgICAgICAgXCIgICAgICAgZmluYWxDb2xvciA9IHZlYzQoY29sb3IucmdiLCBjb2xvci5hICogYWxwaGEpO1wiLFxyXG4gICAgICAgIFwiICAgfSBlbHNlIHtcIixcclxuICAgICAgICBcIiAgICAgICBmbG9hdCBhbHBoYSA9IFwiICsgXCJzbW9vdGhzdGVwKDAuNSAtIHVHYW1tYSwgMC41ICsgdUdhbW1hLCBkaXN0YW5jZSk7XCIsXHJcbiAgICAgICAgXCIgICAgICAgZmluYWxDb2xvciA9IHZlYzQodUNvbG9yLnJnYiwgdUNvbG9yLmEgKiBhbHBoYSk7XCIsXHJcbiAgICAgICAgXCIgICB9XCIsXHJcbiAgICAgICAgLy8gZHJvcCBzaGFkb3cgZWZmZWN0XHJcbiAgICAgICAgLy8nZmxvYXQgYWxwaGEgPSBzbW9vdGhzdGVwKDAuNSAtIHVHYW1tYSwgMC41ICsgdUdhbW1hLCBkaXN0YW5jZSk7JyxcclxuICAgICAgICAvLycgICAgIHZlYzQgdGV4dCA9IHZlYzQodUNvbG9yLnJnYiwgdUNvbG9yLmEgKiBhbHBoYSk7JyxcclxuICAgICAgICBcIiAgIGlmICh1RHJvcFNoYWRvdyA+IDAuMCkge1wiLFxyXG4gICAgICAgIFwiICAgICAgIGZsb2F0IHNoYWRvd0Rpc3RhbmNlID0gXCIgKyBcInRleHR1cmUyRCh1VGV4dHVyZSwgdlRleENvb3JkIC0gdURyb3BTaGFkb3dPZmZzZXQpLmE7XCIsXHJcbiAgICAgICAgXCIgICAgICAgZmxvYXQgc2hhZG93QWxwaGEgPSBzbW9vdGhzdGVwKDAuNSAtIHVEcm9wU2hhZG93U21vb3RoaW5nLCBcIiArXHJcbiAgICAgICAgICBcIjAuNSArIHVEcm9wU2hhZG93U21vb3RoaW5nLCBzaGFkb3dEaXN0YW5jZSk7XCIsXHJcbiAgICAgICAgXCIgICAgICAgdmVjNCBzaGFkb3cgPSBcIiArIFwidmVjNCh1RHJvcFNoYWRvd0NvbG9yLnJnYiwgdURyb3BTaGFkb3dDb2xvci5hICogc2hhZG93QWxwaGEpO1wiLFxyXG4gICAgICAgIC8vICAgICAgaW5uZXIgZWZmZWN0IGlzIHRoZSBvdGhlciB3YXkgYXJvdW5kLi4uIHRleHQsIHNoYWRvd1xyXG4gICAgICAgIFwiICAgICAgIGdsX0ZyYWdDb2xvciA9IG1peChzaGFkb3csIGZpbmFsQ29sb3IsIGZpbmFsQ29sb3IuYSk7XCIsXHJcbiAgICAgICAgXCIgICAgICAgcmV0dXJuO1wiLFxyXG4gICAgICAgIFwiICAgfVwiLFxyXG4gICAgICAgIFwiICAgZ2xfRnJhZ0NvbG9yID0gZmluYWxDb2xvcjtcIixcclxuICAgICAgICBcIn1cIlxyXG4gICAgICBdLmpvaW4oXCJcXG5cIiksXHJcbiAgICAgIHVuaWZvcm1zOiB7XHJcbiAgICAgICAgdU1hdHJpeDogeyB0eXBlOiBcIm1hdDRcIiwgdmFsdWU6IG5ldyBGbG9hdDMyQXJyYXkoMTYpIH0sXHJcbiAgICAgICAgdVRyYW5zZm9ybTogeyB0eXBlOiBcIm1hdDRcIiwgdmFsdWU6IG5ldyBGbG9hdDMyQXJyYXkoMTYpIH0sXHJcbiAgICAgICAgdVRleHR1cmU6IHsgdHlwZTogXCJ0ZXhcIiwgdmFsdWU6IDAgfSxcclxuICAgICAgICB1VGV4U2l6ZTogeyB0eXBlOiBcIjFpXCIsIHZhbHVlOiAyNCB9LFxyXG4gICAgICAgIHVDb2xvcjogWzEuMCwgMC4wLCAwLjAsIDEuMF0sXHJcbiAgICAgICAgdU91dGxpbmVDb2xvcjogWzEuMCwgMS4wLCAxLjAsIDEuMF0sXHJcbiAgICAgICAgdURyb3BTaGFkb3dDb2xvcjogWzAuMCwgMC4wLCAwLjAsIDEuMF0sXHJcbiAgICAgICAgdURyb3BTaGFkb3dTbW9vdGhpbmc6IHsgdHlwZTogXCIxaVwiLCB2YWx1ZTogMCB9LFxyXG4gICAgICAgIHVEcm9wU2hhZG93T2Zmc2V0OiBbMC4wLCAwLjBdLFxyXG4gICAgICAgIHVPdXRsaW5lRGlzdGFuY2U6IHsgdHlwZTogXCIxaVwiLCB2YWx1ZTogMCB9LFxyXG4gICAgICAgIHVHYW1tYTogeyB0eXBlOiBcIjFpXCIsIHZhbHVlOiAwIH0sXHJcbiAgICAgICAgdURlYnVnOiB7IHR5cGU6IFwiMWlcIiwgdmFsdWU6IDEgfSxcclxuICAgICAgICB1RHJvcFNoYWRvdzogeyB0eXBlOiBcIjFpXCIsIHZhbHVlOiAxIH0sXHJcbiAgICAgICAgdU91dGxpbmU6IHsgdHlwZTogXCIxaVwiLCB2YWx1ZTogMSB9XHJcbiAgICAgIH0sXHJcbiAgICAgIGF0dHJpYnV0ZXM6IHtcclxuICAgICAgICBhUG9zOiAwLFxyXG4gICAgICAgIGFUZXhDb29yZDogMFxyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgY29uc3RydWN0b3IoKSB7XHJcbiAgICBsZXQgY29udGVudCA9IFRleHRTaGFkZXIuc2hhZGVyQ29udGVudDtcclxuXHJcbiAgICBzdXBlcihjb250ZW50LnZlcnRleCwgY29udGVudC5mcmFnbWVudCwgY29udGVudC51bmlmb3JtcywgY29udGVudC5hdHRyaWJ1dGVzKTtcclxuICB9XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9zaGFkZXJzL3RleHRTaGFkZXIuc2hhZGVyLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBOzs7O0FBSUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQWVBO0FBNEJBO0FBQ0E7QUFTQTtBQUNBO0FBQ0E7QUFDQTtBQUtBO0FBQ0E7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFkQTtBQWdCQTtBQUNBO0FBQ0E7QUFGQTtBQXJGQTtBQTBGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWxHQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 55 */
/* exports provided: default */
/* exports used: default */
/*!*********************************************!*\
  !*** ./src/shaders/textureShader.shader.js ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shader__ = __webpack_require__(/*! ./shader */ 17);\n\n\n/**\n * TextureShader Class\n */\nclass TextureShader extends __WEBPACK_IMPORTED_MODULE_0__shader__[\"a\" /* default */] {\n  static get shaderContent() {\n    return {\n      vertex: [\"precision mediump float;\", \"attribute vec2 aVertexPosition;\", \"attribute vec2 aTextureCoord;\", \"attribute vec4 aColor;\", \"uniform mat4 uMatrix;\", \"varying vec2 vTextureCoord;\", \"void main(void) {\", \"   vTextureCoord = aTextureCoord;\", \"   gl_Position = uMatrix * vec4(aVertexPosition, 0.0, 1.0);\", \"}\"].join(\"\\n\"),\n      fragment: [\"precision mediump float;\", \"varying vec2 vTextureCoord;\", \"uniform sampler2D uSampler;\", \"uniform vec4 uColor;\", \"void main(void){\", \"   gl_FragColor = texture2D(uSampler, vTextureCoord) * uColor;\", \"}\"].join(\"\\n\"),\n      uniforms: {\n        uSampler: { type: \"tex\", value: 0 },\n        uMatrix: { type: \"mat4\", value: new Float32Array(16) },\n        uColor: [1.0, 1.0, 1.0, 1.0]\n      },\n      attributes: {\n        aVertexPosition: -1,\n        aTextureCoord: -1\n      }\n    };\n  }\n\n  constructor() {\n    let content = TextureShader.shaderContent;\n\n    super(content.vertex, content.fragment, content.uniforms, content.attributes);\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = TextureShader;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NoYWRlcnMvdGV4dHVyZVNoYWRlci5zaGFkZXIuanM/NjdjZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU2hhZGVyIGZyb20gXCIuL3NoYWRlclwiO1xuXG4vKipcbiAqIFRleHR1cmVTaGFkZXIgQ2xhc3NcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGV4dHVyZVNoYWRlciBleHRlbmRzIFNoYWRlciB7XG4gIHN0YXRpYyBnZXQgc2hhZGVyQ29udGVudCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmVydGV4OiBbXG4gICAgICAgIFwicHJlY2lzaW9uIG1lZGl1bXAgZmxvYXQ7XCIsXG5cbiAgICAgICAgXCJhdHRyaWJ1dGUgdmVjMiBhVmVydGV4UG9zaXRpb247XCIsXG4gICAgICAgIFwiYXR0cmlidXRlIHZlYzIgYVRleHR1cmVDb29yZDtcIixcblxuICAgICAgICBcImF0dHJpYnV0ZSB2ZWM0IGFDb2xvcjtcIixcblxuICAgICAgICBcInVuaWZvcm0gbWF0NCB1TWF0cml4O1wiLFxuXG4gICAgICAgIFwidmFyeWluZyB2ZWMyIHZUZXh0dXJlQ29vcmQ7XCIsXG5cbiAgICAgICAgXCJ2b2lkIG1haW4odm9pZCkge1wiLFxuICAgICAgICBcIiAgIHZUZXh0dXJlQ29vcmQgPSBhVGV4dHVyZUNvb3JkO1wiLFxuICAgICAgICBcIiAgIGdsX1Bvc2l0aW9uID0gdU1hdHJpeCAqIHZlYzQoYVZlcnRleFBvc2l0aW9uLCAwLjAsIDEuMCk7XCIsXG4gICAgICAgIFwifVwiXG4gICAgICBdLmpvaW4oXCJcXG5cIiksXG4gICAgICBmcmFnbWVudDogW1xuICAgICAgICBcInByZWNpc2lvbiBtZWRpdW1wIGZsb2F0O1wiLFxuXG4gICAgICAgIFwidmFyeWluZyB2ZWMyIHZUZXh0dXJlQ29vcmQ7XCIsXG5cbiAgICAgICAgXCJ1bmlmb3JtIHNhbXBsZXIyRCB1U2FtcGxlcjtcIixcbiAgICAgICAgXCJ1bmlmb3JtIHZlYzQgdUNvbG9yO1wiLFxuXG4gICAgICAgIFwidm9pZCBtYWluKHZvaWQpe1wiLFxuICAgICAgICBcIiAgIGdsX0ZyYWdDb2xvciA9IHRleHR1cmUyRCh1U2FtcGxlciwgdlRleHR1cmVDb29yZCkgKiB1Q29sb3I7XCIsXG4gICAgICAgIFwifVwiXG4gICAgICBdLmpvaW4oXCJcXG5cIiksXG4gICAgICB1bmlmb3Jtczoge1xuICAgICAgICB1U2FtcGxlcjogeyB0eXBlOiBcInRleFwiLCB2YWx1ZTogMCB9LFxuICAgICAgICB1TWF0cml4OiB7IHR5cGU6IFwibWF0NFwiLCB2YWx1ZTogbmV3IEZsb2F0MzJBcnJheSgxNikgfSxcbiAgICAgICAgdUNvbG9yOiBbMS4wLCAxLjAsIDEuMCwgMS4wXVxuICAgICAgfSxcbiAgICAgIGF0dHJpYnV0ZXM6IHtcbiAgICAgICAgYVZlcnRleFBvc2l0aW9uOiAtMSxcbiAgICAgICAgYVRleHR1cmVDb29yZDogLTFcbiAgICAgIH1cbiAgICB9O1xuICB9XG5cbiAgY29uc3RydWN0b3IoKSB7XG4gICAgbGV0IGNvbnRlbnQgPSBUZXh0dXJlU2hhZGVyLnNoYWRlckNvbnRlbnQ7XG5cbiAgICBzdXBlcihjb250ZW50LnZlcnRleCwgY29udGVudC5mcmFnbWVudCwgY29udGVudC51bmlmb3JtcywgY29udGVudC5hdHRyaWJ1dGVzKTtcbiAgfVxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9zaGFkZXJzL3RleHR1cmVTaGFkZXIuc2hhZGVyLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFpQkE7QUFZQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBS0E7QUFDQTtBQUNBO0FBRkE7QUFuQ0E7QUF3Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFoREE7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 56 */
/* exports provided: default */
/* exports used: default */
/*!*************************************!*\
  !*** ./src/utility/bmFontParser.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bmFontParserAscii__ = __webpack_require__(/*! ./bmFontParserAscii */ 57);\n\n\n\n/**\r\n * BM Font Parser Utility Class\r\n * Based on load-bmfont package under MIT License:\r\n * see http://github.com/Jam3/load-bmfont/blob/master/LICENSE.md for details.\r\n */\nclass BMFontParser {\n  /**\r\n     *\r\n     * @param {FileContext} fileContext\r\n     */\n  static parse(fileContext) {\n    let result;\n    let contentType = fileContext.headers[\"content-type\"];\n\n    // no need to go further if content type isn't a string\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_utils__[\"b\" /* isString */])(contentType)) {\n      // TODO: throw new error\n      //return null;\n    }\n\n    let content = fileContext.content;\n\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_utils__[\"b\" /* isString */])(content) || content.trim().length === 0) {\n      return null;\n    }\n\n    if (/json/.test(contentType) || content.charAt(0) === \"{\") {\n      result = JSON.parse(content);\n    } else if (/xml/.test(contentType) || content.charAt(0) === \"<\") {\n      // TODO: parse xml bm font\n    } else {\n      result = __WEBPACK_IMPORTED_MODULE_1__bmFontParserAscii__[\"a\" /* default */].parseASCII(content);\n    }\n\n    return result;\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = BMFontParser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3V0aWxpdHkvYm1Gb250UGFyc2VyLmpzP2FmMTkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNTdHJpbmcgfSBmcm9tIFwiY29tbW9uL3V0aWxzXCI7XHJcbmltcG9ydCBCTUZvbnRQYXJzZXJBc2NpaSBmcm9tIFwiLi9ibUZvbnRQYXJzZXJBc2NpaVwiO1xyXG5cclxuLyoqXHJcbiAqIEJNIEZvbnQgUGFyc2VyIFV0aWxpdHkgQ2xhc3NcclxuICogQmFzZWQgb24gbG9hZC1ibWZvbnQgcGFja2FnZSB1bmRlciBNSVQgTGljZW5zZTpcclxuICogc2VlIGh0dHA6Ly9naXRodWIuY29tL0phbTMvbG9hZC1ibWZvbnQvYmxvYi9tYXN0ZXIvTElDRU5TRS5tZCBmb3IgZGV0YWlscy5cclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJNRm9udFBhcnNlciB7XHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtGaWxlQ29udGV4dH0gZmlsZUNvbnRleHRcclxuICAgICAqL1xyXG4gIHN0YXRpYyBwYXJzZShmaWxlQ29udGV4dCkge1xyXG4gICAgbGV0IHJlc3VsdDtcclxuICAgIGxldCBjb250ZW50VHlwZSA9IGZpbGVDb250ZXh0LmhlYWRlcnNbXCJjb250ZW50LXR5cGVcIl07XHJcblxyXG4gICAgLy8gbm8gbmVlZCB0byBnbyBmdXJ0aGVyIGlmIGNvbnRlbnQgdHlwZSBpc24ndCBhIHN0cmluZ1xyXG4gICAgaWYgKCFpc1N0cmluZyhjb250ZW50VHlwZSkpIHtcclxuICAgICAgLy8gVE9ETzogdGhyb3cgbmV3IGVycm9yXHJcbiAgICAgIC8vcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGNvbnRlbnQgPSBmaWxlQ29udGV4dC5jb250ZW50O1xyXG5cclxuICAgIGlmICghaXNTdHJpbmcoY29udGVudCkgfHwgY29udGVudC50cmltKCkubGVuZ3RoID09PSAwKSB7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICgvanNvbi8udGVzdChjb250ZW50VHlwZSkgfHwgY29udGVudC5jaGFyQXQoMCkgPT09IFwie1wiKSB7XHJcbiAgICAgIHJlc3VsdCA9IEpTT04ucGFyc2UoY29udGVudCk7XHJcbiAgICB9IGVsc2UgaWYgKC94bWwvLnRlc3QoY29udGVudFR5cGUpIHx8IGNvbnRlbnQuY2hhckF0KDApID09PSBcIjxcIikge1xyXG4gICAgICAvLyBUT0RPOiBwYXJzZSB4bWwgYm0gZm9udFxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmVzdWx0ID0gQk1Gb250UGFyc2VyQXNjaWkucGFyc2VBU0NJSShjb250ZW50KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3V0aWxpdHkvYm1Gb250UGFyc2VyLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE5QkE7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 57 */
/* exports provided: default */
/* exports used: default */
/*!******************************************!*\
  !*** ./src/utility/bmFontParserAscii.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n\n\n/**\r\n * Based on parse-bmfont-ascii package, under MIT License:\r\n * see more details at\r\n * http://github.com/mattdesl/parse-bmfont-ascii/blob/master/LICENSE.md\r\n */\nclass BMFontParserAscii {\n  /**\r\n     *\r\n     * @param {String} data\r\n     */\n  static parseASCII(data) {\n    if (!data || !__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0_common_utils__[\"b\" /* isString */])(data)) {\n      throw new Error(\"No data provided\");\n    }\n\n    data = data.trim();\n\n    let output = {\n      pages: [],\n      chars: [],\n      kernings: []\n    };\n\n    let lines = data.split(/\\r\\n?|\\n/g);\n\n    if (lines.length === 0) {\n      throw new Error(\"No data in BMFont file\");\n    }\n\n    for (let i = 0; i < lines.length; i++) {\n      let lineData = BMFontParserAscii._splitLine(lines[i], i);\n\n      //skip empty lines\n      if (!lineData) {\n        continue;\n      }\n\n      if (lineData.key === \"page\") {\n        if (typeof lineData.data.id !== \"number\") {\n          throw new Error(\"Malformed file at line \" + i + \" -- needs page id=N\");\n        }\n\n        if (typeof lineData.data.file !== \"string\") {\n          throw new Error(\"Malformed file at line \" + i + ' -- needs page file=\"path\"');\n        }\n\n        output.pages[lineData.data.id] = lineData.data.file;\n      } else if (lineData.key === \"chars\" || lineData.key === \"kernings\") {\n        //... do nothing for these two ...\n      } else if (lineData.key === \"char\") {\n        output.chars.push(lineData.data);\n      } else if (lineData.key === \"kerning\") {\n        output.kernings.push(lineData.data);\n      } else {\n        output[lineData.key] = lineData.data;\n      }\n    }\n\n    return output;\n  }\n\n  static _splitLine(line, idx) {\n    line = line.replace(/\\t+/g, \" \").trim();\n    if (!line) {\n      return null;\n    }\n\n    let space = line.indexOf(\" \");\n    if (space === -1) {\n      throw new Error(\"No named row at line \" + idx);\n    }\n\n    let key = line.substring(0, space);\n\n    line = line.substring(space + 1);\n    //clear \"letter\" field as it is non-standard and\n    //requires additional complexity to parse \" / = symbols\n    line = line.replace(/letter=[\\'\\\"]\\S+[\\'\\\"]/gi, \"\");\n    line = line.split(\"=\");\n    line = line.map(function (str) {\n      return str.trim().match(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g);\n    });\n\n    let data = [];\n    for (let i = 0; i < line.length; i++) {\n      let dt = line[i];\n      if (i === 0) {\n        data.push({\n          key: dt[0],\n          data: \"\"\n        });\n      } else if (i === line.length - 1) {\n        data[data.length - 1].data = BMFontParserAscii._parseData(dt[0]);\n      } else {\n        data[data.length - 1].data = BMFontParserAscii._parseData(dt[0]);\n        data.push({\n          key: dt[1],\n          data: \"\"\n        });\n      }\n    }\n\n    let out = {\n      key: key,\n      data: {}\n    };\n\n    data.forEach(function (v) {\n      out.data[v.key] = v.data;\n    });\n\n    return out;\n  }\n\n  static _parseData(data) {\n    if (!data || data.length === 0) {\n      return \"\";\n    }\n\n    if (data.indexOf('\"') === 0 || data.indexOf(\"'\") === 0) {\n      return data.substring(1, data.length - 1);\n    }\n\n    if (data.indexOf(\",\") !== -1) {\n      return BMFontParserAscii._parseIntList(data);\n    }\n\n    return parseInt(data, 10);\n  }\n\n  static _parseIntList(data) {\n    return data.split(\",\").map(function (val) {\n      return parseInt(val, 10);\n    });\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = BMFontParserAscii;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3V0aWxpdHkvYm1Gb250UGFyc2VyQXNjaWkuanM/OTA5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc1N0cmluZyB9IGZyb20gXCJjb21tb24vdXRpbHNcIjtcclxuXHJcbi8qKlxyXG4gKiBCYXNlZCBvbiBwYXJzZS1ibWZvbnQtYXNjaWkgcGFja2FnZSwgdW5kZXIgTUlUIExpY2Vuc2U6XHJcbiAqIHNlZSBtb3JlIGRldGFpbHMgYXRcclxuICogaHR0cDovL2dpdGh1Yi5jb20vbWF0dGRlc2wvcGFyc2UtYm1mb250LWFzY2lpL2Jsb2IvbWFzdGVyL0xJQ0VOU0UubWRcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJNRm9udFBhcnNlckFzY2lpIHtcclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gZGF0YVxyXG4gICAgICovXHJcbiAgc3RhdGljIHBhcnNlQVNDSUkoZGF0YSkge1xyXG4gICAgaWYgKCFkYXRhIHx8ICFpc1N0cmluZyhkYXRhKSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBkYXRhIHByb3ZpZGVkXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIGRhdGEgPSBkYXRhLnRyaW0oKTtcclxuXHJcbiAgICBsZXQgb3V0cHV0ID0ge1xyXG4gICAgICBwYWdlczogW10sXHJcbiAgICAgIGNoYXJzOiBbXSxcclxuICAgICAga2VybmluZ3M6IFtdXHJcbiAgICB9O1xyXG5cclxuICAgIGxldCBsaW5lcyA9IGRhdGEuc3BsaXQoL1xcclxcbj98XFxuL2cpO1xyXG5cclxuICAgIGlmIChsaW5lcy5sZW5ndGggPT09IDApIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gZGF0YSBpbiBCTUZvbnQgZmlsZVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpbmVzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgIGxldCBsaW5lRGF0YSA9IEJNRm9udFBhcnNlckFzY2lpLl9zcGxpdExpbmUobGluZXNbaV0sIGkpO1xyXG5cclxuICAgICAgLy9za2lwIGVtcHR5IGxpbmVzXHJcbiAgICAgIGlmICghbGluZURhdGEpIHtcclxuICAgICAgICBjb250aW51ZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKGxpbmVEYXRhLmtleSA9PT0gXCJwYWdlXCIpIHtcclxuICAgICAgICBpZiAodHlwZW9mIGxpbmVEYXRhLmRhdGEuaWQgIT09IFwibnVtYmVyXCIpIHtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1hbGZvcm1lZCBmaWxlIGF0IGxpbmUgXCIgKyBpICsgXCIgLS0gbmVlZHMgcGFnZSBpZD1OXCIpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHR5cGVvZiBsaW5lRGF0YS5kYXRhLmZpbGUgIT09IFwic3RyaW5nXCIpIHtcclxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIk1hbGZvcm1lZCBmaWxlIGF0IGxpbmUgXCIgKyBpICsgJyAtLSBuZWVkcyBwYWdlIGZpbGU9XCJwYXRoXCInKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIG91dHB1dC5wYWdlc1tsaW5lRGF0YS5kYXRhLmlkXSA9IGxpbmVEYXRhLmRhdGEuZmlsZTtcclxuICAgICAgfSBlbHNlIGlmIChsaW5lRGF0YS5rZXkgPT09IFwiY2hhcnNcIiB8fCBsaW5lRGF0YS5rZXkgPT09IFwia2VybmluZ3NcIikge1xyXG4gICAgICAgIC8vLi4uIGRvIG5vdGhpbmcgZm9yIHRoZXNlIHR3byAuLi5cclxuICAgICAgfSBlbHNlIGlmIChsaW5lRGF0YS5rZXkgPT09IFwiY2hhclwiKSB7XHJcbiAgICAgICAgb3V0cHV0LmNoYXJzLnB1c2gobGluZURhdGEuZGF0YSk7XHJcbiAgICAgIH0gZWxzZSBpZiAobGluZURhdGEua2V5ID09PSBcImtlcm5pbmdcIikge1xyXG4gICAgICAgIG91dHB1dC5rZXJuaW5ncy5wdXNoKGxpbmVEYXRhLmRhdGEpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIG91dHB1dFtsaW5lRGF0YS5rZXldID0gbGluZURhdGEuZGF0YTtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBvdXRwdXQ7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgX3NwbGl0TGluZShsaW5lLCBpZHgpIHtcclxuICAgIGxpbmUgPSBsaW5lLnJlcGxhY2UoL1xcdCsvZywgXCIgXCIpLnRyaW0oKTtcclxuICAgIGlmICghbGluZSkge1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBsZXQgc3BhY2UgPSBsaW5lLmluZGV4T2YoXCIgXCIpO1xyXG4gICAgaWYgKHNwYWNlID09PSAtMSkge1xyXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBuYW1lZCByb3cgYXQgbGluZSBcIiArIGlkeCk7XHJcbiAgICB9XHJcblxyXG4gICAgbGV0IGtleSA9IGxpbmUuc3Vic3RyaW5nKDAsIHNwYWNlKTtcclxuXHJcbiAgICBsaW5lID0gbGluZS5zdWJzdHJpbmcoc3BhY2UgKyAxKTtcclxuICAgIC8vY2xlYXIgXCJsZXR0ZXJcIiBmaWVsZCBhcyBpdCBpcyBub24tc3RhbmRhcmQgYW5kXHJcbiAgICAvL3JlcXVpcmVzIGFkZGl0aW9uYWwgY29tcGxleGl0eSB0byBwYXJzZSBcIiAvID0gc3ltYm9sc1xyXG4gICAgbGluZSA9IGxpbmUucmVwbGFjZSgvbGV0dGVyPVtcXCdcXFwiXVxcUytbXFwnXFxcIl0vZ2ksIFwiXCIpO1xyXG4gICAgbGluZSA9IGxpbmUuc3BsaXQoXCI9XCIpO1xyXG4gICAgbGluZSA9IGxpbmUubWFwKGZ1bmN0aW9uKHN0cikge1xyXG4gICAgICByZXR1cm4gc3RyLnRyaW0oKS5tYXRjaCgvKFwiLio/XCJ8W15cIlxcc10rKSsoPz1cXHMqfFxccyokKS9nKTtcclxuICAgIH0pO1xyXG5cclxuICAgIGxldCBkYXRhID0gW107XHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGxpbmUubGVuZ3RoOyBpKyspIHtcclxuICAgICAgbGV0IGR0ID0gbGluZVtpXTtcclxuICAgICAgaWYgKGkgPT09IDApIHtcclxuICAgICAgICBkYXRhLnB1c2goe1xyXG4gICAgICAgICAga2V5OiBkdFswXSxcclxuICAgICAgICAgIGRhdGE6IFwiXCJcclxuICAgICAgICB9KTtcclxuICAgICAgfSBlbHNlIGlmIChpID09PSBsaW5lLmxlbmd0aCAtIDEpIHtcclxuICAgICAgICBkYXRhW2RhdGEubGVuZ3RoIC0gMV0uZGF0YSA9IEJNRm9udFBhcnNlckFzY2lpLl9wYXJzZURhdGEoZHRbMF0pO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRhdGFbZGF0YS5sZW5ndGggLSAxXS5kYXRhID0gQk1Gb250UGFyc2VyQXNjaWkuX3BhcnNlRGF0YShkdFswXSk7XHJcbiAgICAgICAgZGF0YS5wdXNoKHtcclxuICAgICAgICAgIGtleTogZHRbMV0sXHJcbiAgICAgICAgICBkYXRhOiBcIlwiXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBsZXQgb3V0ID0ge1xyXG4gICAgICBrZXk6IGtleSxcclxuICAgICAgZGF0YToge31cclxuICAgIH07XHJcblxyXG4gICAgZGF0YS5mb3JFYWNoKGZ1bmN0aW9uKHYpIHtcclxuICAgICAgb3V0LmRhdGFbdi5rZXldID0gdi5kYXRhO1xyXG4gICAgfSk7XHJcblxyXG4gICAgcmV0dXJuIG91dDtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBfcGFyc2VEYXRhKGRhdGEpIHtcclxuICAgIGlmICghZGF0YSB8fCBkYXRhLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICByZXR1cm4gXCJcIjtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGF0YS5pbmRleE9mKCdcIicpID09PSAwIHx8IGRhdGEuaW5kZXhPZihcIidcIikgPT09IDApIHtcclxuICAgICAgcmV0dXJuIGRhdGEuc3Vic3RyaW5nKDEsIGRhdGEubGVuZ3RoIC0gMSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGRhdGEuaW5kZXhPZihcIixcIikgIT09IC0xKSB7XHJcbiAgICAgIHJldHVybiBCTUZvbnRQYXJzZXJBc2NpaS5fcGFyc2VJbnRMaXN0KGRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiBwYXJzZUludChkYXRhLCAxMCk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgX3BhcnNlSW50TGlzdChkYXRhKSB7XHJcbiAgICByZXR1cm4gZGF0YS5zcGxpdChcIixcIikubWFwKGZ1bmN0aW9uKHZhbCkge1xyXG4gICAgICByZXR1cm4gcGFyc2VJbnQodmFsLCAxMCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy91dGlsaXR5L2JtRm9udFBhcnNlckFzY2lpLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUhBO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUZBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWpJQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 58 */
/* exports provided: default */
/* exports used: default */
/*!*****************************!*\
  !*** ./src/utility/path.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * IO Path utility class\r\n */\nclass Path {\n  //#region Static Properties\n\n  /**\r\n     *\r\n     * @type {boolean}\r\n     * @private\r\n     */\n  static get _IS_WIN() {\n    return navigator.platform.toLowerCase().indexOf(\"win\") > -1;\n  }\n\n  /**\r\n     * The appropriate system trailing slash\r\n     * @type {string}\r\n     * @public\r\n     */\n  static get TRAILING_SLASH() {\n    return Path._IS_WIN ? \"\\\\\" : \"/\";\n  }\n\n  //#endregion\n\n  //#region Constructors\n\n  constructor() {}\n\n  //#endregion\n\n  //#region Static Methods\n\n  /**\r\n     * Ensures this is a valid string directory (eg. ends with slash)\r\n     * @param path\r\n     * @returns {string}\r\n     */\n  static wrapDirectoryPath(path) {\n    return path + (path.endsWith(\"/\") || path.endsWith(\"\\\\\") ? \"\" : Path.TRAILING_SLASH);\n  }\n\n  /**\r\n     * Strips only the directory path (excludes file names)\r\n     * @param path\r\n     */\n  static getDirectory(path) {\n    let index = Math.max(path.lastIndexOf(\"/\"), path.lastIndexOf(\"\\\\\"));\n    return path.substring(0, index >= 0 ? index : path.length);\n  }\n\n  /**\r\n     * Returns the directory name from a given path\r\n     * @param path\r\n     * @returns {string}\r\n     */\n  static getDirectoryName(path) {\n    if (path.endsWith(\"/\") || path.endsWith(\"\\\\\")) {\n      path = path.substring(0, path.length - 1);\n    }\n\n    let index = Math.max(path.lastIndexOf(\"/\"), path.lastIndexOf(\"\\\\\"));\n    return path.substring(index + 1, path.length);\n  }\n\n  /**\r\n     * Gets a filename from a given path\r\n     * @param path\r\n     */\n  static getFilename(path) {\n    let index = Math.max(path.lastIndexOf(\"/\"), path.lastIndexOf(\"\\\\\"));\n    return path.substring(index >= 0 && index < path.length - 1 ? index + 1 : 0, path.length);\n  }\n\n  /**\r\n     * Gets a file extension from a given path\r\n     * @param path\r\n     */\n  static getFileExtension(path) {\n    return path.substring(path.lastIndexOf(\".\"), path.length);\n  }\n\n  /**\r\n     * Checks if pathA can be contained inside pathB\r\n     * @param pathA\r\n     * @param pathB\r\n     */\n  static relativeTo(pathA, pathB) {\n    return Path.wrapDirectoryPath(pathA).indexOf(Path.wrapDirectoryPath(pathB)) === 0;\n  }\n\n  /**\r\n     * Makes the full path relative to the base path\r\n     * @param basePath\r\n     * @param fullPath\r\n     */\n  static makeRelative(basePath, fullPath) {\n    return fullPath.replace(Path.wrapDirectoryPath(basePath), \"\");\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Path;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3V0aWxpdHkvcGF0aC5qcz83NTAzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBJTyBQYXRoIHV0aWxpdHkgY2xhc3NcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBhdGgge1xyXG4gIC8vI3JlZ2lvbiBTdGF0aWMgUHJvcGVydGllc1xyXG5cclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAdHlwZSB7Ym9vbGVhbn1cclxuICAgICAqIEBwcml2YXRlXHJcbiAgICAgKi9cclxuICBzdGF0aWMgZ2V0IF9JU19XSU4oKSB7XHJcbiAgICByZXR1cm4gbmF2aWdhdG9yLnBsYXRmb3JtLnRvTG93ZXJDYXNlKCkuaW5kZXhPZihcIndpblwiKSA+IC0xO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBUaGUgYXBwcm9wcmlhdGUgc3lzdGVtIHRyYWlsaW5nIHNsYXNoXHJcbiAgICAgKiBAdHlwZSB7c3RyaW5nfVxyXG4gICAgICogQHB1YmxpY1xyXG4gICAgICovXHJcbiAgc3RhdGljIGdldCBUUkFJTElOR19TTEFTSCgpIHtcclxuICAgIHJldHVybiBQYXRoLl9JU19XSU4gPyBcIlxcXFxcIiA6IFwiL1wiO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7fVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIFN0YXRpYyBNZXRob2RzXHJcblxyXG4gIC8qKlxyXG4gICAgICogRW5zdXJlcyB0aGlzIGlzIGEgdmFsaWQgc3RyaW5nIGRpcmVjdG9yeSAoZWcuIGVuZHMgd2l0aCBzbGFzaClcclxuICAgICAqIEBwYXJhbSBwYXRoXHJcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gICAgICovXHJcbiAgc3RhdGljIHdyYXBEaXJlY3RvcnlQYXRoKHBhdGgpIHtcclxuICAgIHJldHVybiBwYXRoICsgKHBhdGguZW5kc1dpdGgoXCIvXCIpIHx8IHBhdGguZW5kc1dpdGgoXCJcXFxcXCIpID8gXCJcIiA6IFBhdGguVFJBSUxJTkdfU0xBU0gpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBTdHJpcHMgb25seSB0aGUgZGlyZWN0b3J5IHBhdGggKGV4Y2x1ZGVzIGZpbGUgbmFtZXMpXHJcbiAgICAgKiBAcGFyYW0gcGF0aFxyXG4gICAgICovXHJcbiAgc3RhdGljIGdldERpcmVjdG9yeShwYXRoKSB7XHJcbiAgICBsZXQgaW5kZXggPSBNYXRoLm1heChwYXRoLmxhc3RJbmRleE9mKFwiL1wiKSwgcGF0aC5sYXN0SW5kZXhPZihcIlxcXFxcIikpO1xyXG4gICAgcmV0dXJuIHBhdGguc3Vic3RyaW5nKDAsIGluZGV4ID49IDAgPyBpbmRleCA6IHBhdGgubGVuZ3RoKTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogUmV0dXJucyB0aGUgZGlyZWN0b3J5IG5hbWUgZnJvbSBhIGdpdmVuIHBhdGhcclxuICAgICAqIEBwYXJhbSBwYXRoXHJcbiAgICAgKiBAcmV0dXJucyB7c3RyaW5nfVxyXG4gICAgICovXHJcbiAgc3RhdGljIGdldERpcmVjdG9yeU5hbWUocGF0aCkge1xyXG4gICAgaWYgKHBhdGguZW5kc1dpdGgoXCIvXCIpIHx8IHBhdGguZW5kc1dpdGgoXCJcXFxcXCIpKSB7XHJcbiAgICAgIHBhdGggPSBwYXRoLnN1YnN0cmluZygwLCBwYXRoLmxlbmd0aCAtIDEpO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBpbmRleCA9IE1hdGgubWF4KHBhdGgubGFzdEluZGV4T2YoXCIvXCIpLCBwYXRoLmxhc3RJbmRleE9mKFwiXFxcXFwiKSk7XHJcbiAgICByZXR1cm4gcGF0aC5zdWJzdHJpbmcoaW5kZXggKyAxLCBwYXRoLmxlbmd0aCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIEdldHMgYSBmaWxlbmFtZSBmcm9tIGEgZ2l2ZW4gcGF0aFxyXG4gICAgICogQHBhcmFtIHBhdGhcclxuICAgICAqL1xyXG4gIHN0YXRpYyBnZXRGaWxlbmFtZShwYXRoKSB7XHJcbiAgICBsZXQgaW5kZXggPSBNYXRoLm1heChwYXRoLmxhc3RJbmRleE9mKFwiL1wiKSwgcGF0aC5sYXN0SW5kZXhPZihcIlxcXFxcIikpO1xyXG4gICAgcmV0dXJuIHBhdGguc3Vic3RyaW5nKGluZGV4ID49IDAgJiYgaW5kZXggPCBwYXRoLmxlbmd0aCAtIDEgPyBpbmRleCArIDEgOiAwLCBwYXRoLmxlbmd0aCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIEdldHMgYSBmaWxlIGV4dGVuc2lvbiBmcm9tIGEgZ2l2ZW4gcGF0aFxyXG4gICAgICogQHBhcmFtIHBhdGhcclxuICAgICAqL1xyXG4gIHN0YXRpYyBnZXRGaWxlRXh0ZW5zaW9uKHBhdGgpIHtcclxuICAgIHJldHVybiBwYXRoLnN1YnN0cmluZyhwYXRoLmxhc3RJbmRleE9mKFwiLlwiKSwgcGF0aC5sZW5ndGgpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBDaGVja3MgaWYgcGF0aEEgY2FuIGJlIGNvbnRhaW5lZCBpbnNpZGUgcGF0aEJcclxuICAgICAqIEBwYXJhbSBwYXRoQVxyXG4gICAgICogQHBhcmFtIHBhdGhCXHJcbiAgICAgKi9cclxuICBzdGF0aWMgcmVsYXRpdmVUbyhwYXRoQSwgcGF0aEIpIHtcclxuICAgIHJldHVybiBQYXRoLndyYXBEaXJlY3RvcnlQYXRoKHBhdGhBKS5pbmRleE9mKFBhdGgud3JhcERpcmVjdG9yeVBhdGgocGF0aEIpKSA9PT0gMDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogTWFrZXMgdGhlIGZ1bGwgcGF0aCByZWxhdGl2ZSB0byB0aGUgYmFzZSBwYXRoXHJcbiAgICAgKiBAcGFyYW0gYmFzZVBhdGhcclxuICAgICAqIEBwYXJhbSBmdWxsUGF0aFxyXG4gICAgICovXHJcbiAgc3RhdGljIG1ha2VSZWxhdGl2ZShiYXNlUGF0aCwgZnVsbFBhdGgpIHtcclxuICAgIHJldHVybiBmdWxsUGF0aC5yZXBsYWNlKFBhdGgud3JhcERpcmVjdG9yeVBhdGgoYmFzZVBhdGgpLCBcIlwiKTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvdXRpbGl0eS9wYXRoLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBbEdBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 59 */
/* exports provided: default */
/* exports used: default */
/*!**********************************!*\
  !*** ./src/utility/textUtils.js ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\n * TextUtils Class\n */\nclass TextUtils {\n  //#region Static Methods\n\n  /**\n     * Measures a given character's width based on the provided font style\n     * @param {string} char character to measure\n     * @param {FontStyle} fontStyle font style to measure with\n     * @returns {number} the character width if valid and 0 if invalid\n     * @public\n     */\n  static measureCharacterWidth(fontStyle, char) {\n    // don't go further if parameters are invalid\n    if (!fontStyle || !char) {\n      return 0;\n    }\n\n    let scale = fontStyle.getScale();\n\n    // if scale is invalid (0 or null)\n    if (!scale) {\n      return 0;\n    }\n\n    // retrieve character ID\n    let charID = fontStyle.findCharID(char);\n\n    // don't go further if char id is invalid\n    if (charID === null) {\n      return 0;\n    }\n\n    // calculate character 'width'\n    // xadvance is based not only on the width but also\n    // on the padding, thus being used instead of width (?)\n    let charWidth = fontStyle.getFontDescription().chars[charID].xadvance * scale;\n\n    return charWidth;\n  }\n\n  /**\n     * Measures the given text string width based on the provided font style\n     * @param {FontStyle} fontStyle font style to measure with\n     * @param {string} textStr text string to measure\n     * @returns {number} the given text string width if valid and 0 if invalid\n     * @public\n     */\n  static measureTextWidth(fontStyle, textStr) {\n    // don't go further if parameters or scale are invalid\n    if (!fontStyle || !textStr || !fontStyle.getScale()) {\n      return 0;\n    }\n\n    // set initial width\n    let width = 0;\n    // set initial letter spacing (for the first character, basically)\n    let currentLetterSpacing = 0;\n    // just to keep track of reverting to the original\n    // letter spacing value, so we only do it once\n    let revertedToOriginalValue = false;\n\n    // iterate through every character\n    for (let c = 0; c < textStr.length; c++) {\n      // retrieve character at position c\n      let char = textStr[c];\n\n      // if there is already one or more valid characters,\n      // then we can use the actual letter spacing value\n      if (!revertedToOriginalValue && width > 0) {\n        // revert to original value\n        currentLetterSpacing = fontStyle.getLetterSpacing();\n        // make sure we only enter this condition once\n        revertedToOriginalValue = true;\n      }\n\n      // store character's width temporarily\n      let tempWidth = TextUtils.measureCharacterWidth(fontStyle, char);\n\n      // if valid\n      if (tempWidth > 0) {\n        // add its width\n        // if tempWidth was 0, adding letter spacing wouldn't make much sense.\n        width += tempWidth + currentLetterSpacing;\n      }\n    }\n\n    // return total width\n    return width;\n  }\n\n  static wrapWordsShortVersion(fontStyle, textStr, maxLineWidth) {\n    let result = [];\n\n    if (!fontStyle || !textStr || !maxLineWidth || maxLineWidth <= 0) {\n      return result;\n    }\n\n    // retrieve words\n    let words = textStr.split(\" \");\n\n    // no need to go further if there is only 1 word\n    if (words.length == 1) {\n      return words;\n    }\n\n    let whitespace = \" \";\n    // get first word and remove it from the array\n    let currentLine = words.shift();\n\n    // iterate through the words\n    for (let w = 0; w < words.length; w++) {\n      // retrieve word\n      let word = words[w];\n\n      // simulate line width with the current word and whitespaces in between\n      let tempLine = currentLine + whitespace + word;\n\n      let tempWidth = TextUtils.measureTextWidth(fontStyle, tempLine);\n\n      if (tempWidth > maxLineWidth) {\n        result.push(currentLine);\n        currentLine = word;\n      } else {\n        currentLine += whitespace + word;\n      }\n    }\n\n    // push last line\n    result.push(currentLine);\n\n    return result;\n  }\n\n  /**\n     * Wraps the words of a given text depending \n     * on a maximum width and font style\n     * @param {FontStyle} fontStyle font style to measure with\n     * @param {string} textStr text string to wrap\n     * @param {number} maxLineWidth maximum width per line\n     * @param {boolean} characterWrap whether it should character wrap or not\n     * @returns {Array} wrapped text in lines\n     * @public\n     */\n  static wrapWordsLongVersion(fontStyle, textStr, maxLineWidth, characterWrap) {\n    let result = [];\n\n    if (!fontStyle || !textStr || !maxLineWidth || maxLineWidth <= 0) {\n      return result;\n    }\n\n    // retrieve words\n    let words = textStr.split(\" \");\n\n    // get first word and remove it from the array\n    //words.shift();\n    let currentLine = \"\";\n    // store its width\n    //TextUtils.measureTextWidth(currentLine, scale);\n    let currentLineWordWidth = 0;\n\n    // \" \";\n    let whitespace = \"\";\n    //TextUtils.measureCharacterWidth(whitespace, scale);\n    let whitespaceWidth = 0;\n    // just to keep track of reverting whitespace to its original value\n    // (its real width)\n    let revertedToOriginalValue = false;\n\n    // iterate through the words\n    for (let w = 0; w < words.length; w++) {\n      // retrieve word\n      let word = words[w];\n\n      // just a way to not consider whitespace and its width\n      // (along with a possible letter spacing value)\n      // if there aren't any characters or words already in the current line.\n      if (!revertedToOriginalValue && currentLineWordWidth > 0) {\n        whitespace = \" \";\n        // letter spacing also affects the whitespace width\n        // when there is at least 1 word\n        whitespaceWidth = TextUtils.measureCharacterWidth(fontStyle, whitespace) + fontStyle.getLetterSpacing();\n        // make sure we only enter this condition once (per line)\n        revertedToOriginalValue = true;\n      }\n\n      // calculate word width according to the text scale\n      // (not characters length!)\n      let wordWidth = TextUtils.measureTextWidth(fontStyle, word);\n\n      // TODO: think of a cleaner way of doing this?\n      // maybe wrapTextByCharacter shouldn't return line objects?\n      if (characterWrap && wordWidth > maxLineWidth) {\n        let tempLine = currentLine + whitespace + word;\n\n        let characterWrappedLines = TextUtils.wrapTextByCharacter(fontStyle, tempLine, maxLineWidth);\n\n        // currentLine is the last line so maybe next word also fits\n        currentLine = characterWrappedLines.splice(-1, 1)[0].chars.join(\"\");\n        currentLineWordWidth = TextUtils.measureTextWidth(fontStyle, currentLine);\n        // reset whitespace values as currentLineWordWidth can be 0...\n        // and would consider whitespace in the beginning of a new line\n        // which we are trying to avoid (the reason of all this mess!)\n        whitespace = \"\";\n        whitespaceWidth = 0;\n        revertedToOriginalValue = false;\n\n        // push the others\n        for (let cline = 0; cline < characterWrappedLines.length; cline++) {\n          let characterLine = characterWrappedLines[cline].chars.join(\"\");\n          result.push(characterLine);\n        }\n        // no need to go further in this iteration\n        continue;\n      }\n\n      // simulate line width with the current word,\n      // a whitespace in between and also extra line spacing if any\n      let tempWidth = currentLineWordWidth + wordWidth + whitespaceWidth;\n\n      if (tempWidth > maxLineWidth) {\n        result.push(currentLine);\n        currentLine = word;\n        currentLineWordWidth = wordWidth;\n        // reset whitespace values as currentLineWordWidth can be 0...\n        // and would consider whitespace in the beginning of a new line,\n        // which we are trying to avoid (the reason of all this mess!)\n        whitespace = \"\";\n        whitespaceWidth = 0;\n        revertedToOriginalValue = false;\n      } else {\n        currentLine += whitespace + word;\n        currentLineWordWidth += whitespaceWidth + wordWidth;\n      }\n    }\n\n    // push last line\n    result.push(currentLine);\n\n    return result;\n  }\n\n  /**\n     * Wraps the characters of a given text \n     * depending on a maximum width and text scale\n     * @param {FontStyle} fontStyle font style to measure with\n     * @param {string} textStr text string to wrap\n     * @param {number} maxLineWidth maximum width per line\n     * @returns {Array} wrapped text in lines\n     * @public\n     */\n  static wrapTextByCharacter(fontStyle, textStr, maxLineWidth) {\n    // create empty array\n    let lines = [];\n\n    // TODO: trim?\n    // if parameters are invalid, no need to go further\n    if (!fontStyle || !textStr || !maxLineWidth || maxLineWidth <= 0) {\n      return lines;\n    }\n\n    // create first line, since it's sure to have some text\n    lines.push({\n      chars: [],\n      width: 0\n    });\n\n    // set initial value for letter spacing\n    // (for the first character iteration, basically...)\n    let currentLetterSpacing = 0;\n    // just to keep track of reverting to letter spacing original value\n    let revertedToOriginalValue = false;\n\n    // iterate through text characters\n    for (let c = 0; c < textStr.length; c++) {\n      // retrieve text character\n      let char = textStr[c];\n\n      // store current line index\n      let currentLine = lines.length - 1;\n\n      // after the first (valid) character of current line,\n      // get the actual value of letter spacing\n      if (!revertedToOriginalValue && lines[currentLine].width > 0) {\n        // revert to original value\n        currentLetterSpacing = fontStyle.getLetterSpacing();\n        // make sure we only enter this condition once\n        // (per line, thus the resets down below)\n        revertedToOriginalValue = true;\n      }\n\n      // retrieve character width\n      let charWidth = TextUtils.measureCharacterWidth(fontStyle, char);\n\n      // current width + char width + letter spacing\n      // if there is at least 1 character\n      let tempWidth = lines[currentLine].width + charWidth + currentLetterSpacing;\n\n      // if current line width + the current character width\n      // is > than the max width\n      if (tempWidth > maxLineWidth) {\n        // create a new and empty line\n        lines.push({\n          chars: [],\n          width: 0\n        });\n\n        // update current line index\n        currentLine++;\n        // reset letter spacing!\n        currentLetterSpacing = 0;\n        // and the variable that keeps track of\n        // reverting to actual letter spacing value\n        revertedToOriginalValue = false;\n\n        // skip if the character is a whitespace\n        if (char === \" \") {\n          continue;\n        }\n      }\n\n      // add character and its width to current line\n      // (plus letter spacing if there is at least 1 character)\n      lines[currentLine].width += charWidth + currentLetterSpacing;\n      lines[currentLine].chars.push(char);\n    }\n\n    return lines;\n  }\n\n  /**\n     * Converts a given text into a Line Object, \n     * with an array of characters and the line total width\n     * @param {FontStyle} fontStyle font style to measure with\n     * @param {string} textStr text string to convert into a line object\n     * @returns {{chars: Array, width: number}}\n     * @public\n     */\n  static convertTextStringToLineFormat(fontStyle, textStr) {\n    // define empty line\n    let line = {\n      chars: Array(),\n      width: 0\n    };\n\n    // return empty if any of the values or scale is invalid\n    if (!fontStyle || !textStr || !fontStyle.getScale()) {\n      return line;\n    }\n\n    // set line characters and width\n    line.chars = textStr.split(\"\");\n    line.width = TextUtils.measureTextWidth(fontStyle, textStr);\n\n    return line;\n  }\n\n  /**\n     * Creates the definitive lines to draw onto the screen\n     * @param {FontStyle} fontStyle font style to measure with\n     * @param {string} textStr text string to draw\n     * @param {number} maxLineWidth maximum line width\n     * @param {boolean} wordWrap whether it should word wrap or not\n     * @param {boolean} characterWrap whether it should character wrap or not\n     * @returns {Array} text split into lines\n     * @public\n     */\n  static measureText(fontStyle, textStr, maxLineWidth, wordWrap, characterWrap) {\n    // create empty array\n    let resultLines = [];\n\n    // if parameters or scale are invalid, there is no need to go further\n    if (!fontStyle || !textStr || !maxLineWidth || !fontStyle.getScale()) {\n      return resultLines;\n    }\n\n    // create first line, since it's sure to have some text\n    resultLines.push({\n      chars: [],\n      width: 0\n    });\n\n    // store original text\n    let useText = textStr;\n\n    // create array for user defined lines\n    let userDefinedLines = [];\n\n    // word wrap by inserting \\n in the original text\n    if (wordWrap) {\n      // initialize resulting text\n      let wrappedText = \"\";\n      // split text into lines defined by the user\n      userDefinedLines = useText.split(/(?:\\r\\n|\\r|\\n)/);\n\n      // iterate through lines\n      for (let l = 0; l < userDefinedLines.length; l++) {\n        // wrap line\n        let wrappedLine = TextUtils.wrapWordsLongVersion(fontStyle, userDefinedLines[l], maxLineWidth, characterWrap).join(\"\\n\");\n        // always insert a break at the end\n        // since the split gets rid of the user defined breaks...\n        wrappedLine += \"\\n\";\n        // concatenate to resulting wrapping text\n        wrappedText += wrappedLine;\n      }\n\n      // assign useText to resulting wrapping text\n      useText = wrappedText;\n    }\n\n    // split text into lines defined by the users (and also word wrapped now ;))\n    userDefinedLines = useText.split(/(?:\\r\\n|\\r|\\n)/);\n\n    // iterate through user defined lines (with special characters)\n    for (let l = 0; l < userDefinedLines.length; l++) {\n      let userDefinedLine = userDefinedLines[l];\n\n      let preparedLines = [];\n\n      // only perform character wrap\n      // if word wrap isn't enabled in the first place\n      if (!wordWrap && characterWrap) {\n        preparedLines = TextUtils.wrapTextByCharacter(fontStyle, userDefinedLine, maxLineWidth);\n      } else {\n        preparedLines.push(TextUtils.convertTextStringToLineFormat(fontStyle, userDefinedLine));\n      }\n\n      // extended result array (does not create a new array such as concat)\n      Array.prototype.push.apply(resultLines, preparedLines);\n    }\n\n    return resultLines;\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = TextUtils;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 60 */
/* exports provided: default */
/* exports used: default */
/*!***********************************!*\
  !*** ./src/webgl/webGLContext.js ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_logger__ = __webpack_require__(/*! common/logger */ 9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_constants__ = __webpack_require__(/*! common/constants */ 23);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n/**\r\n * WebGLContext Class\r\n */\n\n\n\n\n\n\nclass WebGLContext {\n  //#region Constructors\n\n  constructor(params) {\n    params = params || {};\n\n    // public properties:\n\n    // private properties:\n    this._logger = new __WEBPACK_IMPORTED_MODULE_0_common_logger__[\"a\" /* default */](\"WebGLContext\");\n    this._canvas = null;\n    this._gl = null;\n\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(params.renderContainer)) {\n      this.assignContextFromContainer(params.renderContainer);\n    }\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  setVirtualResolution(width, height) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(this._gl)) {\n      this._canvas.width = width;\n      this._canvas.height = height;\n\n      this._gl.viewport(0, 0, width, height);\n    }\n  }\n\n  assignContextFromContainer(canvas) {\n    // let's try to get the webgl context from the given container:\n    // alpha is set to false to avoid webgl picking up the canvas color\n    // and place it on the alpha channel\n    // see: http://webglfundamentals.org/webgl/lessons/webgl-and-alpha.html\n    let gl = this._gl = canvas.getContext(\"experimental-webgl\", { alpha: false }) || canvas.getContext(\"webgl\", { alpha: false }) || canvas.getContext(\"webkit-3d\", { alpha: false }) || canvas.getContext(\"moz-webgl\", { alpha: false });\n\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(this._gl)) {\n      this._logger.warn(\"WebGL not supported, find a container that does (eg. Chrome, Firefox)\");\n      return;\n    }\n\n    this._canvas = canvas;\n\n    // disable gl functions:\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.DEPTH_TEST);\n\n    gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE);\n\n    // enable gl functions:\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  getName() {\n    return __WEBPACK_IMPORTED_MODULE_1_common_constants__[\"a\" /* CONSTANTS */].WEBGL;\n  }\n\n  getContext() {\n    return this._gl;\n  }\n\n  unload() {}\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = WebGLContext;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3dlYmdsL3dlYkdMQ29udGV4dC5qcz9jMDZiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBXZWJHTENvbnRleHQgQ2xhc3NcclxuICovXHJcblxyXG5pbXBvcnQgTG9nZ2VyIGZyb20gXCJjb21tb24vbG9nZ2VyXCI7XHJcbmltcG9ydCB7IENPTlNUQU5UUyB9IGZyb20gXCJjb21tb24vY29uc3RhbnRzXCI7XHJcblxyXG5pbXBvcnQgeyBpc09iamVjdEFzc2lnbmVkIH0gZnJvbSBcImNvbW1vbi91dGlsc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV2ViR0xDb250ZXh0IHtcclxuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXHJcblxyXG4gIGNvbnN0cnVjdG9yKHBhcmFtcykge1xyXG4gICAgcGFyYW1zID0gcGFyYW1zIHx8IHt9O1xyXG5cclxuICAgIC8vIHB1YmxpYyBwcm9wZXJ0aWVzOlxyXG5cclxuICAgIC8vIHByaXZhdGUgcHJvcGVydGllczpcclxuICAgIHRoaXMuX2xvZ2dlciA9IG5ldyBMb2dnZXIoXCJXZWJHTENvbnRleHRcIik7XHJcbiAgICB0aGlzLl9jYW52YXMgPSBudWxsO1xyXG4gICAgdGhpcy5fZ2wgPSBudWxsO1xyXG5cclxuICAgIGlmIChpc09iamVjdEFzc2lnbmVkKHBhcmFtcy5yZW5kZXJDb250YWluZXIpKSB7XHJcbiAgICAgIHRoaXMuYXNzaWduQ29udGV4dEZyb21Db250YWluZXIocGFyYW1zLnJlbmRlckNvbnRhaW5lcik7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIE1ldGhvZHNcclxuXHJcbiAgc2V0VmlydHVhbFJlc29sdXRpb24od2lkdGgsIGhlaWdodCkge1xyXG4gICAgaWYgKGlzT2JqZWN0QXNzaWduZWQodGhpcy5fZ2wpKSB7XHJcbiAgICAgIHRoaXMuX2NhbnZhcy53aWR0aCA9IHdpZHRoO1xyXG4gICAgICB0aGlzLl9jYW52YXMuaGVpZ2h0ID0gaGVpZ2h0O1xyXG5cclxuICAgICAgdGhpcy5fZ2wudmlld3BvcnQoMCwgMCwgd2lkdGgsIGhlaWdodCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBhc3NpZ25Db250ZXh0RnJvbUNvbnRhaW5lcihjYW52YXMpIHtcclxuICAgIC8vIGxldCdzIHRyeSB0byBnZXQgdGhlIHdlYmdsIGNvbnRleHQgZnJvbSB0aGUgZ2l2ZW4gY29udGFpbmVyOlxyXG4gICAgLy8gYWxwaGEgaXMgc2V0IHRvIGZhbHNlIHRvIGF2b2lkIHdlYmdsIHBpY2tpbmcgdXAgdGhlIGNhbnZhcyBjb2xvclxyXG4gICAgLy8gYW5kIHBsYWNlIGl0IG9uIHRoZSBhbHBoYSBjaGFubmVsXHJcbiAgICAvLyBzZWU6IGh0dHA6Ly93ZWJnbGZ1bmRhbWVudGFscy5vcmcvd2ViZ2wvbGVzc29ucy93ZWJnbC1hbmQtYWxwaGEuaHRtbFxyXG4gICAgbGV0IGdsID0gKHRoaXMuX2dsID1cclxuICAgICAgY2FudmFzLmdldENvbnRleHQoXCJleHBlcmltZW50YWwtd2ViZ2xcIiwgeyBhbHBoYTogZmFsc2UgfSkgfHxcclxuICAgICAgY2FudmFzLmdldENvbnRleHQoXCJ3ZWJnbFwiLCB7IGFscGhhOiBmYWxzZSB9KSB8fFxyXG4gICAgICBjYW52YXMuZ2V0Q29udGV4dChcIndlYmtpdC0zZFwiLCB7IGFscGhhOiBmYWxzZSB9KSB8fFxyXG4gICAgICBjYW52YXMuZ2V0Q29udGV4dChcIm1vei13ZWJnbFwiLCB7IGFscGhhOiBmYWxzZSB9KSk7XHJcblxyXG4gICAgaWYgKCFpc09iamVjdEFzc2lnbmVkKHRoaXMuX2dsKSkge1xyXG4gICAgICB0aGlzLl9sb2dnZXIud2FybihcIldlYkdMIG5vdCBzdXBwb3J0ZWQsIGZpbmQgYSBjb250YWluZXIgdGhhdCBkb2VzIChlZy4gQ2hyb21lLCBGaXJlZm94KVwiKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuX2NhbnZhcyA9IGNhbnZhcztcclxuXHJcbiAgICAvLyBkaXNhYmxlIGdsIGZ1bmN0aW9uczpcclxuICAgIGdsLmRpc2FibGUoZ2wuQ1VMTF9GQUNFKTtcclxuICAgIGdsLmRpc2FibGUoZ2wuREVQVEhfVEVTVCk7XHJcblxyXG4gICAgZ2wuYmxlbmRGdW5jU2VwYXJhdGUoZ2wuU1JDX0FMUEhBLCBnbC5PTkVfTUlOVVNfU1JDX0FMUEhBLCBnbC5PTkUsIGdsLk9ORSk7XHJcblxyXG4gICAgLy8gZW5hYmxlIGdsIGZ1bmN0aW9uczpcclxuICAgIGdsLmVuYWJsZShnbC5CTEVORCk7XHJcbiAgICBnbC5ibGVuZEZ1bmMoZ2wuU1JDX0FMUEhBLCBnbC5PTkVfTUlOVVNfU1JDX0FMUEhBKTtcclxuICB9XHJcblxyXG4gIGdldE5hbWUoKSB7XHJcbiAgICByZXR1cm4gQ09OU1RBTlRTLldFQkdMO1xyXG4gIH1cclxuXHJcbiAgZ2V0Q29udGV4dCgpIHtcclxuICAgIHJldHVybiB0aGlzLl9nbDtcclxuICB9XHJcblxyXG4gIHVubG9hZCgpIHt9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvd2ViZ2wvd2ViR0xDb250ZXh0LmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXRFQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 61 */
/* exports provided: default, GLU */
/* exports used: default, GLU */
/*!*********************************!*\
  !*** ./src/webgl/webGLUtils.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_logger__ = __webpack_require__(/*! common/logger */ 9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n\n\n\n\n/**\r\n * WebGL Utils class\r\n *\r\n * Some boilerplate code fetched from Gregg Tavares webgl utilities\r\n * http://webglfundamentals.org/webgl/resources/webgl-utils.js\r\n */\nclass WebGLUtils {\n  //#region Constructors\n\n  constructor() {\n    // private fields\n    this._logger = new __WEBPACK_IMPORTED_MODULE_0_common_logger__[\"a\" /* default */](\"WebGLUtils\");\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  /**\r\n     * Compiles a shader\r\n     * @param gl\r\n     * @param shaderSource\r\n     * @param shaderType\r\n     */\n  _compileShader(gl, shaderSource, shaderType) {\n    // Create the shader object\n    let shader = gl.createShader(shaderType);\n\n    // Load the shader source\n    gl.shaderSource(shader, shaderSource);\n\n    // Compile the shader\n    gl.compileShader(shader);\n\n    // Check the compile status\n    let compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      // Something went wrong during compilation; get the error\n      let lastError = gl.getShaderInfoLog(shader);\n\n      this._logger.error(\"Error compiling shader '\" + shader + \"':\" + lastError);\n\n      gl.deleteShader(shader);\n\n      return null;\n    }\n\n    return shader;\n  }\n\n  /**\r\n     * Creates a program from 2 shaders.\r\n     * @param gl\r\n     * @param vertexShader\r\n     * @param fragmentShader\r\n     * @returns {WebGLProgram}\r\n     */\n  createProgram(gl, vertexShader, fragmentShader) {\n    // create a program.\n    let program = gl.createProgram();\n\n    // attach the shaders.\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n\n    // link the program.\n    gl.linkProgram(program);\n\n    // Check if it linked.\n    let success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!success) {\n      // something went wrong with the link\n      this._logger.error(\"Program filed to link:\" + gl.getProgramInfoLog(program));\n      // TEST: gl.getError() has more info?\n    }\n\n    return program;\n  }\n\n  /**\r\n     * Creates a shader from the script string\r\n     * @param gl\r\n     * @param script\r\n     * @param shaderType\r\n     * @returns {null}\r\n     */\n  createShader(gl, script, shaderType) {\n    // If we didn't pass in a type, use the 'type' from\n    // the script tag.\n    let glShaderType;\n    if (shaderType === \"vertex\") {\n      glShaderType = gl.VERTEX_SHADER;\n    } else if (shaderType === \"fragment\") {\n      glShaderType = gl.FRAGMENT_SHADER;\n    } else if (!shaderType) {\n      this._logger.warn(\"Shader type not set, discarding..\");\n      return null;\n    }\n\n    return this._compileShader(gl, script, glShaderType);\n  }\n\n  /**\r\n     * Creates a shader from the content of a script tag\r\n     * @param gl\r\n     * @param scriptId\r\n     * @param shaderType\r\n     */\n  createShaderFromScript(gl, scriptId, shaderType) {\n    // look up the script tag by id.\n    let shaderScriptElem = document.getElementById(scriptId);\n    if (!shaderScriptElem) {\n      this._logger.warn(\"Unknown script target element, discarding..\");\n      return null;\n    }\n\n    // extract the contents of the script tag.\n    this.createShader(gl, shaderScriptElem.text, shaderType);\n  }\n\n  /**\r\n     * Creates a program based on both vertex and fragment given scripts\r\n     * @param gl\r\n     * @param vertexScript\r\n     * @param fragmentScript\r\n     */\n  createProgramFromScripts(gl, vertexScript, fragmentScript) {\n    let vshader = this.createShader(gl, vertexScript, \"vertex\");\n    let fshader = this.createShader(gl, fragmentScript, \"fragment\");\n\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"a\" /* isObjectAssigned */])(vshader) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"a\" /* isObjectAssigned */])(fshader)) {\n      return this.createProgram(gl, vshader, fshader);\n    } else {\n      this._logger.warn(\"Could not create program because\" + \" scripts could not be compiled, discarding..\");\n    }\n\n    // clean up shaders\n    gl.deleteShader(vshader);\n    gl.deleteShader(fshader);\n\n    return null;\n  }\n\n  /**\r\n     * Creates a program based on both vertex and fragment given elements\r\n     * @param gl\r\n     * @param vertexScriptId\r\n     * @param fragmentScriptId\r\n     */\n  createProgramFromScriptElements(gl, vertexScriptId, fragmentScriptId) {\n    let vshader = this.createShaderFromScript(gl, vertexScriptId, \"vertex\");\n    let fshader = this.createShaderFromScript(gl, fragmentScriptId, \"fragment\");\n\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"a\" /* isObjectAssigned */])(vshader) && __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"a\" /* isObjectAssigned */])(fshader)) {\n      return this.createProgram(gl, vshader, fshader);\n    } else {\n      this._logger.warn(\"Could not create program because\" + \" scripts could not be compiled, discarding..\");\n    }\n\n    // clean up shaders\n    gl.deleteShader(vshader);\n    gl.deleteShader(fshader);\n\n    return null;\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = WebGLUtils;\n\n\n/* for simplicity sake, add a global instance of the webgl utils */\nconst GLU = new WebGLUtils();\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = GLU;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 62 */
/* no static exports found */
/* all exports used */
/*!*********************************!*\
  !*** ./~/lodash/_baseGetTag.js ***!
  \*********************************/
/***/ (function(module, exports) {

eval("/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC9fYmFzZUdldFRhZy5qcz8wZDA3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIGZvciBidWlsdC1pbiBtZXRob2QgcmVmZXJlbmNlcy4gKi9cbnZhciBvYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbi8qKlxuICogVXNlZCB0byByZXNvbHZlIHRoZVxuICogW2B0b1N0cmluZ1RhZ2BdKGh0dHA6Ly9lY21hLWludGVybmF0aW9uYWwub3JnL2VjbWEtMjYyLzcuMC8jc2VjLW9iamVjdC5wcm90b3R5cGUudG9zdHJpbmcpXG4gKiBvZiB2YWx1ZXMuXG4gKi9cbnZhciBuYXRpdmVPYmplY3RUb1N0cmluZyA9IG9iamVjdFByb3RvLnRvU3RyaW5nO1xuXG4vKipcbiAqIENvbnZlcnRzIGB2YWx1ZWAgdG8gYSBzdHJpbmcgdXNpbmcgYE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmdgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjb252ZXJ0LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgY29udmVydGVkIHN0cmluZy5cbiAqL1xuZnVuY3Rpb24gb2JqZWN0VG9TdHJpbmcodmFsdWUpIHtcbiAgcmV0dXJuIG5hdGl2ZU9iamVjdFRvU3RyaW5nLmNhbGwodmFsdWUpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IG9iamVjdFRvU3RyaW5nO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2xvZGFzaC9fYmFzZUdldFRhZy5qc1xuLy8gbW9kdWxlIGlkID0gNjJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 63 */
/* no static exports found */
/* all exports used */
/*!*********************************!*\
  !*** ./~/lodash/_hasUnicode.js ***!
  \*********************************/
/***/ (function(module, exports) {

eval("/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC9faGFzVW5pY29kZS5qcz9mZDg2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIHRvIGNvbXBvc2UgdW5pY29kZSBjaGFyYWN0ZXIgY2xhc3Nlcy4gKi9cbnZhciByc0FzdHJhbFJhbmdlID0gJ1xcXFx1ZDgwMC1cXFxcdWRmZmYnLFxuICAgIHJzQ29tYm9NYXJrc1JhbmdlID0gJ1xcXFx1MDMwMC1cXFxcdTAzNmYnLFxuICAgIHJlQ29tYm9IYWxmTWFya3NSYW5nZSA9ICdcXFxcdWZlMjAtXFxcXHVmZTJmJyxcbiAgICByc0NvbWJvU3ltYm9sc1JhbmdlID0gJ1xcXFx1MjBkMC1cXFxcdTIwZmYnLFxuICAgIHJzQ29tYm9SYW5nZSA9IHJzQ29tYm9NYXJrc1JhbmdlICsgcmVDb21ib0hhbGZNYXJrc1JhbmdlICsgcnNDb21ib1N5bWJvbHNSYW5nZSxcbiAgICByc1ZhclJhbmdlID0gJ1xcXFx1ZmUwZVxcXFx1ZmUwZic7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgdW5pY29kZSBjYXB0dXJlIGdyb3Vwcy4gKi9cbnZhciByc1pXSiA9ICdcXFxcdTIwMGQnO1xuXG4vKiogVXNlZCB0byBkZXRlY3Qgc3RyaW5ncyB3aXRoIFt6ZXJvLXdpZHRoIGpvaW5lcnMgb3IgY29kZSBwb2ludHMgZnJvbSB0aGUgYXN0cmFsIHBsYW5lc10oaHR0cDovL2Vldi5lZS9ibG9nLzIwMTUvMDkvMTIvZGFyay1jb3JuZXJzLW9mLXVuaWNvZGUvKS4gKi9cbnZhciByZUhhc1VuaWNvZGUgPSBSZWdFeHAoJ1snICsgcnNaV0ogKyByc0FzdHJhbFJhbmdlICArIHJzQ29tYm9SYW5nZSArIHJzVmFyUmFuZ2UgKyAnXScpO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgc3RyaW5nYCBjb250YWlucyBVbmljb2RlIHN5bWJvbHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgVGhlIHN0cmluZyB0byBpbnNwZWN0LlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGEgc3ltYm9sIGlzIGZvdW5kLCBlbHNlIGBmYWxzZWAuXG4gKi9cbmZ1bmN0aW9uIGhhc1VuaWNvZGUoc3RyaW5nKSB7XG4gIHJldHVybiByZUhhc1VuaWNvZGUudGVzdChzdHJpbmcpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc1VuaWNvZGU7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL19oYXNVbmljb2RlLmpzXG4vLyBtb2R1bGUgaWQgPSA2M1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 64 */
/* no static exports found */
/* all exports used */
/*!**********************************!*\
  !*** ./~/lodash/isObjectLike.js ***!
  \**********************************/
/***/ (function(module, exports) {

eval("/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC9pc09iamVjdExpa2UuanM/MzZiZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLiBBIHZhbHVlIGlzIG9iamVjdC1saWtlIGlmIGl0J3Mgbm90IGBudWxsYFxuICogYW5kIGhhcyBhIGB0eXBlb2ZgIHJlc3VsdCBvZiBcIm9iamVjdFwiLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgNC4wLjBcbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIG9iamVjdC1saWtlLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKHt9KTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzT2JqZWN0TGlrZShbMSwgMiwgM10pO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKF8ubm9vcCk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNPYmplY3RMaWtlKG51bGwpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNPYmplY3RMaWtlKHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSAhPSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PSAnb2JqZWN0Jztcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpc09iamVjdExpa2U7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL2lzT2JqZWN0TGlrZS5qc1xuLy8gbW9kdWxlIGlkID0gNjRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 65 */
/* no static exports found */
/* all exports used */
/*!********************************!*\
  !*** ./~/lodash/upperFirst.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var createCaseFirst = __webpack_require__(/*! ./_createCaseFirst */ 105);\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nmodule.exports = upperFirst;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L2xvZGFzaC91cHBlckZpcnN0LmpzPzI0MDEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNyZWF0ZUNhc2VGaXJzdCA9IHJlcXVpcmUoJy4vX2NyZWF0ZUNhc2VGaXJzdCcpO1xuXG4vKipcbiAqIENvbnZlcnRzIHRoZSBmaXJzdCBjaGFyYWN0ZXIgb2YgYHN0cmluZ2AgdG8gdXBwZXIgY2FzZS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDQuMC4wXG4gKiBAY2F0ZWdvcnkgU3RyaW5nXG4gKiBAcGFyYW0ge3N0cmluZ30gW3N0cmluZz0nJ10gVGhlIHN0cmluZyB0byBjb252ZXJ0LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgY29udmVydGVkIHN0cmluZy5cbiAqIEBleGFtcGxlXG4gKlxuICogXy51cHBlckZpcnN0KCdmcmVkJyk7XG4gKiAvLyA9PiAnRnJlZCdcbiAqXG4gKiBfLnVwcGVyRmlyc3QoJ0ZSRUQnKTtcbiAqIC8vID0+ICdGUkVEJ1xuICovXG52YXIgdXBwZXJGaXJzdCA9IGNyZWF0ZUNhc2VGaXJzdCgndG9VcHBlckNhc2UnKTtcblxubW9kdWxlLmV4cG9ydHMgPSB1cHBlckZpcnN0O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2xvZGFzaC91cHBlckZpcnN0LmpzXG4vLyBtb2R1bGUgaWQgPSA2NVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 66 */
/* no static exports found */
/* all exports used */
/*!***************************************!*\
  !*** ./~/matter-js/src/body/World.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = __webpack_require__(/*! ./Composite */ 6);\nvar Constraint = __webpack_require__(/*! ../constraint/Constraint */ 20);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.add\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hdHRlci1qcy9zcmMvYm9keS9Xb3JsZC5qcz82YjFjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuKiBUaGUgYE1hdHRlci5Xb3JsZGAgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNyZWF0aW5nIGFuZCBtYW5pcHVsYXRpbmcgdGhlIHdvcmxkIGNvbXBvc2l0ZS5cbiogQSBgTWF0dGVyLldvcmxkYCBpcyBhIGBNYXR0ZXIuQ29tcG9zaXRlYCBib2R5LCB3aGljaCBpcyBhIGNvbGxlY3Rpb24gb2YgYE1hdHRlci5Cb2R5YCwgYE1hdHRlci5Db25zdHJhaW50YCBhbmQgb3RoZXIgYE1hdHRlci5Db21wb3NpdGVgLlxuKiBBIGBNYXR0ZXIuV29ybGRgIGhhcyBhIGZldyBhZGRpdGlvbmFsIHByb3BlcnRpZXMgaW5jbHVkaW5nIGBncmF2aXR5YCBhbmQgYGJvdW5kc2AuXG4qIEl0IGlzIGltcG9ydGFudCB0byB1c2UgdGhlIGZ1bmN0aW9ucyBpbiB0aGUgYE1hdHRlci5Db21wb3NpdGVgIG1vZHVsZSB0byBtb2RpZnkgdGhlIHdvcmxkIGNvbXBvc2l0ZSwgcmF0aGVyIHRoYW4gZGlyZWN0bHkgbW9kaWZ5aW5nIGl0cyBwcm9wZXJ0aWVzLlxuKiBUaGVyZSBhcmUgYWxzbyBhIGZldyBtZXRob2RzIGhlcmUgdGhhdCBhbGlhcyB0aG9zZSBpbiBgTWF0dGVyLkNvbXBvc2l0ZWAgZm9yIGVhc2llciByZWFkYWJpbGl0eS5cbipcbiogU2VlIHRoZSBpbmNsdWRlZCB1c2FnZSBbZXhhbXBsZXNdKGh0dHBzOi8vZ2l0aHViLmNvbS9saWFicnUvbWF0dGVyLWpzL3RyZWUvbWFzdGVyL2V4YW1wbGVzKS5cbipcbiogQGNsYXNzIFdvcmxkXG4qIEBleHRlbmRzIENvbXBvc2l0ZVxuKi9cblxudmFyIFdvcmxkID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gV29ybGQ7XG5cbnZhciBDb21wb3NpdGUgPSByZXF1aXJlKCcuL0NvbXBvc2l0ZScpO1xudmFyIENvbnN0cmFpbnQgPSByZXF1aXJlKCcuLi9jb25zdHJhaW50L0NvbnN0cmFpbnQnKTtcbnZhciBDb21tb24gPSByZXF1aXJlKCcuLi9jb3JlL0NvbW1vbicpO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IHdvcmxkIGNvbXBvc2l0ZS4gVGhlIG9wdGlvbnMgcGFyYW1ldGVyIGlzIGFuIG9iamVjdCB0aGF0IHNwZWNpZmllcyBhbnkgcHJvcGVydGllcyB5b3Ugd2lzaCB0byBvdmVycmlkZSB0aGUgZGVmYXVsdHMuXG4gICAgICogU2VlIHRoZSBwcm9wZXJ0aWVzIHNlY3Rpb24gYmVsb3cgZm9yIGRldGFpbGVkIGluZm9ybWF0aW9uIG9uIHdoYXQgeW91IGNhbiBwYXNzIHZpYSB0aGUgYG9wdGlvbnNgIG9iamVjdC5cbiAgICAgKiBAbWV0aG9kIGNyZWF0ZVxuICAgICAqIEBjb25zdHJ1Y3RvclxuICAgICAqIEBwYXJhbSB7fSBvcHRpb25zXG4gICAgICogQHJldHVybiB7d29ybGR9IEEgbmV3IHdvcmxkXG4gICAgICovXG4gICAgV29ybGQuY3JlYXRlID0gZnVuY3Rpb24ob3B0aW9ucykge1xuICAgICAgICB2YXIgY29tcG9zaXRlID0gQ29tcG9zaXRlLmNyZWF0ZSgpO1xuXG4gICAgICAgIHZhciBkZWZhdWx0cyA9IHtcbiAgICAgICAgICAgIGxhYmVsOiAnV29ybGQnLFxuICAgICAgICAgICAgZ3Jhdml0eToge1xuICAgICAgICAgICAgICAgIHg6IDAsXG4gICAgICAgICAgICAgICAgeTogMSxcbiAgICAgICAgICAgICAgICBzY2FsZTogMC4wMDFcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBib3VuZHM6IHsgXG4gICAgICAgICAgICAgICAgbWluOiB7IHg6IC1JbmZpbml0eSwgeTogLUluZmluaXR5IH0sIFxuICAgICAgICAgICAgICAgIG1heDogeyB4OiBJbmZpbml0eSwgeTogSW5maW5pdHkgfSBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBDb21tb24uZXh0ZW5kKGNvbXBvc2l0ZSwgZGVmYXVsdHMsIG9wdGlvbnMpO1xuICAgIH07XG5cbiAgICAvKlxuICAgICpcbiAgICAqICBQcm9wZXJ0aWVzIERvY3VtZW50YXRpb25cbiAgICAqXG4gICAgKi9cblxuICAgIC8qKlxuICAgICAqIFRoZSBncmF2aXR5IHRvIGFwcGx5IG9uIHRoZSB3b3JsZC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBncmF2aXR5XG4gICAgICogQHR5cGUgb2JqZWN0XG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBUaGUgZ3Jhdml0eSB4IGNvbXBvbmVudC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBncmF2aXR5LnhcbiAgICAgKiBAdHlwZSBvYmplY3RcbiAgICAgKiBAZGVmYXVsdCAwXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBUaGUgZ3Jhdml0eSB5IGNvbXBvbmVudC5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBncmF2aXR5LnlcbiAgICAgKiBAdHlwZSBvYmplY3RcbiAgICAgKiBAZGVmYXVsdCAxXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBUaGUgZ3Jhdml0eSBzY2FsZSBmYWN0b3IuXG4gICAgICpcbiAgICAgKiBAcHJvcGVydHkgZ3Jhdml0eS5zY2FsZVxuICAgICAqIEB0eXBlIG9iamVjdFxuICAgICAqIEBkZWZhdWx0IDAuMDAxXG4gICAgICovXG5cbiAgICAvKipcbiAgICAgKiBBIGBCb3VuZHNgIG9iamVjdCB0aGF0IGRlZmluZXMgdGhlIHdvcmxkIGJvdW5kcyBmb3IgY29sbGlzaW9uIGRldGVjdGlvbi5cbiAgICAgKlxuICAgICAqIEBwcm9wZXJ0eSBib3VuZHNcbiAgICAgKiBAdHlwZSBib3VuZHNcbiAgICAgKiBAZGVmYXVsdCB7IG1pbjogeyB4OiAtSW5maW5pdHksIHk6IC1JbmZpbml0eSB9LCBtYXg6IHsgeDogSW5maW5pdHksIHk6IEluZmluaXR5IH0gfVxuICAgICAqL1xuXG4gICAgLy8gV29ybGQgaXMgYSBDb21wb3NpdGUgYm9keVxuICAgIC8vIHNlZSBzcmMvbW9kdWxlL091dHJvLmpzIGZvciB0aGVzZSBhbGlhc2VzOlxuICAgIFxuICAgIC8qKlxuICAgICAqIEFuIGFsaWFzIGZvciBDb21wb3NpdGUuY2xlYXJcbiAgICAgKiBAbWV0aG9kIGNsZWFyXG4gICAgICogQHBhcmFtIHt3b3JsZH0gd29ybGRcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IGtlZXBTdGF0aWNcbiAgICAgKi9cblxuICAgIC8qKlxuICAgICAqIEFuIGFsaWFzIGZvciBDb21wb3NpdGUuYWRkXG4gICAgICogQG1ldGhvZCBhZGRDb21wb3NpdGVcbiAgICAgKiBAcGFyYW0ge3dvcmxkfSB3b3JsZFxuICAgICAqIEBwYXJhbSB7Y29tcG9zaXRlfSBjb21wb3NpdGVcbiAgICAgKiBAcmV0dXJuIHt3b3JsZH0gVGhlIG9yaWdpbmFsIHdvcmxkIHdpdGggdGhlIG9iamVjdHMgZnJvbSBjb21wb3NpdGUgYWRkZWRcbiAgICAgKi9cbiAgICBcbiAgICAgLyoqXG4gICAgICAqIEFuIGFsaWFzIGZvciBDb21wb3NpdGUuYWRkQm9keVxuICAgICAgKiBAbWV0aG9kIGFkZEJvZHlcbiAgICAgICogQHBhcmFtIHt3b3JsZH0gd29ybGRcbiAgICAgICogQHBhcmFtIHtib2R5fSBib2R5XG4gICAgICAqIEByZXR1cm4ge3dvcmxkfSBUaGUgb3JpZ2luYWwgd29ybGQgd2l0aCB0aGUgYm9keSBhZGRlZFxuICAgICAgKi9cblxuICAgICAvKipcbiAgICAgICogQW4gYWxpYXMgZm9yIENvbXBvc2l0ZS5hZGRDb25zdHJhaW50XG4gICAgICAqIEBtZXRob2QgYWRkQ29uc3RyYWludFxuICAgICAgKiBAcGFyYW0ge3dvcmxkfSB3b3JsZFxuICAgICAgKiBAcGFyYW0ge2NvbnN0cmFpbnR9IGNvbnN0cmFpbnRcbiAgICAgICogQHJldHVybiB7d29ybGR9IFRoZSBvcmlnaW5hbCB3b3JsZCB3aXRoIHRoZSBjb25zdHJhaW50IGFkZGVkXG4gICAgICAqL1xuXG59KSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L21hdHRlci1qcy9zcmMvYm9keS9Xb3JsZC5qc1xuLy8gbW9kdWxlIGlkID0gNjZcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 67 */
/* no static exports found */
/* all exports used */
/*!**********************************************!*\
  !*** ./~/matter-js/src/collision/Contact.js ***!
  \**********************************************/
/***/ (function(module, exports) {

eval("/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hdHRlci1qcy9zcmMvY29sbGlzaW9uL0NvbnRhY3QuanM/OGYxMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiogVGhlIGBNYXR0ZXIuQ29udGFjdGAgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIGNyZWF0aW5nIGFuZCBtYW5pcHVsYXRpbmcgY29sbGlzaW9uIGNvbnRhY3RzLlxuKlxuKiBAY2xhc3MgQ29udGFjdFxuKi9cblxudmFyIENvbnRhY3QgPSB7fTtcblxubW9kdWxlLmV4cG9ydHMgPSBDb250YWN0O1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IGNvbnRhY3QuXG4gICAgICogQG1ldGhvZCBjcmVhdGVcbiAgICAgKiBAcGFyYW0ge3ZlcnRleH0gdmVydGV4XG4gICAgICogQHJldHVybiB7Y29udGFjdH0gQSBuZXcgY29udGFjdFxuICAgICAqL1xuICAgIENvbnRhY3QuY3JlYXRlID0gZnVuY3Rpb24odmVydGV4KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpZDogQ29udGFjdC5pZCh2ZXJ0ZXgpLFxuICAgICAgICAgICAgdmVydGV4OiB2ZXJ0ZXgsXG4gICAgICAgICAgICBub3JtYWxJbXB1bHNlOiAwLFxuICAgICAgICAgICAgdGFuZ2VudEltcHVsc2U6IDBcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIFxuICAgIC8qKlxuICAgICAqIEdlbmVyYXRlcyBhIGNvbnRhY3QgaWQuXG4gICAgICogQG1ldGhvZCBpZFxuICAgICAqIEBwYXJhbSB7dmVydGV4fSB2ZXJ0ZXhcbiAgICAgKiBAcmV0dXJuIHtzdHJpbmd9IFVuaXF1ZSBjb250YWN0SURcbiAgICAgKi9cbiAgICBDb250YWN0LmlkID0gZnVuY3Rpb24odmVydGV4KSB7XG4gICAgICAgIHJldHVybiB2ZXJ0ZXguYm9keS5pZCArICdfJyArIHZlcnRleC5pbmRleDtcbiAgICB9O1xuXG59KSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L21hdHRlci1qcy9zcmMvY29sbGlzaW9uL0NvbnRhY3QuanNcbi8vIG1vZHVsZSBpZCA9IDY3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 68 */
/* no static exports found */
/* all exports used */
/*!********************************************!*\
  !*** ./~/matter-js/src/collision/Pairs.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = __webpack_require__(/*! ./Pair */ 25);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\n\n(function() {\n    \n    var _pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > _pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hdHRlci1qcy9zcmMvY29sbGlzaW9uL1BhaXJzLmpzPzZiYzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4qIFRoZSBgTWF0dGVyLlBhaXJzYCBtb2R1bGUgY29udGFpbnMgbWV0aG9kcyBmb3IgY3JlYXRpbmcgYW5kIG1hbmlwdWxhdGluZyBjb2xsaXNpb24gcGFpciBzZXRzLlxuKlxuKiBAY2xhc3MgUGFpcnNcbiovXG5cbnZhciBQYWlycyA9IHt9O1xuXG5tb2R1bGUuZXhwb3J0cyA9IFBhaXJzO1xuXG52YXIgUGFpciA9IHJlcXVpcmUoJy4vUGFpcicpO1xudmFyIENvbW1vbiA9IHJlcXVpcmUoJy4uL2NvcmUvQ29tbW9uJyk7XG5cbihmdW5jdGlvbigpIHtcbiAgICBcbiAgICB2YXIgX3BhaXJNYXhJZGxlTGlmZSA9IDEwMDA7XG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIGEgbmV3IHBhaXJzIHN0cnVjdHVyZS5cbiAgICAgKiBAbWV0aG9kIGNyZWF0ZVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBvcHRpb25zXG4gICAgICogQHJldHVybiB7cGFpcnN9IEEgbmV3IHBhaXJzIHN0cnVjdHVyZVxuICAgICAqL1xuICAgIFBhaXJzLmNyZWF0ZSA9IGZ1bmN0aW9uKG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIENvbW1vbi5leHRlbmQoeyBcbiAgICAgICAgICAgIHRhYmxlOiB7fSxcbiAgICAgICAgICAgIGxpc3Q6IFtdLFxuICAgICAgICAgICAgY29sbGlzaW9uU3RhcnQ6IFtdLFxuICAgICAgICAgICAgY29sbGlzaW9uQWN0aXZlOiBbXSxcbiAgICAgICAgICAgIGNvbGxpc2lvbkVuZDogW11cbiAgICAgICAgfSwgb3B0aW9ucyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFVwZGF0ZXMgcGFpcnMgZ2l2ZW4gYSBsaXN0IG9mIGNvbGxpc2lvbnMuXG4gICAgICogQG1ldGhvZCB1cGRhdGVcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gcGFpcnNcbiAgICAgKiBAcGFyYW0ge2NvbGxpc2lvbltdfSBjb2xsaXNpb25zXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHRpbWVzdGFtcFxuICAgICAqL1xuICAgIFBhaXJzLnVwZGF0ZSA9IGZ1bmN0aW9uKHBhaXJzLCBjb2xsaXNpb25zLCB0aW1lc3RhbXApIHtcbiAgICAgICAgdmFyIHBhaXJzTGlzdCA9IHBhaXJzLmxpc3QsXG4gICAgICAgICAgICBwYWlyc1RhYmxlID0gcGFpcnMudGFibGUsXG4gICAgICAgICAgICBjb2xsaXNpb25TdGFydCA9IHBhaXJzLmNvbGxpc2lvblN0YXJ0LFxuICAgICAgICAgICAgY29sbGlzaW9uRW5kID0gcGFpcnMuY29sbGlzaW9uRW5kLFxuICAgICAgICAgICAgY29sbGlzaW9uQWN0aXZlID0gcGFpcnMuY29sbGlzaW9uQWN0aXZlLFxuICAgICAgICAgICAgYWN0aXZlUGFpcklkcyA9IFtdLFxuICAgICAgICAgICAgY29sbGlzaW9uLFxuICAgICAgICAgICAgcGFpcklkLFxuICAgICAgICAgICAgcGFpcixcbiAgICAgICAgICAgIGk7XG5cbiAgICAgICAgLy8gY2xlYXIgY29sbGlzaW9uIHN0YXRlIGFycmF5cywgYnV0IG1haW50YWluIG9sZCByZWZlcmVuY2VcbiAgICAgICAgY29sbGlzaW9uU3RhcnQubGVuZ3RoID0gMDtcbiAgICAgICAgY29sbGlzaW9uRW5kLmxlbmd0aCA9IDA7XG4gICAgICAgIGNvbGxpc2lvbkFjdGl2ZS5sZW5ndGggPSAwO1xuXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBjb2xsaXNpb25zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBjb2xsaXNpb24gPSBjb2xsaXNpb25zW2ldO1xuXG4gICAgICAgICAgICBpZiAoY29sbGlzaW9uLmNvbGxpZGVkKSB7XG4gICAgICAgICAgICAgICAgcGFpcklkID0gUGFpci5pZChjb2xsaXNpb24uYm9keUEsIGNvbGxpc2lvbi5ib2R5Qik7XG4gICAgICAgICAgICAgICAgYWN0aXZlUGFpcklkcy5wdXNoKHBhaXJJZCk7XG5cbiAgICAgICAgICAgICAgICBwYWlyID0gcGFpcnNUYWJsZVtwYWlySWRdO1xuICAgICAgICAgICAgICAgIFxuICAgICAgICAgICAgICAgIGlmIChwYWlyKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHBhaXIgYWxyZWFkeSBleGlzdHMgKGJ1dCBtYXkgb3IgbWF5IG5vdCBiZSBhY3RpdmUpXG4gICAgICAgICAgICAgICAgICAgIGlmIChwYWlyLmlzQWN0aXZlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBwYWlyIGV4aXN0cyBhbmQgaXMgYWN0aXZlXG4gICAgICAgICAgICAgICAgICAgICAgICBjb2xsaXNpb25BY3RpdmUucHVzaChwYWlyKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHBhaXIgZXhpc3RzIGJ1dCB3YXMgaW5hY3RpdmUsIHNvIGEgY29sbGlzaW9uIGhhcyBqdXN0IHN0YXJ0ZWQgYWdhaW5cbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxpc2lvblN0YXJ0LnB1c2gocGFpcik7XG4gICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAvLyB1cGRhdGUgdGhlIHBhaXJcbiAgICAgICAgICAgICAgICAgICAgUGFpci51cGRhdGUocGFpciwgY29sbGlzaW9uLCB0aW1lc3RhbXApO1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIHBhaXIgZGlkIG5vdCBleGlzdCwgY3JlYXRlIGEgbmV3IHBhaXJcbiAgICAgICAgICAgICAgICAgICAgcGFpciA9IFBhaXIuY3JlYXRlKGNvbGxpc2lvbiwgdGltZXN0YW1wKTtcbiAgICAgICAgICAgICAgICAgICAgcGFpcnNUYWJsZVtwYWlySWRdID0gcGFpcjtcblxuICAgICAgICAgICAgICAgICAgICAvLyBwdXNoIHRoZSBuZXcgcGFpclxuICAgICAgICAgICAgICAgICAgICBjb2xsaXNpb25TdGFydC5wdXNoKHBhaXIpO1xuICAgICAgICAgICAgICAgICAgICBwYWlyc0xpc3QucHVzaChwYWlyKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBkZWFjdGl2YXRlIHByZXZpb3VzbHkgYWN0aXZlIHBhaXJzIHRoYXQgYXJlIG5vdyBpbmFjdGl2ZVxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcGFpcnNMaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBwYWlyID0gcGFpcnNMaXN0W2ldO1xuICAgICAgICAgICAgaWYgKHBhaXIuaXNBY3RpdmUgJiYgQ29tbW9uLmluZGV4T2YoYWN0aXZlUGFpcklkcywgcGFpci5pZCkgPT09IC0xKSB7XG4gICAgICAgICAgICAgICAgUGFpci5zZXRBY3RpdmUocGFpciwgZmFsc2UsIHRpbWVzdGFtcCk7XG4gICAgICAgICAgICAgICAgY29sbGlzaW9uRW5kLnB1c2gocGFpcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFxuICAgIC8qKlxuICAgICAqIEZpbmRzIGFuZCByZW1vdmVzIHBhaXJzIHRoYXQgaGF2ZSBiZWVuIGluYWN0aXZlIGZvciBhIHNldCBhbW91bnQgb2YgdGltZS5cbiAgICAgKiBAbWV0aG9kIHJlbW92ZU9sZFxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBwYWlyc1xuICAgICAqIEBwYXJhbSB7bnVtYmVyfSB0aW1lc3RhbXBcbiAgICAgKi9cbiAgICBQYWlycy5yZW1vdmVPbGQgPSBmdW5jdGlvbihwYWlycywgdGltZXN0YW1wKSB7XG4gICAgICAgIHZhciBwYWlyc0xpc3QgPSBwYWlycy5saXN0LFxuICAgICAgICAgICAgcGFpcnNUYWJsZSA9IHBhaXJzLnRhYmxlLFxuICAgICAgICAgICAgaW5kZXhlc1RvUmVtb3ZlID0gW10sXG4gICAgICAgICAgICBwYWlyLFxuICAgICAgICAgICAgY29sbGlzaW9uLFxuICAgICAgICAgICAgcGFpckluZGV4LFxuICAgICAgICAgICAgaTtcblxuICAgICAgICBmb3IgKGkgPSAwOyBpIDwgcGFpcnNMaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgICAgICAgICBwYWlyID0gcGFpcnNMaXN0W2ldO1xuICAgICAgICAgICAgY29sbGlzaW9uID0gcGFpci5jb2xsaXNpb247XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIC8vIG5ldmVyIHJlbW92ZSBzbGVlcGluZyBwYWlyc1xuICAgICAgICAgICAgaWYgKGNvbGxpc2lvbi5ib2R5QS5pc1NsZWVwaW5nIHx8IGNvbGxpc2lvbi5ib2R5Qi5pc1NsZWVwaW5nKSB7XG4gICAgICAgICAgICAgICAgcGFpci50aW1lVXBkYXRlZCA9IHRpbWVzdGFtcDtcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgLy8gaWYgcGFpciBpcyBpbmFjdGl2ZSBmb3IgdG9vIGxvbmcsIG1hcmsgaXQgdG8gYmUgcmVtb3ZlZFxuICAgICAgICAgICAgaWYgKHRpbWVzdGFtcCAtIHBhaXIudGltZVVwZGF0ZWQgPiBfcGFpck1heElkbGVMaWZlKSB7XG4gICAgICAgICAgICAgICAgaW5kZXhlc1RvUmVtb3ZlLnB1c2goaSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyByZW1vdmUgbWFya2VkIHBhaXJzXG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBpbmRleGVzVG9SZW1vdmUubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHBhaXJJbmRleCA9IGluZGV4ZXNUb1JlbW92ZVtpXSAtIGk7XG4gICAgICAgICAgICBwYWlyID0gcGFpcnNMaXN0W3BhaXJJbmRleF07XG4gICAgICAgICAgICBkZWxldGUgcGFpcnNUYWJsZVtwYWlyLmlkXTtcbiAgICAgICAgICAgIHBhaXJzTGlzdC5zcGxpY2UocGFpckluZGV4LCAxKTtcbiAgICAgICAgfVxuICAgIH07XG5cbiAgICAvKipcbiAgICAgKiBDbGVhcnMgdGhlIGdpdmVuIHBhaXJzIHN0cnVjdHVyZS5cbiAgICAgKiBAbWV0aG9kIGNsZWFyXG4gICAgICogQHBhcmFtIHtwYWlyc30gcGFpcnNcbiAgICAgKiBAcmV0dXJuIHtwYWlyc30gcGFpcnNcbiAgICAgKi9cbiAgICBQYWlycy5jbGVhciA9IGZ1bmN0aW9uKHBhaXJzKSB7XG4gICAgICAgIHBhaXJzLnRhYmxlID0ge307XG4gICAgICAgIHBhaXJzLmxpc3QubGVuZ3RoID0gMDtcbiAgICAgICAgcGFpcnMuY29sbGlzaW9uU3RhcnQubGVuZ3RoID0gMDtcbiAgICAgICAgcGFpcnMuY29sbGlzaW9uQWN0aXZlLmxlbmd0aCA9IDA7XG4gICAgICAgIHBhaXJzLmNvbGxpc2lvbkVuZC5sZW5ndGggPSAwO1xuICAgICAgICByZXR1cm4gcGFpcnM7XG4gICAgfTtcblxufSkoKTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9tYXR0ZXItanMvc3JjL2NvbGxpc2lvbi9QYWlycy5qc1xuLy8gbW9kdWxlIGlkID0gNjhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 69 */
/* no static exports found */
/* all exports used */
/*!***********************************************!*\
  !*** ./~/matter-js/src/collision/Resolver.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = __webpack_require__(/*! ../geometry/Vertices */ 7);\nvar Vector = __webpack_require__(/*! ../geometry/Vector */ 3);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\nvar Bounds = __webpack_require__(/*! ../geometry/Bounds */ 2);\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor || pair.separation < 0)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 70 */
/* no static exports found */
/* all exports used */
/*!****************************************!*\
  !*** ./~/matter-js/src/core/Engine.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = __webpack_require__(/*! ../body/World */ 66);\nvar Sleeping = __webpack_require__(/*! ./Sleeping */ 21);\nvar Resolver = __webpack_require__(/*! ../collision/Resolver */ 69);\nvar Render = __webpack_require__(/*! ../render/Render */ 36);\nvar Pairs = __webpack_require__(/*! ../collision/Pairs */ 68);\nvar Metrics = __webpack_require__(/*! ./Metrics */ 71);\nvar Grid = __webpack_require__(/*! ../collision/Grid */ 32);\nvar Events = __webpack_require__(/*! ./Events */ 13);\nvar Composite = __webpack_require__(/*! ../body/Composite */ 6);\nvar Constraint = __webpack_require__(/*! ../constraint/Constraint */ 20);\nvar Common = __webpack_require__(/*! ./Common */ 1);\nvar Body = __webpack_require__(/*! ../body/Body */ 19);\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.log('Engine.create: engine.render is deprecated (see docs)', 'warn');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n        // @if DEBUG\n        engine.metrics = Metrics.create(engine.metrics);\n        // @endif\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n        // @if DEBUG\n        // reset metrics logging\n        Metrics.reset(engine.metrics);\n        // @endif\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        _bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        _bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n        // @if DEBUG\n        // update metrics log\n        Metrics.update(engine.metrics, engine);\n        // @endif\n\n        // clear force buffers\n        _bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    var _bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    var _bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method updateAll\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    var _bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 71 */
/* no static exports found */
/* all exports used */
/*!*****************************************!*\
  !*** ./~/matter-js/src/core/Metrics.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("// @if DEBUG\n/**\n* _Internal Class_, not generally used outside of the engine's internals.\n*\n*/\n\nvar Metrics = {};\n\nmodule.exports = Metrics;\n\nvar Composite = __webpack_require__(/*! ../body/Composite */ 6);\nvar Common = __webpack_require__(/*! ./Common */ 1);\n\n(function() {\n\n    /**\n     * Creates a new metrics.\n     * @method create\n     * @private\n     * @return {metrics} A new metrics\n     */\n    Metrics.create = function(options) {\n        var defaults = {\n            extended: false,\n            narrowDetections: 0,\n            narrowphaseTests: 0,\n            narrowReuse: 0,\n            narrowReuseCount: 0,\n            midphaseTests: 0,\n            broadphaseTests: 0,\n            narrowEff: 0.0001,\n            midEff: 0.0001,\n            broadEff: 0.0001,\n            collisions: 0,\n            buckets: 0,\n            bodies: 0,\n            pairs: 0\n        };\n\n        return Common.extend(defaults, false, options);\n    };\n\n    /**\n     * Resets metrics.\n     * @method reset\n     * @private\n     * @param {metrics} metrics\n     */\n    Metrics.reset = function(metrics) {\n        if (metrics.extended) {\n            metrics.narrowDetections = 0;\n            metrics.narrowphaseTests = 0;\n            metrics.narrowReuse = 0;\n            metrics.narrowReuseCount = 0;\n            metrics.midphaseTests = 0;\n            metrics.broadphaseTests = 0;\n            metrics.narrowEff = 0;\n            metrics.midEff = 0;\n            metrics.broadEff = 0;\n            metrics.collisions = 0;\n            metrics.buckets = 0;\n            metrics.pairs = 0;\n            metrics.bodies = 0;\n        }\n    };\n\n    /**\n     * Updates metrics.\n     * @method update\n     * @private\n     * @param {metrics} metrics\n     * @param {engine} engine\n     */\n    Metrics.update = function(metrics, engine) {\n        if (metrics.extended) {\n            var world = engine.world,\n                bodies = Composite.allBodies(world);\n\n            metrics.collisions = metrics.narrowDetections;\n            metrics.pairs = engine.pairs.list.length;\n            metrics.bodies = bodies.length;\n            metrics.midEff = (metrics.narrowDetections / (metrics.midphaseTests || 1)).toFixed(2);\n            metrics.narrowEff = (metrics.narrowDetections / (metrics.narrowphaseTests || 1)).toFixed(2);\n            metrics.broadEff = (1 - (metrics.broadphaseTests / (bodies.length || 1))).toFixed(2);\n            metrics.narrowReuse = (metrics.narrowReuseCount / (metrics.narrowphaseTests || 1)).toFixed(2);\n            //var broadphase = engine.broadphase[engine.broadphase.current];\n            //if (broadphase.instance)\n            //    metrics.buckets = Common.keys(broadphase.instance.buckets).length;\n        }\n    };\n\n})();\n// @endif\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9+L21hdHRlci1qcy9zcmMvY29yZS9NZXRyaWNzLmpzPzZmNjEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQGlmIERFQlVHXG4vKipcbiogX0ludGVybmFsIENsYXNzXywgbm90IGdlbmVyYWxseSB1c2VkIG91dHNpZGUgb2YgdGhlIGVuZ2luZSdzIGludGVybmFscy5cbipcbiovXG5cbnZhciBNZXRyaWNzID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gTWV0cmljcztcblxudmFyIENvbXBvc2l0ZSA9IHJlcXVpcmUoJy4uL2JvZHkvQ29tcG9zaXRlJyk7XG52YXIgQ29tbW9uID0gcmVxdWlyZSgnLi9Db21tb24nKTtcblxuKGZ1bmN0aW9uKCkge1xuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlcyBhIG5ldyBtZXRyaWNzLlxuICAgICAqIEBtZXRob2QgY3JlYXRlXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcmV0dXJuIHttZXRyaWNzfSBBIG5ldyBtZXRyaWNzXG4gICAgICovXG4gICAgTWV0cmljcy5jcmVhdGUgPSBmdW5jdGlvbihvcHRpb25zKSB7XG4gICAgICAgIHZhciBkZWZhdWx0cyA9IHtcbiAgICAgICAgICAgIGV4dGVuZGVkOiBmYWxzZSxcbiAgICAgICAgICAgIG5hcnJvd0RldGVjdGlvbnM6IDAsXG4gICAgICAgICAgICBuYXJyb3dwaGFzZVRlc3RzOiAwLFxuICAgICAgICAgICAgbmFycm93UmV1c2U6IDAsXG4gICAgICAgICAgICBuYXJyb3dSZXVzZUNvdW50OiAwLFxuICAgICAgICAgICAgbWlkcGhhc2VUZXN0czogMCxcbiAgICAgICAgICAgIGJyb2FkcGhhc2VUZXN0czogMCxcbiAgICAgICAgICAgIG5hcnJvd0VmZjogMC4wMDAxLFxuICAgICAgICAgICAgbWlkRWZmOiAwLjAwMDEsXG4gICAgICAgICAgICBicm9hZEVmZjogMC4wMDAxLFxuICAgICAgICAgICAgY29sbGlzaW9uczogMCxcbiAgICAgICAgICAgIGJ1Y2tldHM6IDAsXG4gICAgICAgICAgICBib2RpZXM6IDAsXG4gICAgICAgICAgICBwYWlyczogMFxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBDb21tb24uZXh0ZW5kKGRlZmF1bHRzLCBmYWxzZSwgb3B0aW9ucyk7XG4gICAgfTtcblxuICAgIC8qKlxuICAgICAqIFJlc2V0cyBtZXRyaWNzLlxuICAgICAqIEBtZXRob2QgcmVzZXRcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7bWV0cmljc30gbWV0cmljc1xuICAgICAqL1xuICAgIE1ldHJpY3MucmVzZXQgPSBmdW5jdGlvbihtZXRyaWNzKSB7XG4gICAgICAgIGlmIChtZXRyaWNzLmV4dGVuZGVkKSB7XG4gICAgICAgICAgICBtZXRyaWNzLm5hcnJvd0RldGVjdGlvbnMgPSAwO1xuICAgICAgICAgICAgbWV0cmljcy5uYXJyb3dwaGFzZVRlc3RzID0gMDtcbiAgICAgICAgICAgIG1ldHJpY3MubmFycm93UmV1c2UgPSAwO1xuICAgICAgICAgICAgbWV0cmljcy5uYXJyb3dSZXVzZUNvdW50ID0gMDtcbiAgICAgICAgICAgIG1ldHJpY3MubWlkcGhhc2VUZXN0cyA9IDA7XG4gICAgICAgICAgICBtZXRyaWNzLmJyb2FkcGhhc2VUZXN0cyA9IDA7XG4gICAgICAgICAgICBtZXRyaWNzLm5hcnJvd0VmZiA9IDA7XG4gICAgICAgICAgICBtZXRyaWNzLm1pZEVmZiA9IDA7XG4gICAgICAgICAgICBtZXRyaWNzLmJyb2FkRWZmID0gMDtcbiAgICAgICAgICAgIG1ldHJpY3MuY29sbGlzaW9ucyA9IDA7XG4gICAgICAgICAgICBtZXRyaWNzLmJ1Y2tldHMgPSAwO1xuICAgICAgICAgICAgbWV0cmljcy5wYWlycyA9IDA7XG4gICAgICAgICAgICBtZXRyaWNzLmJvZGllcyA9IDA7XG4gICAgICAgIH1cbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogVXBkYXRlcyBtZXRyaWNzLlxuICAgICAqIEBtZXRob2QgdXBkYXRlXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge21ldHJpY3N9IG1ldHJpY3NcbiAgICAgKiBAcGFyYW0ge2VuZ2luZX0gZW5naW5lXG4gICAgICovXG4gICAgTWV0cmljcy51cGRhdGUgPSBmdW5jdGlvbihtZXRyaWNzLCBlbmdpbmUpIHtcbiAgICAgICAgaWYgKG1ldHJpY3MuZXh0ZW5kZWQpIHtcbiAgICAgICAgICAgIHZhciB3b3JsZCA9IGVuZ2luZS53b3JsZCxcbiAgICAgICAgICAgICAgICBib2RpZXMgPSBDb21wb3NpdGUuYWxsQm9kaWVzKHdvcmxkKTtcblxuICAgICAgICAgICAgbWV0cmljcy5jb2xsaXNpb25zID0gbWV0cmljcy5uYXJyb3dEZXRlY3Rpb25zO1xuICAgICAgICAgICAgbWV0cmljcy5wYWlycyA9IGVuZ2luZS5wYWlycy5saXN0Lmxlbmd0aDtcbiAgICAgICAgICAgIG1ldHJpY3MuYm9kaWVzID0gYm9kaWVzLmxlbmd0aDtcbiAgICAgICAgICAgIG1ldHJpY3MubWlkRWZmID0gKG1ldHJpY3MubmFycm93RGV0ZWN0aW9ucyAvIChtZXRyaWNzLm1pZHBoYXNlVGVzdHMgfHwgMSkpLnRvRml4ZWQoMik7XG4gICAgICAgICAgICBtZXRyaWNzLm5hcnJvd0VmZiA9IChtZXRyaWNzLm5hcnJvd0RldGVjdGlvbnMgLyAobWV0cmljcy5uYXJyb3dwaGFzZVRlc3RzIHx8IDEpKS50b0ZpeGVkKDIpO1xuICAgICAgICAgICAgbWV0cmljcy5icm9hZEVmZiA9ICgxIC0gKG1ldHJpY3MuYnJvYWRwaGFzZVRlc3RzIC8gKGJvZGllcy5sZW5ndGggfHwgMSkpKS50b0ZpeGVkKDIpO1xuICAgICAgICAgICAgbWV0cmljcy5uYXJyb3dSZXVzZSA9IChtZXRyaWNzLm5hcnJvd1JldXNlQ291bnQgLyAobWV0cmljcy5uYXJyb3dwaGFzZVRlc3RzIHx8IDEpKS50b0ZpeGVkKDIpO1xuICAgICAgICAgICAgLy92YXIgYnJvYWRwaGFzZSA9IGVuZ2luZS5icm9hZHBoYXNlW2VuZ2luZS5icm9hZHBoYXNlLmN1cnJlbnRdO1xuICAgICAgICAgICAgLy9pZiAoYnJvYWRwaGFzZS5pbnN0YW5jZSlcbiAgICAgICAgICAgIC8vICAgIG1ldHJpY3MuYnVja2V0cyA9IENvbW1vbi5rZXlzKGJyb2FkcGhhc2UuaW5zdGFuY2UuYnVja2V0cykubGVuZ3RoO1xuICAgICAgICB9XG4gICAgfTtcblxufSkoKTtcbi8vIEBlbmRpZlxuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L21hdHRlci1qcy9zcmMvY29yZS9NZXRyaWNzLmpzXG4vLyBtb2R1bGUgaWQgPSA3MVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 72 */
/* no static exports found */
/* all exports used */
/*!***************************************!*\
  !*** ./~/matter-js/src/core/Mouse.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = _getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    var _getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / element.width * pixelRatio),\n            y: y / (element.clientHeight / element.height * pixelRatio)\n        };\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 73 */
/* exports provided: XPTO, AttributeDictionary, CallbackResponse, CONSTANTS, ContentLoader, EventManager, FileContext, Logger, Debug, SetterDictionary, RigidBody, ContentObject, ProjectFile, TextureAtlas, WorkspaceFile, Camera2D, Color, FontStyle, Game, GameManager, GameObject, GameScene, PrimitiveBatch, PrimitiveRender, Script, Scripts, addScript, assignScript, Sound, Sprite, SpriteBatch, Stroke, Text, Texture2D, Transform, WrapMode, GridExtension, KeyboardState, Keyboard, Keys, Boundary, MathHelper, Matrix3, Matrix4, Ray, Rectangle, Vector2, Vector3, Vector4, Shader, PrimitiveShader, ShaderManager, TestShader, TextShader, TextureShader, Objectify, Path, Utils, TextUtils, BMFontParser, BMFontParserAscii, WebGLContext, WebGLUtils, GLU, isObjectAssigned, isString, isNumber, isFunction, inheritsFrom, generateUID, splitCamelCase, capitalize, getType, isEqual */
/* all exports used */
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"XPTO\", function() { return XPTO; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__common__ = __webpack_require__(/*! ./common */ 75);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"AttributeDictionary\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CallbackResponse\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"CONSTANTS\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ContentLoader\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"EventManager\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"FileContext\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Logger\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"g\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Debug\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"h\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SetterDictionary\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"i\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"isObjectAssigned\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"j\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"isString\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"k\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"isNumber\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"l\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"isFunction\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"m\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"inheritsFrom\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"n\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"generateUID\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"o\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"splitCamelCase\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"p\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"capitalize\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"q\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"getType\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"r\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"isEqual\", function() { return __WEBPACK_IMPORTED_MODULE_0__common__[\"s\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__components__ = __webpack_require__(/*! ./components */ 76);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"RigidBody\", function() { return __WEBPACK_IMPORTED_MODULE_1__components__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__content__ = __webpack_require__(/*! ./content */ 79);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ContentObject\", function() { return __WEBPACK_IMPORTED_MODULE_2__content__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ProjectFile\", function() { return __WEBPACK_IMPORTED_MODULE_2__content__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TextureAtlas\", function() { return __WEBPACK_IMPORTED_MODULE_2__content__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WorkspaceFile\", function() { return __WEBPACK_IMPORTED_MODULE_2__content__[\"d\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__core__ = __webpack_require__(/*! ./core */ 83);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Camera2D\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Color\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"FontStyle\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Game\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GameManager\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GameObject\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GameScene\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"g\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PrimitiveBatch\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"h\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PrimitiveRender\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"i\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Script\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"j\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Scripts\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"k\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"addScript\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"l\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"assignScript\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"m\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Sound\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"n\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Sprite\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"o\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"SpriteBatch\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"p\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Stroke\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"q\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Text\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"r\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Texture2D\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"s\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Transform\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"t\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WrapMode\", function() { return __WEBPACK_IMPORTED_MODULE_3__core__[\"u\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__extensions__ = __webpack_require__(/*! ./extensions */ 88);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GridExtension\", function() { return __WEBPACK_IMPORTED_MODULE_4__extensions__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__input__ = __webpack_require__(/*! ./input */ 90);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"KeyboardState\", function() { return __WEBPACK_IMPORTED_MODULE_5__input__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Keyboard\", function() { return __WEBPACK_IMPORTED_MODULE_5__input__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Keys\", function() { return __WEBPACK_IMPORTED_MODULE_5__input__[\"c\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__math__ = __webpack_require__(/*! ./math */ 91);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Boundary\", function() { return __WEBPACK_IMPORTED_MODULE_6__math__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"MathHelper\", function() { return __WEBPACK_IMPORTED_MODULE_6__math__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Matrix3\", function() { return __WEBPACK_IMPORTED_MODULE_6__math__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Matrix4\", function() { return __WEBPACK_IMPORTED_MODULE_6__math__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Ray\", function() { return __WEBPACK_IMPORTED_MODULE_6__math__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Rectangle\", function() { return __WEBPACK_IMPORTED_MODULE_6__math__[\"f\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Vector2\", function() { return __WEBPACK_IMPORTED_MODULE_6__math__[\"g\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Vector3\", function() { return __WEBPACK_IMPORTED_MODULE_6__math__[\"h\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Vector4\", function() { return __WEBPACK_IMPORTED_MODULE_6__math__[\"i\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__shaders__ = __webpack_require__(/*! ./shaders */ 96);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Shader\", function() { return __WEBPACK_IMPORTED_MODULE_7__shaders__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"PrimitiveShader\", function() { return __WEBPACK_IMPORTED_MODULE_7__shaders__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"ShaderManager\", function() { return __WEBPACK_IMPORTED_MODULE_7__shaders__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TestShader\", function() { return __WEBPACK_IMPORTED_MODULE_7__shaders__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TextShader\", function() { return __WEBPACK_IMPORTED_MODULE_7__shaders__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TextureShader\", function() { return __WEBPACK_IMPORTED_MODULE_7__shaders__[\"f\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utility__ = __webpack_require__(/*! ./utility */ 98);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Objectify\", function() { return __WEBPACK_IMPORTED_MODULE_8__utility__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Path\", function() { return __WEBPACK_IMPORTED_MODULE_8__utility__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"Utils\", function() { return __WEBPACK_IMPORTED_MODULE_8__utility__[\"c\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"TextUtils\", function() { return __WEBPACK_IMPORTED_MODULE_8__utility__[\"d\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"BMFontParser\", function() { return __WEBPACK_IMPORTED_MODULE_8__utility__[\"e\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"BMFontParserAscii\", function() { return __WEBPACK_IMPORTED_MODULE_8__utility__[\"f\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__webgl__ = __webpack_require__(/*! ./webgl */ 99);\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WebGLContext\", function() { return __WEBPACK_IMPORTED_MODULE_9__webgl__[\"a\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"WebGLUtils\", function() { return __WEBPACK_IMPORTED_MODULE_9__webgl__[\"b\"]; });\n/* harmony namespace reexport (by provided) */ __webpack_require__.d(__webpack_exports__, \"GLU\", function() { return __WEBPACK_IMPORTED_MODULE_9__webgl__[\"c\"]; });\n\n\n\n\n\n\n\n\n\n\n\nlet XPTO = Symbol(\"#########!232131232\");//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2luZGV4LmpzPzFmZGYiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY29tbW9uXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb21wb25lbnRzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb250ZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9jb3JlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9leHRlbnNpb25zXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9pbnB1dFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbWF0aFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2hhZGVyc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vdXRpbGl0eVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vd2ViZ2xcIjtcblxuZXhwb3J0IGxldCBYUFRPID0gU3ltYm9sKFwiIyMjIyMjIyMjITIzMjEzMTIzMlwiKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvaW5kZXguanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 74 */
/* exports provided: default */
/* exports used: default */
/*!****************************************!*\
  !*** ./src/common/callbackResponse.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * CallbackResponse Class\r\n */\nclass CallbackResponse {\n  //#region Constructors\n\n  constructor(params) {\n    params = params || {};\n\n    this.success = params.success;\n    this.data = params.data || {};\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  isSuccessful() {\n    return this.success;\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = CallbackResponse;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1vbi9jYWxsYmFja1Jlc3BvbnNlLmpzPzI5NjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENhbGxiYWNrUmVzcG9uc2UgQ2xhc3NcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENhbGxiYWNrUmVzcG9uc2Uge1xyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcclxuXHJcbiAgY29uc3RydWN0b3IocGFyYW1zKSB7XHJcbiAgICBwYXJhbXMgPSBwYXJhbXMgfHwge307XHJcblxyXG4gICAgdGhpcy5zdWNjZXNzID0gcGFyYW1zLnN1Y2Nlc3M7XHJcbiAgICB0aGlzLmRhdGEgPSBwYXJhbXMuZGF0YSB8fCB7fTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNyZWdpb24gTWV0aG9kc1xyXG5cclxuICBpc1N1Y2Nlc3NmdWwoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5zdWNjZXNzO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb21tb24vY2FsbGJhY2tSZXNwb25zZS5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBbEJBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 75 */
/* exports provided: AttributeDictionary, CallbackResponse, CONSTANTS, ContentLoader, EventManager, FileContext, Logger, Debug, SetterDictionary, isObjectAssigned, isString, isNumber, isFunction, inheritsFrom, generateUID, splitCamelCase, capitalize, getType, isEqual */
/* exports used: AttributeDictionary, CallbackResponse, CONSTANTS, ContentLoader, EventManager, FileContext, Logger, Debug, SetterDictionary, isObjectAssigned, isString, isNumber, isFunction, inheritsFrom, generateUID, splitCamelCase, capitalize, getType, isEqual */
/*!*****************************!*\
  !*** ./src/common/index.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__attributeDictionary__ = __webpack_require__(/*! ./attributeDictionary */ 8);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__attributeDictionary__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__callbackResponse__ = __webpack_require__(/*! ./callbackResponse */ 74);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__callbackResponse__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(/*! ./constants */ 23);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__constants__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__contentLoader__ = __webpack_require__(/*! ./contentLoader */ 14);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__contentLoader__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__eventManager__ = __webpack_require__(/*! ./eventManager */ 37);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_4__eventManager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__fileContext__ = __webpack_require__(/*! ./fileContext */ 38);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_5__fileContext__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__logger__ = __webpack_require__(/*! ./logger */ 9);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_6__logger__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_6__logger__[\"b\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__setterDictionary__ = __webpack_require__(/*! ./setterDictionary */ 10);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_7__setterDictionary__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__utils__ = __webpack_require__(/*! ./utils */ 0);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_8__utils__[\"a\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_8__utils__[\"b\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return __WEBPACK_IMPORTED_MODULE_8__utils__[\"c\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return __WEBPACK_IMPORTED_MODULE_8__utils__[\"e\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return __WEBPACK_IMPORTED_MODULE_8__utils__[\"g\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return __WEBPACK_IMPORTED_MODULE_8__utils__[\"d\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return __WEBPACK_IMPORTED_MODULE_8__utils__[\"h\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return __WEBPACK_IMPORTED_MODULE_8__utils__[\"i\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return __WEBPACK_IMPORTED_MODULE_8__utils__[\"f\"]; });\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return __WEBPACK_IMPORTED_MODULE_8__utils__[\"j\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbW1vbi9pbmRleC5qcz81NTE3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IEF0dHJpYnV0ZURpY3Rpb25hcnkgfSBmcm9tIFwiLi9hdHRyaWJ1dGVEaWN0aW9uYXJ5XCI7XHJcblxyXG5leHBvcnQgeyBkZWZhdWx0IGFzIENhbGxiYWNrUmVzcG9uc2UgfSBmcm9tIFwiLi9jYWxsYmFja1Jlc3BvbnNlXCI7XHJcblxyXG5leHBvcnQgeyBDT05TVEFOVFMgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcclxuZXhwb3J0IHsgQ29udGVudExvYWRlciB9IGZyb20gXCIuL2NvbnRlbnRMb2FkZXJcIjtcclxuZXhwb3J0IHsgRXZlbnRNYW5hZ2VyIH0gZnJvbSBcIi4vZXZlbnRNYW5hZ2VyXCI7XHJcblxyXG5leHBvcnQgeyBkZWZhdWx0IGFzIEZpbGVDb250ZXh0IH0gZnJvbSBcIi4vZmlsZUNvbnRleHRcIjtcclxuXHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgTG9nZ2VyLCBEZWJ1ZyB9IGZyb20gXCIuL2xvZ2dlclwiO1xyXG5leHBvcnQgeyBTZXR0ZXJEaWN0aW9uYXJ5IH0gZnJvbSBcIi4vc2V0dGVyRGljdGlvbmFyeVwiO1xyXG5cclxuZXhwb3J0ICogZnJvbSBcIi4vdXRpbHNcIjtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb21tb24vaW5kZXguanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 76 */
/* exports provided: RigidBody */
/* exports used: RigidBody */
/*!*********************************!*\
  !*** ./src/components/index.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__rigidBody__ = __webpack_require__(/*! ./rigidBody */ 77);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__rigidBody__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvaW5kZXguanM/ZDZjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIFJpZ2lkQm9keSB9IGZyb20gXCIuL3JpZ2lkQm9keVwiO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvbXBvbmVudHMvaW5kZXguanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 77 */
/* exports provided: default */
/* exports used: default */
/*!*************************************!*\
  !*** ./src/components/rigidBody.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_matter_js__ = __webpack_require__(/*! matter-js */ 22);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_matter_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_matter_js__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_core_gameManager__ = __webpack_require__(/*! core/gameManager */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_utility_utils__ = __webpack_require__(/*! utility/utils */ 12);\n/**\n *    RigidBody Class\n */\n\n\n\n\n\n\nclass RigidBody {\n  //#region Constructors\n\n  /**\n     *\n     * @param params\n     */\n  constructor(params) {\n    params = params || {};\n\n    // public properties\n    this.gameObject = null;\n\n    // private properties\n    this._isStatic = params.static || false;\n    this._mass = params.mass || null;\n    this._friction = params.friction || null;\n    this._body = null;\n  }\n\n  //#endregion\n\n  //#region Public Methods\n\n  //#region Static Methods\n\n  //#endregion\n\n  setMass(mass) {\n    this._mass = mass;\n    __WEBPACK_IMPORTED_MODULE_0_matter_js___default.a.Body.setMass(this._body, this._mass);\n  }\n\n  getMass() {\n    return this.mass;\n  }\n\n  // eslint-disable-next-line\n  setGameObject(gameObject) {\n    this._sync();\n  }\n\n  onGameObjectDetach() {\n    this.gameObject.transform.clearPositionGetter();\n    this.gameObject.transform.clearScaleGetter();\n    this.gameObject.transform.clearRotationGetter();\n  }\n\n  onGameObjectPositionUpdated(value) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(this._body)) {\n      __WEBPACK_IMPORTED_MODULE_0_matter_js___default.a.Body.setPosition(this._body, value);\n    }\n  }\n\n  onGameObjectRotationUpdated(value) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(this._body)) {\n      __WEBPACK_IMPORTED_MODULE_0_matter_js___default.a.Body.setAngle(this._body, value);\n    }\n  }\n\n  onGameObjectScaleUpdated(value) {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(this._body)) {\n      __WEBPACK_IMPORTED_MODULE_0_matter_js___default.a.Body.scale(this._body, value.x, value.y);\n    }\n  }\n\n  unload() {}\n  // TODO: do this\n\n\n  //#endregion\n\n  //#region Private Methods\n\n  _sync() {\n    let self = this;\n\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(this.gameObject)) {\n      return;\n    }\n\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(this._body)) {\n      let pos = this.gameObject.transform.getPosition();\n\n      // TODO assign the body based on the object\n      let width = 1;\n      let height = 1;\n\n      if (__WEBPACK_IMPORTED_MODULE_3_utility_utils__[\"a\" /* default */].isSprite(this.gameObject)) {\n        width = this.gameObject.getTexture().getWidth();\n        height = this.gameObject.getTexture().getHeight();\n      }\n\n      this._body = __WEBPACK_IMPORTED_MODULE_0_matter_js___default.a.Bodies.rectangle(pos.x, pos.y, width, height, {\n        isStatic: this._isStatic\n      });\n\n      __WEBPACK_IMPORTED_MODULE_0_matter_js___default.a.World.add(__WEBPACK_IMPORTED_MODULE_1_core_gameManager__[\"a\" /* default */].activeScene.getPhysicsWorld(), [this._body]);\n\n      let objScale = this.gameObject.transform.getScale();\n      __WEBPACK_IMPORTED_MODULE_0_matter_js___default.a.Body.scale(this._body, objScale.x, objScale.y);\n\n      this.gameObject.transform.overridePositionGetter(function () {\n        return {\n          x: self._body.position.x,\n          y: self._body.position.y\n        };\n      });\n\n      this.gameObject.transform.overrideRotationGetter(function () {\n        return self._body.angle;\n      });\n    }\n\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(this._mass)) {\n      __WEBPACK_IMPORTED_MODULE_0_matter_js___default.a.Body.setMass(this._body, this._mass);\n    }\n\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2_common_utils__[\"a\" /* isObjectAssigned */])(this._friction)) {\n      this._body.friction = this._friction;\n    }\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = RigidBody;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbXBvbmVudHMvcmlnaWRCb2R5LmpzP2ExYTEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiAgICBSaWdpZEJvZHkgQ2xhc3NcbiAqL1xuXG5pbXBvcnQgTWF0dGVyIGZyb20gXCJtYXR0ZXItanNcIjtcbmltcG9ydCBHYW1lTWFuYWdlciBmcm9tIFwiY29yZS9nYW1lTWFuYWdlclwiO1xuaW1wb3J0IHsgaXNPYmplY3RBc3NpZ25lZCB9IGZyb20gXCJjb21tb24vdXRpbHNcIjtcbmltcG9ydCBVdGlscyBmcm9tIFwidXRpbGl0eS91dGlsc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSaWdpZEJvZHkge1xuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXG5cbiAgLyoqXG4gICAgICpcbiAgICAgKiBAcGFyYW0gcGFyYW1zXG4gICAgICovXG4gIGNvbnN0cnVjdG9yKHBhcmFtcykge1xuICAgIHBhcmFtcyA9IHBhcmFtcyB8fCB7fTtcblxuICAgIC8vIHB1YmxpYyBwcm9wZXJ0aWVzXG4gICAgdGhpcy5nYW1lT2JqZWN0ID0gbnVsbDtcblxuICAgIC8vIHByaXZhdGUgcHJvcGVydGllc1xuICAgIHRoaXMuX2lzU3RhdGljID0gcGFyYW1zLnN0YXRpYyB8fCBmYWxzZTtcbiAgICB0aGlzLl9tYXNzID0gcGFyYW1zLm1hc3MgfHwgbnVsbDtcbiAgICB0aGlzLl9mcmljdGlvbiA9IHBhcmFtcy5mcmljdGlvbiB8fCBudWxsO1xuICAgIHRoaXMuX2JvZHkgPSBudWxsO1xuICB9XG5cbiAgLy8jZW5kcmVnaW9uXG5cbiAgLy8jcmVnaW9uIFB1YmxpYyBNZXRob2RzXG5cbiAgLy8jcmVnaW9uIFN0YXRpYyBNZXRob2RzXG5cbiAgLy8jZW5kcmVnaW9uXG5cbiAgc2V0TWFzcyhtYXNzKSB7XG4gICAgdGhpcy5fbWFzcyA9IG1hc3M7XG4gICAgTWF0dGVyLkJvZHkuc2V0TWFzcyh0aGlzLl9ib2R5LCB0aGlzLl9tYXNzKTtcbiAgfVxuXG4gIGdldE1hc3MoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFzcztcbiAgfVxuXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZVxuICBzZXRHYW1lT2JqZWN0KGdhbWVPYmplY3QpIHtcbiAgICB0aGlzLl9zeW5jKCk7XG4gIH1cblxuICBvbkdhbWVPYmplY3REZXRhY2goKSB7XG4gICAgdGhpcy5nYW1lT2JqZWN0LnRyYW5zZm9ybS5jbGVhclBvc2l0aW9uR2V0dGVyKCk7XG4gICAgdGhpcy5nYW1lT2JqZWN0LnRyYW5zZm9ybS5jbGVhclNjYWxlR2V0dGVyKCk7XG4gICAgdGhpcy5nYW1lT2JqZWN0LnRyYW5zZm9ybS5jbGVhclJvdGF0aW9uR2V0dGVyKCk7XG4gIH1cblxuICBvbkdhbWVPYmplY3RQb3NpdGlvblVwZGF0ZWQodmFsdWUpIHtcbiAgICBpZiAoaXNPYmplY3RBc3NpZ25lZCh0aGlzLl9ib2R5KSkge1xuICAgICAgTWF0dGVyLkJvZHkuc2V0UG9zaXRpb24odGhpcy5fYm9keSwgdmFsdWUpO1xuICAgIH1cbiAgfVxuXG4gIG9uR2FtZU9iamVjdFJvdGF0aW9uVXBkYXRlZCh2YWx1ZSkge1xuICAgIGlmIChpc09iamVjdEFzc2lnbmVkKHRoaXMuX2JvZHkpKSB7XG4gICAgICBNYXR0ZXIuQm9keS5zZXRBbmdsZSh0aGlzLl9ib2R5LCB2YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgb25HYW1lT2JqZWN0U2NhbGVVcGRhdGVkKHZhbHVlKSB7XG4gICAgaWYgKGlzT2JqZWN0QXNzaWduZWQodGhpcy5fYm9keSkpIHtcbiAgICAgIE1hdHRlci5Cb2R5LnNjYWxlKHRoaXMuX2JvZHksIHZhbHVlLngsIHZhbHVlLnkpO1xuICAgIH1cbiAgfVxuXG4gIHVubG9hZCgpIHtcbiAgICAvLyBUT0RPOiBkbyB0aGlzXG4gIH1cblxuICAvLyNlbmRyZWdpb25cblxuICAvLyNyZWdpb24gUHJpdmF0ZSBNZXRob2RzXG5cbiAgX3N5bmMoKSB7XG4gICAgbGV0IHNlbGYgPSB0aGlzO1xuXG4gICAgaWYgKCFpc09iamVjdEFzc2lnbmVkKHRoaXMuZ2FtZU9iamVjdCkpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBpZiAoIWlzT2JqZWN0QXNzaWduZWQodGhpcy5fYm9keSkpIHtcbiAgICAgIGxldCBwb3MgPSB0aGlzLmdhbWVPYmplY3QudHJhbnNmb3JtLmdldFBvc2l0aW9uKCk7XG5cbiAgICAgIC8vIFRPRE8gYXNzaWduIHRoZSBib2R5IGJhc2VkIG9uIHRoZSBvYmplY3RcbiAgICAgIGxldCB3aWR0aCA9IDE7XG4gICAgICBsZXQgaGVpZ2h0ID0gMTtcblxuICAgICAgaWYgKFV0aWxzLmlzU3ByaXRlKHRoaXMuZ2FtZU9iamVjdCkpIHtcbiAgICAgICAgd2lkdGggPSB0aGlzLmdhbWVPYmplY3QuZ2V0VGV4dHVyZSgpLmdldFdpZHRoKCk7XG4gICAgICAgIGhlaWdodCA9IHRoaXMuZ2FtZU9iamVjdC5nZXRUZXh0dXJlKCkuZ2V0SGVpZ2h0KCk7XG4gICAgICB9XG5cbiAgICAgIHRoaXMuX2JvZHkgPSBNYXR0ZXIuQm9kaWVzLnJlY3RhbmdsZShwb3MueCwgcG9zLnksIHdpZHRoLCBoZWlnaHQsIHtcbiAgICAgICAgaXNTdGF0aWM6IHRoaXMuX2lzU3RhdGljXG4gICAgICB9KTtcblxuICAgICAgTWF0dGVyLldvcmxkLmFkZChHYW1lTWFuYWdlci5hY3RpdmVTY2VuZS5nZXRQaHlzaWNzV29ybGQoKSwgW3RoaXMuX2JvZHldKTtcblxuICAgICAgbGV0IG9ialNjYWxlID0gdGhpcy5nYW1lT2JqZWN0LnRyYW5zZm9ybS5nZXRTY2FsZSgpO1xuICAgICAgTWF0dGVyLkJvZHkuc2NhbGUodGhpcy5fYm9keSwgb2JqU2NhbGUueCwgb2JqU2NhbGUueSk7XG5cbiAgICAgIHRoaXMuZ2FtZU9iamVjdC50cmFuc2Zvcm0ub3ZlcnJpZGVQb3NpdGlvbkdldHRlcihmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICB4OiBzZWxmLl9ib2R5LnBvc2l0aW9uLngsXG4gICAgICAgICAgeTogc2VsZi5fYm9keS5wb3NpdGlvbi55XG4gICAgICAgIH07XG4gICAgICB9KTtcblxuICAgICAgdGhpcy5nYW1lT2JqZWN0LnRyYW5zZm9ybS5vdmVycmlkZVJvdGF0aW9uR2V0dGVyKGZ1bmN0aW9uKCkge1xuICAgICAgICByZXR1cm4gc2VsZi5fYm9keS5hbmdsZTtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlmIChpc09iamVjdEFzc2lnbmVkKHRoaXMuX21hc3MpKSB7XG4gICAgICBNYXR0ZXIuQm9keS5zZXRNYXNzKHRoaXMuX2JvZHksIHRoaXMuX21hc3MpO1xuICAgIH1cblxuICAgIGlmIChpc09iamVjdEFzc2lnbmVkKHRoaXMuX2ZyaWN0aW9uKSkge1xuICAgICAgdGhpcy5fYm9keS5mcmljdGlvbiA9IHRoaXMuX2ZyaWN0aW9uO1xuICAgIH1cbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxufVxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb21wb25lbnRzL3JpZ2lkQm9keS5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBM0hBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 78 */
/* exports provided: default */
/* exports used: default */
/*!**************************************!*\
  !*** ./src/content/contentObject.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * Content Object Class\r\n */\nclass ContentObject {\n  //#region Constructors\n\n  /**\r\n  * @param params\r\n  * @constructor\r\n  */\n  // eslint-disable-next-line\n  constructor(params) {}\n\n  //#endregion\n\n  //#region Methods\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ContentObject;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbnRlbnQvY29udGVudE9iamVjdC5qcz9lYzNiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb250ZW50IE9iamVjdCBDbGFzc1xyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29udGVudE9iamVjdCB7XHJcbiAgLy8jcmVnaW9uIENvbnN0cnVjdG9yc1xyXG5cclxuICAvKipcclxuICAqIEBwYXJhbSBwYXJhbXNcclxuICAqIEBjb25zdHJ1Y3RvclxyXG4gICovXHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXHJcbiAgY29uc3RydWN0b3IocGFyYW1zKSB7fVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIE1ldGhvZHNcclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb250ZW50L2NvbnRlbnRPYmplY3QuanMiXSwibWFwcGluZ3MiOiJBQUFBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFkQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 79 */
/* exports provided: ContentObject, ProjectFile, TextureAtlas, WorkspaceFile */
/* exports used: ContentObject, ProjectFile, TextureAtlas, WorkspaceFile */
/*!******************************!*\
  !*** ./src/content/index.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__contentObject__ = __webpack_require__(/*! ./contentObject */ 78);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__contentObject__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__projectFile__ = __webpack_require__(/*! ./projectFile */ 80);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__projectFile__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__textureAtlas__ = __webpack_require__(/*! ./textureAtlas */ 81);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__textureAtlas__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__workspaceFile__ = __webpack_require__(/*! ./workspaceFile */ 82);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__workspaceFile__[\"a\"]; });\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbnRlbnQvaW5kZXguanM/NDIxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIENvbnRlbnRPYmplY3QgfSBmcm9tIFwiLi9jb250ZW50T2JqZWN0XCI7XHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUHJvamVjdEZpbGUgfSBmcm9tIFwiLi9wcm9qZWN0RmlsZVwiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFRleHR1cmVBdGxhcyB9IGZyb20gXCIuL3RleHR1cmVBdGxhc1wiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFdvcmtzcGFjZUZpbGUgfSBmcm9tIFwiLi93b3Jrc3BhY2VGaWxlXCI7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29udGVudC9pbmRleC5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 80 */
/* exports provided: default */
/* exports used: default */
/*!************************************!*\
  !*** ./src/content/projectFile.js ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * Project File class\r\n */\nclass ProjectFile {\n  //#region Constructors\n\n  /**\r\n     *\r\n     * @param params\r\n     * @constructor\r\n     */\n  constructor(params) {\n    params = params || {};\n\n    this.name = params.name || \"New Project\";\n    this.settings = params.settings || {};\n    this.content = params.content || {\n      scripts: []\n    };\n\n    this.ensureContentStructure();\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Methods\n\n  ensureContentStructure() {\n    this.content = this.content || {};\n\n    if (!this.content.hasOwnProperty(\"scripts\")) {\n      this.content.scripts = [];\n    }\n  }\n\n  //#endregion\n\n  //#region Static Methods\n\n  /**\r\n     *\r\n     * @param data\r\n     * @returns {ProjectFile}\r\n     */\n  static restore(data) {\n    return new ProjectFile(data);\n  }\n\n  //#endregion\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = ProjectFile;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbnRlbnQvcHJvamVjdEZpbGUuanM/ZjQxYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogUHJvamVjdCBGaWxlIGNsYXNzXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9qZWN0RmlsZSB7XHJcbiAgLy8jcmVnaW9uIENvbnN0cnVjdG9yc1xyXG5cclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcGFyYW1zXHJcbiAgICAgKiBAY29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gIGNvbnN0cnVjdG9yKHBhcmFtcykge1xyXG4gICAgcGFyYW1zID0gcGFyYW1zIHx8IHt9O1xyXG5cclxuICAgIHRoaXMubmFtZSA9IHBhcmFtcy5uYW1lIHx8IFwiTmV3IFByb2plY3RcIjtcclxuICAgIHRoaXMuc2V0dGluZ3MgPSBwYXJhbXMuc2V0dGluZ3MgfHwge307XHJcbiAgICB0aGlzLmNvbnRlbnQgPSBwYXJhbXMuY29udGVudCB8fCB7XHJcbiAgICAgIHNjcmlwdHM6IFtdXHJcbiAgICB9O1xyXG5cclxuICAgIHRoaXMuZW5zdXJlQ29udGVudFN0cnVjdHVyZSgpO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBNZXRob2RzXHJcblxyXG4gIC8vI3JlZ2lvbiBNZXRob2RzXHJcblxyXG4gIGVuc3VyZUNvbnRlbnRTdHJ1Y3R1cmUoKSB7XHJcbiAgICB0aGlzLmNvbnRlbnQgPSB0aGlzLmNvbnRlbnQgfHwge307XHJcblxyXG4gICAgaWYgKCF0aGlzLmNvbnRlbnQuaGFzT3duUHJvcGVydHkoXCJzY3JpcHRzXCIpKSB7XHJcbiAgICAgIHRoaXMuY29udGVudC5zY3JpcHRzID0gW107XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIFN0YXRpYyBNZXRob2RzXHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBkYXRhXHJcbiAgICAgKiBAcmV0dXJucyB7UHJvamVjdEZpbGV9XHJcbiAgICAgKi9cclxuICBzdGF0aWMgcmVzdG9yZShkYXRhKSB7XHJcbiAgICByZXR1cm4gbmV3IFByb2plY3RGaWxlKGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29udGVudC9wcm9qZWN0RmlsZS5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBREE7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBakRBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 81 */
/* exports provided: default */
/* exports used: default */
/*!*************************************!*\
  !*** ./src/content/textureAtlas.js ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * Content Texture Atlas Class\r\n */\nclass TextureAtlas {\n  //#region Constructors\n\n  /**\r\n     * @param params\r\n     * @constructor\r\n     */\n  constructor(params) {\n    params = params || {};\n\n    // public properties:\n    this.sourcePath = params.sourcePath || \"\"; // should be a relative path\n    this.mapping = [];\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static restore(data) {\n    return new TextureAtlas({\n      sourcePath: data.sourcePath\n    });\n  }\n\n  //#endregion\n\n  objectify() {\n    return {\n      sourcePath: this.sourcePath\n    };\n  }\n\n  getType() {\n    return \"TextureAtlas\";\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = TextureAtlas;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbnRlbnQvdGV4dHVyZUF0bGFzLmpzPzk4YzUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvbnRlbnQgVGV4dHVyZSBBdGxhcyBDbGFzc1xyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGV4dHVyZUF0bGFzIHtcclxuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXHJcblxyXG4gIC8qKlxyXG4gICAgICogQHBhcmFtIHBhcmFtc1xyXG4gICAgICogQGNvbnN0cnVjdG9yXHJcbiAgICAgKi9cclxuICBjb25zdHJ1Y3RvcihwYXJhbXMpIHtcclxuICAgIHBhcmFtcyA9IHBhcmFtcyB8fCB7fTtcclxuXHJcbiAgICAvLyBwdWJsaWMgcHJvcGVydGllczpcclxuICAgIHRoaXMuc291cmNlUGF0aCA9IHBhcmFtcy5zb3VyY2VQYXRoIHx8IFwiXCI7IC8vIHNob3VsZCBiZSBhIHJlbGF0aXZlIHBhdGhcclxuICAgIHRoaXMubWFwcGluZyA9IFtdO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI3JlZ2lvbiBNZXRob2RzXHJcblxyXG4gIC8vI3JlZ2lvbiBTdGF0aWMgTWV0aG9kc1xyXG5cclxuICBzdGF0aWMgcmVzdG9yZShkYXRhKSB7XHJcbiAgICByZXR1cm4gbmV3IFRleHR1cmVBdGxhcyh7XHJcbiAgICAgIHNvdXJjZVBhdGg6IGRhdGEuc291cmNlUGF0aFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgb2JqZWN0aWZ5KCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgc291cmNlUGF0aDogdGhpcy5zb3VyY2VQYXRoXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgZ2V0VHlwZSgpIHtcclxuICAgIHJldHVybiBcIlRleHR1cmVBdGxhc1wiO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb250ZW50L3RleHR1cmVBdGxhcy5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdkNBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 82 */
/* exports provided: default */
/* exports used: default */
/*!**************************************!*\
  !*** ./src/content/workspaceFile.js ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * Workspace File class\r\n */\nclass WorkspaceFile {\n  //#region Constructors\n\n  /**\r\n     *\r\n     * @param params\r\n     * @constructor\r\n     */\n  constructor(params) {\n    params = params || {};\n\n    this.activeLayout = params.activeLayout || {};\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  /**\r\n     *\r\n     * @param data\r\n     * @returns {WorkspaceFile}\r\n     */\n  static restore(data) {\n    return new WorkspaceFile(data);\n  }\n\n  //#endregion\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = WorkspaceFile;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvbnRlbnQvd29ya3NwYWNlRmlsZS5qcz9jZmE4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBXb3Jrc3BhY2UgRmlsZSBjbGFzc1xyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgV29ya3NwYWNlRmlsZSB7XHJcbiAgLy8jcmVnaW9uIENvbnN0cnVjdG9yc1xyXG5cclxuICAvKipcclxuICAgICAqXHJcbiAgICAgKiBAcGFyYW0gcGFyYW1zXHJcbiAgICAgKiBAY29uc3RydWN0b3JcclxuICAgICAqL1xyXG4gIGNvbnN0cnVjdG9yKHBhcmFtcykge1xyXG4gICAgcGFyYW1zID0gcGFyYW1zIHx8IHt9O1xyXG5cclxuICAgIHRoaXMuYWN0aXZlTGF5b3V0ID0gcGFyYW1zLmFjdGl2ZUxheW91dCB8fCB7fTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNyZWdpb24gTWV0aG9kc1xyXG5cclxuICAvLyNyZWdpb24gU3RhdGljIE1ldGhvZHNcclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGRhdGFcclxuICAgICAqIEByZXR1cm5zIHtXb3Jrc3BhY2VGaWxlfVxyXG4gICAgICovXHJcbiAgc3RhdGljIHJlc3RvcmUoZGF0YSkge1xyXG4gICAgcmV0dXJuIG5ldyBXb3Jrc3BhY2VGaWxlKGRhdGEpO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvY29udGVudC93b3Jrc3BhY2VGaWxlLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEvQkE7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 83 */
/* exports provided: Camera2D, Color, FontStyle, Game, GameManager, GameObject, GameScene, PrimitiveBatch, PrimitiveRender, Script, Scripts, addScript, assignScript, Sound, Sprite, SpriteBatch, Stroke, Text, Texture2D, Transform, WrapMode */
/* exports used: Camera2D, Color, FontStyle, Game, GameManager, GameObject, GameScene, PrimitiveBatch, PrimitiveRender, Script, Scripts, addScript, assignScript, Sound, Sprite, SpriteBatch, Stroke, Text, Texture2D, Transform, WrapMode */
/*!***************************!*\
  !*** ./src/core/index.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return addScript; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return assignScript; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__camera2D__ = __webpack_require__(/*! ./camera2D */ 39);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__camera2D__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__color__ = __webpack_require__(/*! ./color */ 11);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__color__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__fontStyle__ = __webpack_require__(/*! ./fontStyle */ 40);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__fontStyle__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__game__ = __webpack_require__(/*! ./game */ 41);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__game__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__gameManager__ = __webpack_require__(/*! ./gameManager */ 4);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_4__gameManager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__gameObject__ = __webpack_require__(/*! ./gameObject */ 26);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_5__gameObject__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__gameScene__ = __webpack_require__(/*! ./gameScene */ 42);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_6__gameScene__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__primitiveBatch__ = __webpack_require__(/*! ./primitiveBatch */ 43);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_7__primitiveBatch__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__primitiveRender__ = __webpack_require__(/*! ./primitiveRender */ 44);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_8__primitiveRender__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__script__ = __webpack_require__(/*! ./script */ 84);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return __WEBPACK_IMPORTED_MODULE_9__script__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__scripts__ = __webpack_require__(/*! ./scripts */ 85);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return __WEBPACK_IMPORTED_MODULE_10__scripts__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__sound__ = __webpack_require__(/*! ./sound */ 86);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return __WEBPACK_IMPORTED_MODULE_11__sound__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__sprite__ = __webpack_require__(/*! ./sprite */ 45);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return __WEBPACK_IMPORTED_MODULE_12__sprite__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__spriteBatch__ = __webpack_require__(/*! ./spriteBatch */ 46);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return __WEBPACK_IMPORTED_MODULE_13__spriteBatch__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__stroke__ = __webpack_require__(/*! ./stroke */ 47);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"q\", function() { return __WEBPACK_IMPORTED_MODULE_14__stroke__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_15__text__ = __webpack_require__(/*! ./text */ 87);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"r\", function() { return __WEBPACK_IMPORTED_MODULE_15__text__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_16__texture2D__ = __webpack_require__(/*! ./texture2D */ 24);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"s\", function() { return __WEBPACK_IMPORTED_MODULE_16__texture2D__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_17__transform__ = __webpack_require__(/*! ./transform */ 27);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"t\", function() { return __WEBPACK_IMPORTED_MODULE_17__transform__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_18__wrapMode__ = __webpack_require__(/*! ./wrapMode */ 48);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"u\", function() { return __WEBPACK_IMPORTED_MODULE_18__wrapMode__[\"a\"]; });\n\n\n\n\n\n\n\n\n\n\n\n\n// aliases\n// there is the need to do a binding because\n// otherwise the reference to the original object (singleton) would be lost\nconst addScript = __WEBPACK_IMPORTED_MODULE_10__scripts__[\"a\" /* Scripts */].addScript.bind(__WEBPACK_IMPORTED_MODULE_10__scripts__[\"a\" /* Scripts */]);\nconst assignScript = __WEBPACK_IMPORTED_MODULE_10__scripts__[\"a\" /* Scripts */].assign.bind(__WEBPACK_IMPORTED_MODULE_10__scripts__[\"a\" /* Scripts */]);\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvcmUvaW5kZXguanM/NGNiZCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIENhbWVyYTJEIH0gZnJvbSBcIi4vY2FtZXJhMkRcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgQ29sb3IgfSBmcm9tIFwiLi9jb2xvclwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBGb250U3R5bGUgfSBmcm9tIFwiLi9mb250U3R5bGVcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgR2FtZSB9IGZyb20gXCIuL2dhbWVcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgR2FtZU1hbmFnZXIgfSBmcm9tIFwiLi9nYW1lTWFuYWdlclwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBHYW1lT2JqZWN0IH0gZnJvbSBcIi4vZ2FtZU9iamVjdFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBHYW1lU2NlbmUgfSBmcm9tIFwiLi9nYW1lU2NlbmVcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgUHJpbWl0aXZlQmF0Y2ggfSBmcm9tIFwiLi9wcmltaXRpdmVCYXRjaFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBQcmltaXRpdmVSZW5kZXIgfSBmcm9tIFwiLi9wcmltaXRpdmVSZW5kZXJcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgU2NyaXB0IH0gZnJvbSBcIi4vc2NyaXB0XCI7XG5pbXBvcnQgeyBTY3JpcHRzIH0gZnJvbSBcIi4vc2NyaXB0c1wiO1xuXG4vLyBhbGlhc2VzXG4vLyB0aGVyZSBpcyB0aGUgbmVlZCB0byBkbyBhIGJpbmRpbmcgYmVjYXVzZVxuLy8gb3RoZXJ3aXNlIHRoZSByZWZlcmVuY2UgdG8gdGhlIG9yaWdpbmFsIG9iamVjdCAoc2luZ2xldG9uKSB3b3VsZCBiZSBsb3N0XG5jb25zdCBhZGRTY3JpcHQgPSBTY3JpcHRzLmFkZFNjcmlwdC5iaW5kKFNjcmlwdHMpO1xuY29uc3QgYXNzaWduU2NyaXB0ID0gU2NyaXB0cy5hc3NpZ24uYmluZChTY3JpcHRzKTtcblxuZXhwb3J0IHsgU2NyaXB0cywgYWRkU2NyaXB0LCBhc3NpZ25TY3JpcHQgfTtcblxuZXhwb3J0IHsgZGVmYXVsdCBhcyBTb3VuZCB9IGZyb20gXCIuL3NvdW5kXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFNwcml0ZSB9IGZyb20gXCIuL3Nwcml0ZVwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBTcHJpdGVCYXRjaCB9IGZyb20gXCIuL3Nwcml0ZUJhdGNoXCI7XG5leHBvcnQgeyBkZWZhdWx0IGFzIFN0cm9rZSB9IGZyb20gXCIuL3N0cm9rZVwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBUZXh0IH0gZnJvbSBcIi4vdGV4dFwiO1xuZXhwb3J0IHsgZGVmYXVsdCBhcyBUZXh0dXJlMkQgfSBmcm9tIFwiLi90ZXh0dXJlMkRcIjtcbmV4cG9ydCB7IGRlZmF1bHQgYXMgVHJhbnNmb3JtIH0gZnJvbSBcIi4vdHJhbnNmb3JtXCI7XG5leHBvcnQgeyBXcmFwTW9kZSB9IGZyb20gXCIuL3dyYXBNb2RlXCI7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvcmUvaW5kZXguanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 84 */
/* exports provided: default */
/* exports used: default */
/*!****************************!*\
  !*** ./src/core/script.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * Base class for scripts\r\n */\nclass Script {\n   /**\r\n      * Anchor method for updating\r\n      * @param delta\r\n      */\n   // eslint-disable-next-line\n   update(delta) {}\n\n   /**\r\n      * Anchor method for rendering\r\n      * @param delta\r\n      * @param spriteBatch\r\n      */\n   // eslint-disable-next-line\n   render(delta, spriteBatch) {}\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Script;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvcmUvc2NyaXB0LmpzP2I1NzQiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEJhc2UgY2xhc3MgZm9yIHNjcmlwdHNcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjcmlwdCB7XHJcbiAgLyoqXHJcbiAgICAgKiBBbmNob3IgbWV0aG9kIGZvciB1cGRhdGluZ1xyXG4gICAgICogQHBhcmFtIGRlbHRhXHJcbiAgICAgKi9cclxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmVcclxuICB1cGRhdGUoZGVsdGEpIHt9XHJcblxyXG4gIC8qKlxyXG4gICAgICogQW5jaG9yIG1ldGhvZCBmb3IgcmVuZGVyaW5nXHJcbiAgICAgKiBAcGFyYW0gZGVsdGFcclxuICAgICAqIEBwYXJhbSBzcHJpdGVCYXRjaFxyXG4gICAgICovXHJcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lXHJcbiAgcmVuZGVyKGRlbHRhLCBzcHJpdGVCYXRjaCkge31cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvcmUvc2NyaXB0LmpzIl0sIm1hcHBpbmdzIjoiQUFBQTs7O0FBR0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFkQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 85 */
/* exports provided: Scripts */
/* exports used: Scripts */
/*!*****************************!*\
  !*** ./src/core/scripts.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("// unique key\nconst _scriptsSingleton = Symbol(\"scriptsSingleton\");\n\n/**\n * Scripts Singleton Class\n */\nclass ScriptsSingleton {\n  //#region Constructors\n\n  constructor(scriptsSingletonToken) {\n    if (_scriptsSingleton !== scriptsSingletonToken) {\n      throw new Error(\"Cannot instantiate directly.\");\n    }\n\n    this._store = {};\n  }\n\n  //#endregion\n\n  //#region Public Methods\n\n  //#region Static Methods\n\n  static get instance() {\n    if (!this[_scriptsSingleton]) {\n      this[_scriptsSingleton] = new ScriptsSingleton(_scriptsSingleton);\n    }\n\n    return this[_scriptsSingleton];\n  }\n\n  //#endregion\n\n  /**\n     * Clear all the stored scripts\n     */\n  clear() {\n    this._store = {};\n  }\n\n  /**\n     * Creates and stores a script code\n     * @returns {ObjectComponent}\n     */\n  addScript(name) {\n    let script = function instance() {};\n    this._store[name] = script;\n    this._setupScript(script);\n    return script;\n  }\n\n  /**\n     * Generates and assigns a component to the given game object. T\n     * he component is returned in the function call\n     * @param scriptName\n     * @param gameObject\n     */\n  assign(scriptName, gameObject) {\n    let component = this.generateComponent(scriptName);\n\n    if (component === null) {\n      throw new Error(\"Could not generate script component: \" + scriptName);\n    }\n\n    gameObject.addComponent(component);\n    return component;\n  }\n\n  /**\n     * Generates a component from one stored script\n     * @param scriptName\n     */\n  generateComponent(scriptName) {\n    if (!this._store[scriptName]) {\n      return null;\n    }\n\n    let component = Object.create(this._store[scriptName].prototype);\n    component._name = scriptName;\n\n    // now we need to assign all the instance properties defined:\n    let properties = this._store[scriptName].properties.getAll();\n    let propertyNames = Object.keys(properties);\n\n    if (propertyNames && propertyNames.length > 0) {\n      propertyNames.forEach(function (propName) {\n        // assign the default value if exists:\n        component[propName] = properties[propName].default;\n      });\n    }\n\n    return component;\n  }\n\n  //#endregion\n\n  //#region Private Methods\n\n  /**\n     * Setup a script adding event handlers and such\n     * @private\n     */\n  _setupScript(script) {\n    script.properties = {\n      _store: {},\n      _target: script,\n      add: function (name, attr) {\n        // save on the target's properties store the attributes:\n        this._store[name] = attr;\n      },\n      get: function (name) {\n        return this._store[name];\n      },\n      getAll: function () {\n        return this._store;\n      }\n    };\n  }\n\n  //#endregion\n}\n\n/**\n *  Scripts alias to Scripts Singleton instance\n */\nconst Scripts = ScriptsSingleton.instance;\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Scripts;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvcmUvc2NyaXB0cy5qcz8wNDJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHVuaXF1ZSBrZXlcbmNvbnN0IF9zY3JpcHRzU2luZ2xldG9uID0gU3ltYm9sKFwic2NyaXB0c1NpbmdsZXRvblwiKTtcblxuLyoqXG4gKiBTY3JpcHRzIFNpbmdsZXRvbiBDbGFzc1xuICovXG5jbGFzcyBTY3JpcHRzU2luZ2xldG9uIHtcbiAgLy8jcmVnaW9uIENvbnN0cnVjdG9yc1xuXG4gIGNvbnN0cnVjdG9yKHNjcmlwdHNTaW5nbGV0b25Ub2tlbikge1xuICAgIGlmIChfc2NyaXB0c1NpbmdsZXRvbiAhPT0gc2NyaXB0c1NpbmdsZXRvblRva2VuKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgaW5zdGFudGlhdGUgZGlyZWN0bHkuXCIpO1xuICAgIH1cblxuICAgIHRoaXMuX3N0b3JlID0ge307XG4gIH1cblxuICAvLyNlbmRyZWdpb25cblxuICAvLyNyZWdpb24gUHVibGljIE1ldGhvZHNcblxuICAvLyNyZWdpb24gU3RhdGljIE1ldGhvZHNcblxuICBzdGF0aWMgZ2V0IGluc3RhbmNlKCkge1xuICAgIGlmICghdGhpc1tfc2NyaXB0c1NpbmdsZXRvbl0pIHtcbiAgICAgIHRoaXNbX3NjcmlwdHNTaW5nbGV0b25dID0gbmV3IFNjcmlwdHNTaW5nbGV0b24oX3NjcmlwdHNTaW5nbGV0b24pO1xuICAgIH1cblxuICAgIHJldHVybiB0aGlzW19zY3JpcHRzU2luZ2xldG9uXTtcbiAgfVxuXG4gIC8vI2VuZHJlZ2lvblxuXG4gIC8qKlxuICAgICAqIENsZWFyIGFsbCB0aGUgc3RvcmVkIHNjcmlwdHNcbiAgICAgKi9cbiAgY2xlYXIoKSB7XG4gICAgdGhpcy5fc3RvcmUgPSB7fTtcbiAgfVxuXG4gIC8qKlxuICAgICAqIENyZWF0ZXMgYW5kIHN0b3JlcyBhIHNjcmlwdCBjb2RlXG4gICAgICogQHJldHVybnMge09iamVjdENvbXBvbmVudH1cbiAgICAgKi9cbiAgYWRkU2NyaXB0KG5hbWUpIHtcbiAgICBsZXQgc2NyaXB0ID0gZnVuY3Rpb24gaW5zdGFuY2UoKSB7fTtcbiAgICB0aGlzLl9zdG9yZVtuYW1lXSA9IHNjcmlwdDtcbiAgICB0aGlzLl9zZXR1cFNjcmlwdChzY3JpcHQpO1xuICAgIHJldHVybiBzY3JpcHQ7XG4gIH1cblxuICAvKipcbiAgICAgKiBHZW5lcmF0ZXMgYW5kIGFzc2lnbnMgYSBjb21wb25lbnQgdG8gdGhlIGdpdmVuIGdhbWUgb2JqZWN0LiBUXG4gICAgICogaGUgY29tcG9uZW50IGlzIHJldHVybmVkIGluIHRoZSBmdW5jdGlvbiBjYWxsXG4gICAgICogQHBhcmFtIHNjcmlwdE5hbWVcbiAgICAgKiBAcGFyYW0gZ2FtZU9iamVjdFxuICAgICAqL1xuICBhc3NpZ24oc2NyaXB0TmFtZSwgZ2FtZU9iamVjdCkge1xuICAgIGxldCBjb21wb25lbnQgPSB0aGlzLmdlbmVyYXRlQ29tcG9uZW50KHNjcmlwdE5hbWUpO1xuXG4gICAgaWYgKGNvbXBvbmVudCA9PT0gbnVsbCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGQgbm90IGdlbmVyYXRlIHNjcmlwdCBjb21wb25lbnQ6IFwiICsgc2NyaXB0TmFtZSk7XG4gICAgfVxuXG4gICAgZ2FtZU9iamVjdC5hZGRDb21wb25lbnQoY29tcG9uZW50KTtcbiAgICByZXR1cm4gY29tcG9uZW50O1xuICB9XG5cbiAgLyoqXG4gICAgICogR2VuZXJhdGVzIGEgY29tcG9uZW50IGZyb20gb25lIHN0b3JlZCBzY3JpcHRcbiAgICAgKiBAcGFyYW0gc2NyaXB0TmFtZVxuICAgICAqL1xuICBnZW5lcmF0ZUNvbXBvbmVudChzY3JpcHROYW1lKSB7XG4gICAgaWYgKCF0aGlzLl9zdG9yZVtzY3JpcHROYW1lXSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgbGV0IGNvbXBvbmVudCA9IE9iamVjdC5jcmVhdGUodGhpcy5fc3RvcmVbc2NyaXB0TmFtZV0ucHJvdG90eXBlKTtcbiAgICBjb21wb25lbnQuX25hbWUgPSBzY3JpcHROYW1lO1xuXG4gICAgLy8gbm93IHdlIG5lZWQgdG8gYXNzaWduIGFsbCB0aGUgaW5zdGFuY2UgcHJvcGVydGllcyBkZWZpbmVkOlxuICAgIGxldCBwcm9wZXJ0aWVzID0gdGhpcy5fc3RvcmVbc2NyaXB0TmFtZV0ucHJvcGVydGllcy5nZXRBbGwoKTtcbiAgICBsZXQgcHJvcGVydHlOYW1lcyA9IE9iamVjdC5rZXlzKHByb3BlcnRpZXMpO1xuXG4gICAgaWYgKHByb3BlcnR5TmFtZXMgJiYgcHJvcGVydHlOYW1lcy5sZW5ndGggPiAwKSB7XG4gICAgICBwcm9wZXJ0eU5hbWVzLmZvckVhY2goZnVuY3Rpb24ocHJvcE5hbWUpIHtcbiAgICAgICAgLy8gYXNzaWduIHRoZSBkZWZhdWx0IHZhbHVlIGlmIGV4aXN0czpcbiAgICAgICAgY29tcG9uZW50W3Byb3BOYW1lXSA9IHByb3BlcnRpZXNbcHJvcE5hbWVdLmRlZmF1bHQ7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gY29tcG9uZW50O1xuICB9XG5cbiAgLy8jZW5kcmVnaW9uXG5cbiAgLy8jcmVnaW9uIFByaXZhdGUgTWV0aG9kc1xuXG4gIC8qKlxuICAgICAqIFNldHVwIGEgc2NyaXB0IGFkZGluZyBldmVudCBoYW5kbGVycyBhbmQgc3VjaFxuICAgICAqIEBwcml2YXRlXG4gICAgICovXG4gIF9zZXR1cFNjcmlwdChzY3JpcHQpIHtcbiAgICBzY3JpcHQucHJvcGVydGllcyA9IHtcbiAgICAgIF9zdG9yZToge30sXG4gICAgICBfdGFyZ2V0OiBzY3JpcHQsXG4gICAgICBhZGQ6IGZ1bmN0aW9uKG5hbWUsIGF0dHIpIHtcbiAgICAgICAgLy8gc2F2ZSBvbiB0aGUgdGFyZ2V0J3MgcHJvcGVydGllcyBzdG9yZSB0aGUgYXR0cmlidXRlczpcbiAgICAgICAgdGhpcy5fc3RvcmVbbmFtZV0gPSBhdHRyO1xuICAgICAgfSxcbiAgICAgIGdldDogZnVuY3Rpb24obmFtZSkge1xuICAgICAgICByZXR1cm4gdGhpcy5fc3RvcmVbbmFtZV07XG4gICAgICB9LFxuICAgICAgZ2V0QWxsOiBmdW5jdGlvbigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3N0b3JlO1xuICAgICAgfVxuICAgIH07XG4gIH1cblxuICAvLyNlbmRyZWdpb25cbn1cblxuLyoqXG4gKiAgU2NyaXB0cyBhbGlhcyB0byBTY3JpcHRzIFNpbmdsZXRvbiBpbnN0YW5jZVxuICovXG5leHBvcnQgY29uc3QgU2NyaXB0cyA9IFNjcmlwdHNTaW5nbGV0b24uaW5zdGFuY2U7XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2NvcmUvc2NyaXB0cy5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVpBO0FBY0E7QUFDQTtBQUNBO0FBakhBO0FBQ0E7QUFtSEE7OztBQUdBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 86 */
/* exports provided: default */
/* exports used: default */
/*!***************************!*\
  !*** ./src/core/sound.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_contentLoader__ = __webpack_require__(/*! common/contentLoader */ 14);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n\n\n\n/**\r\n * Sound class\r\n */\nclass Sound {\n  //#region Constructors\n\n  /**\r\n     *\r\n     * @param audio\r\n     */\n  constructor(audio) {\n    if (!__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1_common_utils__[\"a\" /* isObjectAssigned */])(audio)) {\n      throw new Error(\"Cannot create Sound without a valid audio source\");\n    }\n\n    // private properties\n    this._source = audio;\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  /**\r\n     *\r\n     * @param path\r\n     * @returns {Promise}\r\n     */\n  static fromPath(path) {\n    return new Promise(function (resolve, reject) {\n      __WEBPACK_IMPORTED_MODULE_0_common_contentLoader__[\"a\" /* ContentLoader */].loadAudio(path).then(function (audio) {\n        resolve(new Sound(audio));\n      }, function () {\n        reject();\n      });\n    }.bind(this));\n  }\n\n  // TODO: static restore\n\n  //#endregion\n\n  /**\r\n     *\r\n     * @param audio\r\n     */\n  setAudioSource(audio) {\n    this._source = audio;\n  }\n\n  /**\r\n     * plays the current audio source\r\n     */\n  play() {\n    this._source.play();\n  }\n\n  /**\r\n     * pauses the current audio source\r\n     */\n  pause() {\n    this._source.pause();\n  }\n\n  /**\r\n     * stops the current audio source\r\n     */\n  stop() {\n    this._source.pause();\n    this._source.currentTime = 0;\n  }\n\n  /**\r\n     * sets the current audio source loop behavior\r\n     * @param loop\r\n     */\n  setLoop(loop) {\n    this._source.loop = loop;\n  }\n\n  /**\r\n     * sets the current audio source output volume (0 to 1)\r\n     * @param volume\r\n     */\n  setVolume(volume) {\n    this._source.volume = volume;\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Sound;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2NvcmUvc291bmQuanM/NjIyMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb250ZW50TG9hZGVyIH0gZnJvbSBcImNvbW1vbi9jb250ZW50TG9hZGVyXCI7XHJcbmltcG9ydCB7IGlzT2JqZWN0QXNzaWduZWQgfSBmcm9tIFwiY29tbW9uL3V0aWxzXCI7XHJcblxyXG4vKipcclxuICogU291bmQgY2xhc3NcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNvdW5kIHtcclxuICAvLyNyZWdpb24gQ29uc3RydWN0b3JzXHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBhdWRpb1xyXG4gICAgICovXHJcbiAgY29uc3RydWN0b3IoYXVkaW8pIHtcclxuICAgIGlmICghaXNPYmplY3RBc3NpZ25lZChhdWRpbykpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ2Fubm90IGNyZWF0ZSBTb3VuZCB3aXRob3V0IGEgdmFsaWQgYXVkaW8gc291cmNlXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHByaXZhdGUgcHJvcGVydGllc1xyXG4gICAgdGhpcy5fc291cmNlID0gYXVkaW87XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIE1ldGhvZHNcclxuXHJcbiAgLy8jcmVnaW9uIFN0YXRpYyBNZXRob2RzXHJcblxyXG4gIC8qKlxyXG4gICAgICpcclxuICAgICAqIEBwYXJhbSBwYXRoXHJcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX1cclxuICAgICAqL1xyXG4gIHN0YXRpYyBmcm9tUGF0aChwYXRoKSB7XHJcbiAgICByZXR1cm4gbmV3IFByb21pc2UoXHJcbiAgICAgIGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkge1xyXG4gICAgICAgIENvbnRlbnRMb2FkZXIubG9hZEF1ZGlvKHBhdGgpLnRoZW4oXHJcbiAgICAgICAgICBmdW5jdGlvbihhdWRpbykge1xyXG4gICAgICAgICAgICByZXNvbHZlKG5ldyBTb3VuZChhdWRpbykpO1xyXG4gICAgICAgICAgfSxcclxuICAgICAgICAgIGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgICByZWplY3QoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICApO1xyXG4gICAgICB9LmJpbmQodGhpcylcclxuICAgICk7XHJcbiAgfVxyXG5cclxuICAvLyBUT0RPOiBzdGF0aWMgcmVzdG9yZVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIGF1ZGlvXHJcbiAgICAgKi9cclxuICBzZXRBdWRpb1NvdXJjZShhdWRpbykge1xyXG4gICAgdGhpcy5fc291cmNlID0gYXVkaW87XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIHBsYXlzIHRoZSBjdXJyZW50IGF1ZGlvIHNvdXJjZVxyXG4gICAgICovXHJcbiAgcGxheSgpIHtcclxuICAgIHRoaXMuX3NvdXJjZS5wbGF5KCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIHBhdXNlcyB0aGUgY3VycmVudCBhdWRpbyBzb3VyY2VcclxuICAgICAqL1xyXG4gIHBhdXNlKCkge1xyXG4gICAgdGhpcy5fc291cmNlLnBhdXNlKCk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIHN0b3BzIHRoZSBjdXJyZW50IGF1ZGlvIHNvdXJjZVxyXG4gICAgICovXHJcbiAgc3RvcCgpIHtcclxuICAgIHRoaXMuX3NvdXJjZS5wYXVzZSgpO1xyXG4gICAgdGhpcy5fc291cmNlLmN1cnJlbnRUaW1lID0gMDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogc2V0cyB0aGUgY3VycmVudCBhdWRpbyBzb3VyY2UgbG9vcCBiZWhhdmlvclxyXG4gICAgICogQHBhcmFtIGxvb3BcclxuICAgICAqL1xyXG4gIHNldExvb3AobG9vcCkge1xyXG4gICAgdGhpcy5fc291cmNlLmxvb3AgPSBsb29wO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBzZXRzIHRoZSBjdXJyZW50IGF1ZGlvIHNvdXJjZSBvdXRwdXQgdm9sdW1lICgwIHRvIDEpXHJcbiAgICAgKiBAcGFyYW0gdm9sdW1lXHJcbiAgICAgKi9cclxuICBzZXRWb2x1bWUodm9sdW1lKSB7XHJcbiAgICB0aGlzLl9zb3VyY2Uudm9sdW1lID0gdm9sdW1lO1xyXG4gIH1cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9jb3JlL3NvdW5kLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE1RkE7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 87 */
/* exports provided: default */
/* exports used: default */
/*!**************************!*\
  !*** ./src/core/text.js ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_math_vector2__ = __webpack_require__(/*! math/vector2 */ 5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_math_mathHelper__ = __webpack_require__(/*! math/mathHelper */ 15);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_utility_objectify__ = __webpack_require__(/*! utility/objectify */ 18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_utility_textUtils__ = __webpack_require__(/*! utility/textUtils */ 59);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_shaders_textShader_shader__ = __webpack_require__(/*! shaders/textShader.shader */ 54);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_core_gameObject__ = __webpack_require__(/*! core/gameObject */ 26);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_core_color__ = __webpack_require__(/*! core/color */ 11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_core_stroke__ = __webpack_require__(/*! core/stroke */ 47);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8_core_fontStyle__ = __webpack_require__(/*! core/fontStyle */ 40);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9_core_gameManager__ = __webpack_require__(/*! core/gameManager */ 4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10_core_texture2D__ = __webpack_require__(/*! core/texture2D */ 24);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_common_attributeDictionary__ = __webpack_require__(/*! common/attributeDictionary */ 8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12_common_logger__ = __webpack_require__(/*! common/logger */ 9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13_common_utils__ = __webpack_require__(/*! common/utils */ 0);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_11_common_attributeDictionary__[\"a\" /* AttributeDictionary */].inherit(\"text\", \"gameobject\");\n__WEBPACK_IMPORTED_MODULE_11_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"text\", \"_textureSrc\", {\n  displayName: \"Font Image Src\",\n  editor: \"filepath\"\n});\n__WEBPACK_IMPORTED_MODULE_11_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"text\", \"_color\", { displayName: \"Color\" });\n__WEBPACK_IMPORTED_MODULE_11_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"text\", \"_text\", { displayName: \"Text\" });\n__WEBPACK_IMPORTED_MODULE_11_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"text\", \"_texture\", { visible: false });\n__WEBPACK_IMPORTED_MODULE_11_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"text\", \"_fontStyle\", { ownContainer: true });\n__WEBPACK_IMPORTED_MODULE_11_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"text\", \"_stroke\", { ownContainer: true });\n__WEBPACK_IMPORTED_MODULE_11_common_attributeDictionary__[\"a\" /* AttributeDictionary */].addRule(\"text\", \"_dropShadow\", { ownContainer: true });\n\n// TODO: remove this... use game object boundary?\nconst maxWidth = 500;\n\n/**\n * Text class\n */\nclass Text extends __WEBPACK_IMPORTED_MODULE_5_core_gameObject__[\"a\" /* default */] {\n  //#region Static Properties\n\n  static get AlignType() {\n    return {\n      LEFT: \"LEFT\",\n      CENTER: \"CENTER\",\n      RIGHT: \"RIGHT\"\n    };\n  }\n\n  //#endregion\n\n  //#region Constructors\n\n  constructor(params) {\n    params = params || {};\n    params.name = params.name || \"Text\";\n\n    super(params);\n\n    this._fontStyle = new __WEBPACK_IMPORTED_MODULE_8_core_fontStyle__[\"a\" /* default */](params.font || {}, params.fontFilePath || \"\");\n    this._fontStyle.setFontSize(params.fontSize || 70.0);\n    this._fontStyle.setLetterSpacing(params.letterSpacing || 0);\n    this._fontStyle.setSpread(params.spread || 4);\n\n    this._wordWrap = params.wordWrap || true;\n    this._characterWrap = params.characterWrap || true;\n    this._alignType = params.alignType || Text.AlignType.LEFT;\n\n    this._color = params.color || __WEBPACK_IMPORTED_MODULE_6_core_color__[\"a\" /* default */].fromRGBA(164, 56, 32, 1.0);\n    this._text = params.text || \"\";\n\n    this._gamma = params.gamma || 2.0;\n\n    this._strokeEnabled = 1;\n    this._stroke = new __WEBPACK_IMPORTED_MODULE_7_core_stroke__[\"a\" /* default */](__WEBPACK_IMPORTED_MODULE_6_core_color__[\"a\" /* default */].fromRGBA(186, 85, 54, 0.5), 0.0);\n\n    this._dropShadowEnabled = 1;\n    this._dropShadow = new __WEBPACK_IMPORTED_MODULE_7_core_stroke__[\"a\" /* default */](__WEBPACK_IMPORTED_MODULE_6_core_color__[\"a\" /* default */].fromRGBA(0, 0, 0, 1.0), 5.0);\n    // raw max offset\n    this._rawMaxDropShadowOffset = new __WEBPACK_IMPORTED_MODULE_0_math_vector2__[\"a\" /* default */](10, 10);\n    // raw offset from -raw offset to +raw offset\n    this._dropShadowOffset = new __WEBPACK_IMPORTED_MODULE_0_math_vector2__[\"a\" /* default */](7, 7);\n\n    // either 0 or 1\n    this._debug = 0;\n\n    this._gl = __WEBPACK_IMPORTED_MODULE_9_core_gameManager__[\"a\" /* default */].renderContext.getContext();\n\n    if (params.texture) {\n      this._setTextureParameters();\n    }\n\n    this._vertexBuffer = null;\n    this._textureBuffer = null;\n    this._vertexIndicesBuffer = null;\n    this._textShader = null;\n\n    this._textureSrc = \"\";\n    this._texture = null;\n    this._textureWidth = 0;\n    this._textureHeight = 0;\n    // set text texture if defined\n    this.setTexture(params.texture, \"\");\n  }\n\n  //#endregion\n\n  //#region Public Methods\n\n  //#region Static Methods\n\n  static restore(data) {\n    let superRestore = super.restore(data);\n\n    let text = new Text();\n    text.setFontStyle(__WEBPACK_IMPORTED_MODULE_8_core_fontStyle__[\"a\" /* default */].restore(data.fontStyle));\n    text.setWordWrap(data.wordWrap);\n    text.setCharacterWrap(data.characterWrap);\n    text.setAlign(data.alignType);\n    text.setColor(__WEBPACK_IMPORTED_MODULE_6_core_color__[\"a\" /* default */].restore(data.color));\n    text.setText(data.text);\n    text.setGamma(data.gamma);\n    text.setStrokeEnabled(data.strokeEnabled);\n    text.setStroke(__WEBPACK_IMPORTED_MODULE_7_core_stroke__[\"a\" /* default */].restore(data.stroke));\n    text.setDropShadowEnabled(data.dropShadowEnabled);\n    text.setDropShadow(__WEBPACK_IMPORTED_MODULE_7_core_stroke__[\"a\" /* default */].restore(data.dropShadow));\n    text.setRawMaxDropShadowOffset(__WEBPACK_IMPORTED_MODULE_0_math_vector2__[\"a\" /* default */].restore(data.rawMaxDropShadowOffset));\n    text.setDropShadowOffset(__WEBPACK_IMPORTED_MODULE_0_math_vector2__[\"a\" /* default */].restore(data.dropShadowOffset));\n    text.setDebug(data.debug);\n\n    text.setTextureSrc(data.textureSrc);\n\n    return __WEBPACK_IMPORTED_MODULE_2_utility_objectify__[\"a\" /* default */].extend(text, superRestore);\n  }\n\n  //#endregion\n\n  //#region Overridden Methods\n\n  render(delta, spriteBatch) {\n    if (!this.enabled) {\n      return;\n    }\n\n    // TODO: don't render if font or font's texture are not valid/defined?\n\n    if (this.getTexture() === null) {\n      return;\n    }\n\n    // get gl context\n    let gl = this._gl;\n\n    // use text shader\n    __WEBPACK_IMPORTED_MODULE_9_core_gameManager__[\"a\" /* default */].activeGame.getShaderManager().useShader(this._textShader);\n\n    // enable shader attributes\n    gl.enableVertexAttribArray(this._textShader.attributes.aPos);\n    gl.enableVertexAttribArray(this._textShader.attributes.aTexCoord);\n\n    // draw text\n    this._drawText();\n\n    let cameraMatrix = __WEBPACK_IMPORTED_MODULE_9_core_gameManager__[\"a\" /* default */].activeGame.getActiveCamera().getMatrix();\n\n    gl.uniformMatrix4fv(this._textShader.uniforms.uMatrix._location, false, cameraMatrix);\n    gl.uniformMatrix4fv(this._textShader.uniforms.uTransform._location, false, this.getMatrix());\n\n    // bind to texture unit 0\n    gl.activeTexture(gl.TEXTURE0);\n    this._texture.bind();\n    // tell the shader which unit you bound the texture to.\n    // In this case it's to sampler 0\n    gl.uniform1i(this._textShader.uniforms.uTexture._location, 0);\n\n    // debug\n    gl.uniform1f(this._textShader.uniforms.uDebug._location, this._debug);\n    // stroke outline\n    gl.uniform1f(this._textShader.uniforms.uOutline._location, this._strokeEnabled);\n    // drop shadow\n    gl.uniform1f(this._textShader.uniforms.uDropShadow._location, this._dropShadowEnabled);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n    gl.vertexAttribPointer(this._textShader.attributes.aPos, 2, gl.FLOAT, false, 0, 0);\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._textureBuffer);\n    gl.vertexAttribPointer(this._textShader.attributes.aTexCoord, 2, gl.FLOAT, false, 0, 0);\n\n    // stroke color\n    let strokeColor = this.getStroke().getColor();\n    gl.uniform4fv(this._textShader.uniforms.uOutlineColor._location, [strokeColor.r, strokeColor.g, strokeColor.b, strokeColor.a]);\n    // stroke size\n    gl.uniform1f(this._textShader.uniforms.uOutlineDistance._location, this.getNormalizedStrokeSize());\n\n    // drop shadow color\n    let dropShadowColor = this.getDropShadow().getColor();\n    gl.uniform4fv(this._textShader.uniforms.uDropShadowColor._location, [dropShadowColor.r, dropShadowColor.g, dropShadowColor.b, dropShadowColor.a]);\n    // drop shadow stroke smoothing\n    gl.uniform1f(this._textShader.uniforms.uDropShadowSmoothing._location, this.getNormalizedDropShadowSmoothing());\n    // drop shadow offset (direction)\n    let normalizedOffset = this.getNormalizedDropShadowOffset();\n    gl.uniform2fv(this._textShader.uniforms.uDropShadowOffset._location, [normalizedOffset.x, normalizedOffset.y]);\n\n    let color = this.getColor();\n    // font color (tint)\n    gl.uniform4fv(this._textShader.uniforms.uColor._location, [color.r, color.g, color.b, color.a]);\n    // // 192 / 255\n    //gl.uniform1f(this._textShader.uniforms.u_buffer._location, 0.50);\n\n    // gamma (smoothing) value (how sharp is the text in the edges)\n    gl.uniform1f(this._textShader.uniforms.uGamma._location, this.getGamma() * 1.4142 / this.getFontSize());\n\n    // draw the glyphs\n    //gl.drawArrays(gl.TRIANGLES, 0, this._vertexBuffer.numItems);\n    gl.drawElements(gl.TRIANGLES, this._vertexIndicesBuffer.numItems, gl.UNSIGNED_SHORT, 0);\n\n    // parent render function\n    super.render(delta, spriteBatch);\n  }\n\n  unload() {\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_13_common_utils__[\"a\" /* isObjectAssigned */])(this._vertexBuffer)) {\n      this._gl.deleteBuffer(this._vertexBuffer);\n    }\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_13_common_utils__[\"a\" /* isObjectAssigned */])(this._textureBuffer)) {\n      this._gl.deleteBuffer(this._textureBuffer);\n    }\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_13_common_utils__[\"a\" /* isObjectAssigned */])(this._vertexIndicesBuffer)) {\n      this._gl.deleteBuffer(this._vertexIndicesBuffer);\n    }\n\n    if (__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_13_common_utils__[\"a\" /* isObjectAssigned */])(this._textShader)) {\n      this._textShader.unload();\n    }\n\n    // TODO: add/remove when spritebatch is fixed?\n    // we need to unload this specific texture from memory!\n    // spritebatch related...\n    //this._gl.deleteBuffer(this._texBuffer);\n    //this._textureShader.unload();\n  }\n\n  // TODO: rotate, scale...\n  // probably similar to sprite... think carefully about scaling?\n  getMatrix() {\n    let x, y;\n\n    x = this.transform.getPosition().x;\n    y = this.transform.getPosition().y;\n\n    this._transformMatrix.identity();\n\n    //mat4.translate(this._transformMatrix, this._transformMatrix, [x, y, 0]);\n    // eslint-disable-next-line\n    //mat4.rotate(this._transformMatrix, this._transformMatrix, this.transform.getRotation(), [0.0, 0.0, 1.0]);\n    //mat4.translate(this._transformMatrix, this._transformMatrix, [-x, -y, 0]);\n\n    this._transformMatrix.translate([x, y, 0]);\n\n    return this._transformMatrix.asArray();\n  }\n\n  //#endregion\n\n  getType() {\n    // TODO: is it even needed?\n    // we could replace this method in gameobject by this.name\n    return \"Text\";\n  }\n\n  getTexture() {\n    return this._texture;\n  }\n\n  setTextureSrc(path) {\n    __WEBPACK_IMPORTED_MODULE_10_core_texture2D__[\"a\" /* default */].fromPath(path).then(texture => {\n      // set WebGL texture parameters\n      this._setTextureParameters();\n      this.setTexture(texture);\n    }, error => {\n      this.setTexture(null, null);\n      __WEBPACK_IMPORTED_MODULE_12_common_logger__[\"b\" /* Debug */].error(error);\n    });\n  }\n\n  setTexture(texture) {\n    // is this a ready texture?\n    if (!texture || !texture.isReady()) {\n      this._textureSrc = \"\";\n      this._texture = null;\n      this._textureWidth = 0;\n      this._textureHeight = 0;\n      return;\n    }\n\n    this._textureSrc = texture.getTextureSrc();\n    this._texture = texture;\n\n    // cache the dimensions\n    this._textureWidth = this._texture.getWidth();\n    this._textureHeight = this._texture.getHeight();\n\n    this._vertexBuffer = this._gl.createBuffer();\n    this._textureBuffer = this._gl.createBuffer();\n    this._vertexIndicesBuffer = this._gl.createBuffer();\n    this._textShader = new __WEBPACK_IMPORTED_MODULE_4_shaders_textShader_shader__[\"a\" /* default */]();\n\n    this._gl.uniform2f(this._textShader.uniforms.uTexSize._location, this._textureWidth, this._textureHeight);\n  }\n\n  setColor(color) {\n    this._color = color;\n  }\n\n  getColor() {\n    return this._color;\n  }\n\n  /**\n     * Sets the outline effect of the text\n     * @param {Stroke} stroke outline effect of the text\n     */\n  setStroke(stroke) {\n    this._stroke = stroke;\n  }\n\n  getStroke() {\n    return this._stroke;\n  }\n\n  getDropShadow() {\n    return this._dropShadow;\n  }\n\n  /**\n     * Sets the drop shadow effect of the text\n     * @param {Stroke} shadow drop shadow effect of the text\n     */\n  setDropShadow(shadow) {\n    this._dropShadow = shadow;\n  }\n\n  setText(str) {\n    this._text = str;\n  }\n\n  getText() {\n    return this._text;\n  }\n\n  getFontStyle() {\n    return this._fontStyle;\n  }\n\n  /**\n     * Sets the font style\n     * @param {FontStyle} fontStyle font style\n     */\n  setFontStyle(fontStyle) {\n    this._fontStyle = fontStyle;\n  }\n\n  getDropShadowOffset() {\n    return this._dropShadowOffset;\n  }\n\n  /**\n     *\n     * @param {Vector2} offset the shadow offset vector\n     */\n  setDropShadowOffset(offset) {\n    if (!(offset instanceof __WEBPACK_IMPORTED_MODULE_0_math_vector2__[\"a\" /* default */])) {\n      throw new Error(\"The given raw max drop shadow offset is invalid\");\n    }\n    this._dropShadowOffset = offset;\n  }\n\n  getRawMaxDropShadowOffset() {\n    return this._rawMaxDropShadowOffset;\n  }\n\n  setRawMaxDropShadowOffset(offset) {\n    if (!(offset instanceof __WEBPACK_IMPORTED_MODULE_0_math_vector2__[\"a\" /* default */])) {\n      throw new Error(\"The given raw max drop shadow offset is invalid\");\n    }\n    this._rawMaxDropShadowOffset = offset;\n  }\n\n  getNormalizedStrokeSize() {\n    // stroke size\n    // max shader value is 0.5\n    // in terms of raw values, we go from 0 to stroke's max size,\n    // so we calculate the scaled value between 0 and max shader value\n    let scaledValue = __WEBPACK_IMPORTED_MODULE_1_math_mathHelper__[\"a\" /* default */].normalize(this.getStroke().getSize(), 0, this.getStroke().getMaxSize(), 0, 0.5);\n\n    // revert the value, so 0 represents less stroke\n    scaledValue = 0.5 - scaledValue;\n\n    return scaledValue;\n  }\n\n  getNormalizedDropShadowSmoothing() {\n    // drop shadow stroke (smoothing) size\n    // eslint-disable-next-line\n    // (raw value = between 0 and 10) * (actual shader max value = 0.5) / (max raw value = 10)\n    return __WEBPACK_IMPORTED_MODULE_1_math_mathHelper__[\"a\" /* default */].normalize(this.getDropShadow().getSize(), 0, this.getDropShadow().getMaxSize(), 0, 0.5);\n  }\n\n  get maxDropShadowOffsetX() {\n    if (this._textureWidth !== 0 && this._fontStyle != null) {\n      return this._fontStyle.getSpread() / this._textureWidth;\n    }\n    return 0;\n  }\n\n  get maxDropShadowOffsetY() {\n    if (this._textureHeight !== 0 && this._fontStyle != null) {\n      return this._fontStyle.getSpread() / this._textureHeight;\n    }\n    return 0;\n  }\n\n  getNormalizedDropShadowOffset() {\n    // eslint-disable-next-line\n    // x and y values have to be between spread (defined in Hiero) / texture size\n    // e.g., 4 / 512\n    // need to normalize between those values\n\n    let dropShadowOffset = this.getDropShadowOffset();\n\n    let normalizedX = __WEBPACK_IMPORTED_MODULE_1_math_mathHelper__[\"a\" /* default */].normalize(dropShadowOffset.x, -1 * this.getRawMaxDropShadowOffset().x, this.getRawMaxDropShadowOffset().x, -1 * this.maxDropShadowOffsetX, this.maxDropShadowOffsetX);\n\n    let normalizedY = __WEBPACK_IMPORTED_MODULE_1_math_mathHelper__[\"a\" /* default */].normalize(dropShadowOffset.y, -1 * this.getRawMaxDropShadowOffset().y, this.getRawMaxDropShadowOffset().y, -1 * this.maxDropShadowOffsetY, this.maxDropShadowOffsetY);\n\n    return new __WEBPACK_IMPORTED_MODULE_0_math_vector2__[\"a\" /* default */](normalizedX, normalizedY);\n  }\n\n  /*\n     Just for API sake\n     */\n\n  setFontSize(size) {\n    this.getFontStyle().setFontSize(size);\n  }\n\n  getFontSize() {\n    return this.getFontStyle().getFontSize();\n  }\n\n  getLetterSpacing() {\n    return this.getFontStyle().getLetterSpacing();\n  }\n\n  setLetterSpacing(value) {\n    this.getFontStyle().setLetterSpacing(value);\n  }\n\n  /*\n     End of 'for API Sake'\n     */\n\n  setGamma(gamma) {\n    this._gamma = gamma;\n  }\n\n  getGamma() {\n    return this._gamma;\n  }\n\n  setDebug(value) {\n    value = __WEBPACK_IMPORTED_MODULE_1_math_mathHelper__[\"a\" /* default */].clamp(value, 0, 1);\n\n    this._debug = value;\n  }\n\n  getDebug() {\n    return this._debug;\n  }\n\n  setDropShadowEnabled(value) {\n    value = __WEBPACK_IMPORTED_MODULE_1_math_mathHelper__[\"a\" /* default */].clamp(value, 0, 1);\n\n    this._dropShadowEnabled = value;\n  }\n\n  getDropShadowEnabled() {\n    return this._dropShadowEnabled;\n  }\n\n  setStrokeEnabled(value) {\n    value = __WEBPACK_IMPORTED_MODULE_1_math_mathHelper__[\"a\" /* default */].clamp(value, 0, 1);\n\n    this._strokeEnabled = value;\n  }\n\n  getStrokeEnabled() {\n    return this._strokeEnabled;\n  }\n\n  setWordWrap(wrap) {\n    this._wordWrap = wrap;\n  }\n\n  getWordWrap() {\n    return this._wordWrap;\n  }\n\n  setCharacterWrap(wrap) {\n    this._characterWrap = wrap;\n  }\n\n  getCharacterWrap() {\n    return this._characterWrap;\n  }\n\n  /**\n     * Sets Text alignment\n     * @param {Text.AlignType} alignType\n     */\n  setAlign(alignType) {\n    this._alignType = alignType;\n  }\n\n  getAlign() {\n    return this._alignType;\n  }\n\n  getTextureSrc() {\n    return this._textureSrc;\n  }\n\n  objectify() {\n    let superObjectify = super.objectify();\n    return __WEBPACK_IMPORTED_MODULE_2_utility_objectify__[\"a\" /* default */].extend(superObjectify, {\n      fontStyle: this.getFontStyle().objectify(),\n      wordWrap: this.getWordWrap(),\n      characterWrap: this.getCharacterWrap(),\n      alignType: this.getAlign(),\n      color: this.getColor().objectify(),\n      text: this.getText(),\n      gamma: this.getGamma(),\n      strokeEnabled: this.getStrokeEnabled(),\n      stroke: this.getStroke().objectify(),\n      dropShadowEnabled: this.getDropShadowEnabled(),\n      dropShadow: this.getDropShadow().objectify(),\n      rawMaxDropShadowOffset: this.getRawMaxDropShadowOffset().objectify(),\n      dropShadowOffset: this.getDropShadowOffset().objectify(),\n      debug: this.getDebug(),\n      textureSrc: this.getTextureSrc()\n    });\n  }\n\n  //#endregion\n\n  //#region Private Methods\n\n  _setTextureParameters() {\n    let gl = this._gl;\n\n    // eslint-disable-next-line\n    // the line below is already done when creating a Texture2D with content loader\n    // eslint-disable-next-line\n    // gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, gl.LUMINANCE, gl.UNSIGNED_BYTE, this._texture.getImageData());\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  }\n\n  /**\n     * Draws the text onto the screen\n     * @private\n     */\n  _drawText() {\n    let fontStyle = this.getFontStyle();\n\n    if (!fontStyle) {\n      return;\n    }\n\n    let fontDescription = fontStyle.getFontDescription();\n\n    // don't go further if font description isn't valid either\n    if (!fontDescription || !fontDescription.common || !fontDescription.common.lineHeight) {\n      return;\n    }\n\n    // line height; falls back to font size\n    let lineHeight = fontDescription.common.lineHeight || this.getFontSize();\n\n    // text scale based on the font size\n    let scale = fontStyle.getScale();\n\n    // don't go further if scale is invalid\n    if (!scale) {\n      return;\n    }\n\n    // create the lines to draw onto the screen\n    let lines = __WEBPACK_IMPORTED_MODULE_3_utility_textUtils__[\"a\" /* default */].measureText(fontStyle, this.getText(), maxWidth, this.getWordWrap(), this.getCharacterWrap());\n\n    // draws lines\n    this._drawLines(lines, scale, lineHeight);\n  }\n\n  /**\n     * Aligns a line according to its width and align type\n     * @param {number} width width of the line to align\n     * @returns {number} the aligned x position of the line\n     * @private\n     */\n  _alignLine(width) {\n    // set return variable\n    let x;\n\n    // change beginning of the line depending on the chosen alignment\n    switch (this.getAlign()) {\n      case Text.AlignType.LEFT:\n        x = this.transform.getPosition().x;\n        break;\n      case Text.AlignType.CENTER:\n        x = this.transform.getPosition().x + maxWidth / 2 - width / 2;\n        break;\n      case Text.AlignType.RIGHT:\n        x = this.transform.getPosition().x + maxWidth - width;\n        break;\n      // TODO: implement AlignType.JUSTIFIED using Knuth and Plass's algorithm\n      // case FontStyle.AlignType.JUSTIFIED:\n      default:\n        x = 0;\n        break;\n    }\n\n    return x;\n  }\n\n  /**\n     * Draws the given text lines onto the screen\n     * @param {Array} lines lines to draw\n     * @param {number} scale scale of the text\n     * * @param {number} lineHeight how much Y should increase to switch line\n     * @private\n     */\n  _drawLines(lines, scale, lineHeight) {\n    // TODO: maybe throw new Error when simply returning?\n    // so errors can be seen in the console?\n    // if parameters are invalid, no need to go further\n    if (!lines || !scale || scale <= 0 || !lineHeight || lineHeight === 0) {\n      return;\n    }\n\n    // retrieve webgl context\n    let gl = this._gl;\n\n    // create shader arrays, which are filled inside prepareLineToBeDrawn\n    let vertexElements = [];\n    let textureElements = [];\n    let vertexIndices = [];\n\n    // create pen with the screen coordinates,\n    // where (0,0) is the center of the screen\n    let pen = {\n      x: 0,\n      y: this.transform.getPosition().y\n    };\n\n    for (let i = 0; i < lines.length; i++) {\n      // align line accordingly\n      pen.x = this._alignLine(lines[i].width);\n\n      // retrieve line characters\n      let line = lines[i].chars;\n\n      // prepare to draw line\n      this._prepareLineToBeDrawn(line, scale, pen, vertexElements, textureElements, vertexIndices);\n\n      // update Y before drawing another line\n      // TODO: no need to recalculate this value every time...\n      pen.y += lineHeight * scale;\n    }\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._vertexBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertexElements), gl.STATIC_DRAW);\n    this._vertexBuffer.numItems = vertexElements.length / 2;\n\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this._vertexIndicesBuffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(vertexIndices), gl.STATIC_DRAW);\n    this._vertexIndicesBuffer.numItems = vertexIndices.length;\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, this._textureBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(textureElements), gl.STATIC_DRAW);\n    this._textureBuffer.numItems = textureElements.length / 2;\n  }\n\n  /**\n     * Prepares a line to be drawn\n     * @param {Array} line array of characters whose draw is to be prepared\n     * @param {number} scale text desired scale\n     * @param {{x: number, y:number}} pen pen to draw with\n     * @param {Array} vertexElements array to store the characters vertices\n     * @param {Array} textureElements array to store the \n     * characters texture elements\n     * @param {Array} vertexIndices array to store the vertices indices\n     * @private\n     */\n  _prepareLineToBeDrawn(line, scale, pen, vertexElements, textureElements, vertexIndices) {\n    let lastGlyphCode = 0;\n\n    // iterate through line characters\n    for (let i = 0; i < line.length; i++) {\n      // retrieve line char\n      let char = line[i];\n\n      // prepare character to be drawn\n      lastGlyphCode = this._createGlyph(char, scale, pen, lastGlyphCode, vertexElements, textureElements, vertexIndices);\n    }\n  }\n\n  /**\n     * Creates the necessary vertices and t\n     * exture elements to draw a given character\n     * @param {string} char character to prepare to draw\n     * @param {number} scale text scale\n     * @param {{x: number, y: number}} pen pen to draw with\n     * @param {number} lastGlyphCode last drawn glyph ascii code\n     * @param {Array} outVertexElements out array to store \n     * the characters vertices\n     * @param {Array} outTextureElements out array to store the \n     * characters texture elements\n     * @param {Array} outVertexIndices out array to store the vertices indices\n     * @returns {number} drawn glyph ascii code or 0 if invalid\n     * @private\n     */\n  _createGlyph(char, scale, pen, lastGlyphCode, outVertexElements, outTextureElements, outVertexIndices) {\n    let fontStyle = this.getFontStyle();\n\n    if (!fontStyle) {\n      return 0;\n    }\n\n    let fontDescription = fontStyle.getFontDescription();\n\n    // if font's description or any of the parameters is missing,\n    // no need to go further\n    if (!fontDescription || !fontDescription.chars || !char || !scale || scale <= 0 || !pen || lastGlyphCode == null || !outVertexElements || !outTextureElements || !outVertexIndices) {\n      return 0;\n    }\n\n    // retrieve char ID\n    let charID = fontStyle.findCharID(char);\n\n    // return if null\n    if (charID === null) {\n      return 0;\n    }\n\n    // retrieve font metrics\n    let metrics = fontDescription.chars[charID];\n\n    // retrieve character metrics\n    let width = metrics.width;\n    let height = metrics.height;\n    let xOffset = metrics.xoffset;\n    let yOffset = metrics.yoffset;\n    let xAdvance = metrics.xadvance;\n    let posX = metrics.x;\n    let posY = metrics.y;\n    let asciiCode = metrics.id;\n\n    // set kerning initial value\n    let kern = 0;\n\n    // only prepare character to be drawn if width and height are valid\n    if (width > 0 && height > 0) {\n      // if a glyph was created before\n      if (lastGlyphCode) {\n        // retrieve kerning value between last character and current character\n        kern = fontStyle.getKerning(lastGlyphCode, asciiCode);\n      }\n\n      // TODO: isn't there a way to reuse the indices?\n      let factor = outVertexIndices.length / 6 * 4;\n\n      outVertexIndices.push(0 + factor, 1 + factor, 2 + factor, 1 + factor, 2 + factor, 3 + factor);\n\n      // Add a quad (= two triangles) per glyph.\n      outVertexElements.push(pen.x + (xOffset + kern) * scale, pen.y + yOffset * scale, pen.x + (xOffset + kern + width) * scale, pen.y + yOffset * scale, pen.x + (xOffset + kern) * scale, pen.y + (height + yOffset) * scale, pen.x + (xOffset + kern + width) * scale, pen.y + (height + yOffset) * scale);\n\n      /*              ___\n             |\\           \\  |\n             | \\           \\ |\n             |__\\ and then  \\|\n             */\n      // example without scaling\n      /*\n             var bottomLeftX = pen.x + horiBearingX;\n             var bottomLeftY = pen.y + horiBearingY;\n             vertexElements.push(\n             bottomLeftX, bottomLeftY, // bottom left\n             bottomLeftX + width, bottomLeftY, // bottom right\n             bottomLeftX, bottomLeftY + height, // top left\n              bottomLeftX + width, bottomLeftY, // bottom right\n             bottomLeftX, bottomLeftY + height, // top left\n             bottomLeftX + width, bottomLeftY + height // top right\n             );*/\n\n      outTextureElements.push(posX, posY, posX + width, posY, posX, posY + height, posX + width, posY + height);\n    }\n\n    // TODO: not sure kern should actually be\n    // added to the pen or just help with the offset when drawing.\n    pen.x = pen.x + fontStyle.getLetterSpacing() + (xAdvance + kern) * scale;\n\n    // return the last glyph ascii code\n    return asciiCode;\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Text;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 88 */
/* exports provided: GridExtension */
/* exports used: GridExtension */
/*!*********************************!*\
  !*** ./src/extensions/index.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_extensions_render_gridExt__ = __webpack_require__(/*! extensions/render/gridExt */ 89);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0_extensions_render_gridExt__[\"a\"]; });\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2V4dGVuc2lvbnMvaW5kZXguanM/MDVlNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIEdyaWRFeHRlbnNpb24gfSBmcm9tIFwiZXh0ZW5zaW9ucy9yZW5kZXIvZ3JpZEV4dFwiO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2V4dGVuc2lvbnMvaW5kZXguanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 89 */
/* exports provided: default */
/* exports used: default */
/*!******************************************!*\
  !*** ./src/extensions/render/gridExt.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_core_color__ = __webpack_require__(/*! core/color */ 11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_core_primitiveRender__ = __webpack_require__(/*! core/primitiveRender */ 44);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_core_primitiveBatch__ = __webpack_require__(/*! core/primitiveBatch */ 43);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_math_rectangle__ = __webpack_require__(/*! math/rectangle */ 28);\n\n\n\n\n\n/**\n * Grid Extension Class\n */\nclass GridExt {\n  //#region Constructors\n\n  constructor(params) {\n    params = params || {};\n\n    if (!params.game) {\n      throw new Error(\"Cannot create debug extension without game parameter\");\n    }\n\n    // public properties:\n    this.enabled = true;\n\n    // private properties:\n    this._game = params.game || null;\n    this._gridSize = params.gridSize || 32;\n    this._gridColor = params.gridColor || __WEBPACK_IMPORTED_MODULE_0_core_color__[\"a\" /* default */].Red;\n    this._originLines = true;\n    this._zoomMultiplier = 2;\n    this._primitiveBatch = new __WEBPACK_IMPORTED_MODULE_2_core_primitiveBatch__[\"a\" /* default */](params.game);\n    this._primitiveRender = new __WEBPACK_IMPORTED_MODULE_1_core_primitiveRender__[\"a\" /* default */](params.game);\n    this._useDynamicColor = params.dynamicColor || true;\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  /**\n     *\n     * @param enable\n     */\n  setOriginLines(enable) {\n    this._originLines = enable;\n  }\n\n  /**\n     *\n     * @param value\n     */\n  setGridSize(value) {\n    this._gridSize = value;\n  }\n\n  /**\n     *\n     */\n  getGridSize() {\n    return this._gridSize;\n  }\n\n  /**\n     *\n     * @param color\n     */\n  setGridColor(color) {\n    this._gridColor = color;\n  }\n\n  /**\n     *\n     */\n  render() {\n    // render a grid?\n    if (this.enabled) {\n      this._primitiveBatch.begin();\n\n      // I have an idea that can be great here..\n      // create a global event for whenever the camera properties change (aka, calculate matrix is called), and store\n      // the following calculations on event:\n      let zoom = this._game.getActiveCamera().zoom;\n      let floorZoom = Math.floor(zoom);\n\n      //var gridSize = floorZoom > 1 ? this._gridSize * floorZoom : this._gridSize;\n      let gridSize = this._gridSize;\n      for (let i = 0; i < floorZoom - 1; i++) {\n        if (i % this._zoomMultiplier === 0) {\n          gridSize *= 2;\n        }\n      }\n\n      let upperGridSize = gridSize * 2;\n      let screenResolution = this._game.getVirtualResolution();\n      let offsetX = this._game.getActiveCamera().x - this._game.getActiveCamera().x % gridSize;\n      let offsetY = this._game.getActiveCamera().y - this._game.getActiveCamera().y % gridSize;\n      let zoomDifX = zoom * screenResolution.width * 2.0;\n      let zoomDifY = zoom * screenResolution.height * 2.0;\n      let howManyX = Math.floor((screenResolution.width + zoomDifX) / gridSize + 2);\n      let howManyY = Math.floor((screenResolution.height + zoomDifY) / gridSize + 2);\n      let alignedX = Math.floor(howManyX / 2.0) % 2 === 0;\n      let alignedY = Math.floor(howManyY / 2.0) % 2 === 0;\n      let left = -(screenResolution.width + zoomDifX) / 2;\n      let right = (screenResolution.width + zoomDifX) / 2;\n      let top = -(screenResolution.height + zoomDifY) / 2;\n      let bottom = (screenResolution.height + zoomDifY) / 2;\n      let dynColor = this._gridColor.clone();\n      let color = null;\n\n      if (zoom > 1 && this._useDynamicColor) {\n        dynColor.a = 1 - zoom % this._zoomMultiplier / this._zoomMultiplier;\n      }\n\n      // horizontal shift ||||||||\n      for (let x = 0; x < howManyX; x++) {\n        color = this._gridColor;\n        if (this._useDynamicColor && (x * gridSize + offsetX + (alignedX ? gridSize : 0)) % upperGridSize) {\n          color = dynColor;\n        }\n\n        this._primitiveBatch.storeLine({\n          x: x * gridSize + left - left % gridSize + offsetX,\n          y: bottom + gridSize + offsetY\n        }, {\n          x: x * gridSize + left - left % gridSize + offsetX,\n          y: top - gridSize + offsetY\n        }, color);\n      }\n\n      // vertical shift _ _ _ _ _\n      for (let y = 0; y < howManyY; y++) {\n        color = this._gridColor;\n        if (this._useDynamicColor && (y * gridSize + offsetY + (alignedY ? gridSize : 0)) % upperGridSize) {\n          color = dynColor;\n        }\n\n        this._primitiveBatch.storeLine({\n          x: right + this._gridSize + offsetX,\n          y: y * gridSize + top - top % gridSize + offsetY\n        }, {\n          x: left - gridSize + offsetX,\n          y: y * gridSize + top - top % gridSize + offsetY\n        }, color);\n      }\n\n      this._primitiveBatch.flushLines();\n\n      // main \"lines\" (origin)\n      if (this._originLines) {\n        // vertical\n        this._primitiveRender.drawRectangle(new __WEBPACK_IMPORTED_MODULE_3_math_rectangle__[\"a\" /* default */](-2, top - this._gridSize + offsetY, 4, screenResolution.height + zoomDifY), this._gridColor);\n\n        // horizontal\n        this._primitiveRender.drawRectangle(new __WEBPACK_IMPORTED_MODULE_3_math_rectangle__[\"a\" /* default */](left - this._gridSize + offsetX, -2, screenResolution.width + zoomDifX, 4), this._gridColor);\n      }\n    }\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = GridExt;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiODkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2V4dGVuc2lvbnMvcmVuZGVyL2dyaWRFeHQuanM/ZmZiYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQ29sb3IgZnJvbSBcImNvcmUvY29sb3JcIjtcbmltcG9ydCBQcmltaXRpdmVSZW5kZXIgZnJvbSBcImNvcmUvcHJpbWl0aXZlUmVuZGVyXCI7XG5pbXBvcnQgUHJpbWl0aXZlQmF0Y2ggZnJvbSBcImNvcmUvcHJpbWl0aXZlQmF0Y2hcIjtcbmltcG9ydCBSZWN0YW5nbGUgZnJvbSBcIm1hdGgvcmVjdGFuZ2xlXCI7XG5cbi8qKlxuICogR3JpZCBFeHRlbnNpb24gQ2xhc3NcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR3JpZEV4dCB7XG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcblxuICBjb25zdHJ1Y3RvcihwYXJhbXMpIHtcbiAgICBwYXJhbXMgPSBwYXJhbXMgfHwge307XG5cbiAgICBpZiAoIXBhcmFtcy5nYW1lKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgY3JlYXRlIGRlYnVnIGV4dGVuc2lvbiB3aXRob3V0IGdhbWUgcGFyYW1ldGVyXCIpO1xuICAgIH1cblxuICAgIC8vIHB1YmxpYyBwcm9wZXJ0aWVzOlxuICAgIHRoaXMuZW5hYmxlZCA9IHRydWU7XG5cbiAgICAvLyBwcml2YXRlIHByb3BlcnRpZXM6XG4gICAgdGhpcy5fZ2FtZSA9IHBhcmFtcy5nYW1lIHx8IG51bGw7XG4gICAgdGhpcy5fZ3JpZFNpemUgPSBwYXJhbXMuZ3JpZFNpemUgfHwgMzI7XG4gICAgdGhpcy5fZ3JpZENvbG9yID0gcGFyYW1zLmdyaWRDb2xvciB8fCBDb2xvci5SZWQ7XG4gICAgdGhpcy5fb3JpZ2luTGluZXMgPSB0cnVlO1xuICAgIHRoaXMuX3pvb21NdWx0aXBsaWVyID0gMjtcbiAgICB0aGlzLl9wcmltaXRpdmVCYXRjaCA9IG5ldyBQcmltaXRpdmVCYXRjaChwYXJhbXMuZ2FtZSk7XG4gICAgdGhpcy5fcHJpbWl0aXZlUmVuZGVyID0gbmV3IFByaW1pdGl2ZVJlbmRlcihwYXJhbXMuZ2FtZSk7XG4gICAgdGhpcy5fdXNlRHluYW1pY0NvbG9yID0gcGFyYW1zLmR5bmFtaWNDb2xvciB8fCB0cnVlO1xuICB9XG5cbiAgLy8jZW5kcmVnaW9uXG5cbiAgLy8jcmVnaW9uIE1ldGhvZHNcblxuICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBlbmFibGVcbiAgICAgKi9cbiAgc2V0T3JpZ2luTGluZXMoZW5hYmxlKSB7XG4gICAgdGhpcy5fb3JpZ2luTGluZXMgPSBlbmFibGU7XG4gIH1cblxuICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSB2YWx1ZVxuICAgICAqL1xuICBzZXRHcmlkU2l6ZSh2YWx1ZSkge1xuICAgIHRoaXMuX2dyaWRTaXplID0gdmFsdWU7XG4gIH1cblxuICAvKipcbiAgICAgKlxuICAgICAqL1xuICBnZXRHcmlkU2l6ZSgpIHtcbiAgICByZXR1cm4gdGhpcy5fZ3JpZFNpemU7XG4gIH1cblxuICAvKipcbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb2xvclxuICAgICAqL1xuICBzZXRHcmlkQ29sb3IoY29sb3IpIHtcbiAgICB0aGlzLl9ncmlkQ29sb3IgPSBjb2xvcjtcbiAgfVxuXG4gIC8qKlxuICAgICAqXG4gICAgICovXG4gIHJlbmRlcigpIHtcbiAgICAvLyByZW5kZXIgYSBncmlkP1xuICAgIGlmICh0aGlzLmVuYWJsZWQpIHtcbiAgICAgIHRoaXMuX3ByaW1pdGl2ZUJhdGNoLmJlZ2luKCk7XG5cbiAgICAgIC8vIEkgaGF2ZSBhbiBpZGVhIHRoYXQgY2FuIGJlIGdyZWF0IGhlcmUuLlxuICAgICAgLy8gY3JlYXRlIGEgZ2xvYmFsIGV2ZW50IGZvciB3aGVuZXZlciB0aGUgY2FtZXJhIHByb3BlcnRpZXMgY2hhbmdlIChha2EsIGNhbGN1bGF0ZSBtYXRyaXggaXMgY2FsbGVkKSwgYW5kIHN0b3JlXG4gICAgICAvLyB0aGUgZm9sbG93aW5nIGNhbGN1bGF0aW9ucyBvbiBldmVudDpcbiAgICAgIGxldCB6b29tID0gdGhpcy5fZ2FtZS5nZXRBY3RpdmVDYW1lcmEoKS56b29tO1xuICAgICAgbGV0IGZsb29yWm9vbSA9IE1hdGguZmxvb3Ioem9vbSk7XG5cbiAgICAgIC8vdmFyIGdyaWRTaXplID0gZmxvb3Jab29tID4gMSA/IHRoaXMuX2dyaWRTaXplICogZmxvb3Jab29tIDogdGhpcy5fZ3JpZFNpemU7XG4gICAgICBsZXQgZ3JpZFNpemUgPSB0aGlzLl9ncmlkU2l6ZTtcbiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZmxvb3Jab29tIC0gMTsgaSsrKSB7XG4gICAgICAgIGlmIChpICUgdGhpcy5fem9vbU11bHRpcGxpZXIgPT09IDApIHtcbiAgICAgICAgICBncmlkU2l6ZSAqPSAyO1xuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIGxldCB1cHBlckdyaWRTaXplID0gZ3JpZFNpemUgKiAyO1xuICAgICAgbGV0IHNjcmVlblJlc29sdXRpb24gPSB0aGlzLl9nYW1lLmdldFZpcnR1YWxSZXNvbHV0aW9uKCk7XG4gICAgICBsZXQgb2Zmc2V0WCA9IHRoaXMuX2dhbWUuZ2V0QWN0aXZlQ2FtZXJhKCkueCAtIHRoaXMuX2dhbWUuZ2V0QWN0aXZlQ2FtZXJhKCkueCAlIGdyaWRTaXplO1xuICAgICAgbGV0IG9mZnNldFkgPSB0aGlzLl9nYW1lLmdldEFjdGl2ZUNhbWVyYSgpLnkgLSB0aGlzLl9nYW1lLmdldEFjdGl2ZUNhbWVyYSgpLnkgJSBncmlkU2l6ZTtcbiAgICAgIGxldCB6b29tRGlmWCA9IHpvb20gKiBzY3JlZW5SZXNvbHV0aW9uLndpZHRoICogMi4wO1xuICAgICAgbGV0IHpvb21EaWZZID0gem9vbSAqIHNjcmVlblJlc29sdXRpb24uaGVpZ2h0ICogMi4wO1xuICAgICAgbGV0IGhvd01hbnlYID0gTWF0aC5mbG9vcigoc2NyZWVuUmVzb2x1dGlvbi53aWR0aCArIHpvb21EaWZYKSAvIGdyaWRTaXplICsgMik7XG4gICAgICBsZXQgaG93TWFueVkgPSBNYXRoLmZsb29yKChzY3JlZW5SZXNvbHV0aW9uLmhlaWdodCArIHpvb21EaWZZKSAvIGdyaWRTaXplICsgMik7XG4gICAgICBsZXQgYWxpZ25lZFggPSBNYXRoLmZsb29yKGhvd01hbnlYIC8gMi4wKSAlIDIgPT09IDA7XG4gICAgICBsZXQgYWxpZ25lZFkgPSBNYXRoLmZsb29yKGhvd01hbnlZIC8gMi4wKSAlIDIgPT09IDA7XG4gICAgICBsZXQgbGVmdCA9IC0oc2NyZWVuUmVzb2x1dGlvbi53aWR0aCArIHpvb21EaWZYKSAvIDI7XG4gICAgICBsZXQgcmlnaHQgPSAoc2NyZWVuUmVzb2x1dGlvbi53aWR0aCArIHpvb21EaWZYKSAvIDI7XG4gICAgICBsZXQgdG9wID0gLShzY3JlZW5SZXNvbHV0aW9uLmhlaWdodCArIHpvb21EaWZZKSAvIDI7XG4gICAgICBsZXQgYm90dG9tID0gKHNjcmVlblJlc29sdXRpb24uaGVpZ2h0ICsgem9vbURpZlkpIC8gMjtcbiAgICAgIGxldCBkeW5Db2xvciA9IHRoaXMuX2dyaWRDb2xvci5jbG9uZSgpO1xuICAgICAgbGV0IGNvbG9yID0gbnVsbDtcblxuICAgICAgaWYgKHpvb20gPiAxICYmIHRoaXMuX3VzZUR5bmFtaWNDb2xvcikge1xuICAgICAgICBkeW5Db2xvci5hID0gMSAtIHpvb20gJSB0aGlzLl96b29tTXVsdGlwbGllciAvIHRoaXMuX3pvb21NdWx0aXBsaWVyO1xuICAgICAgfVxuXG4gICAgICAvLyBob3Jpem9udGFsIHNoaWZ0IHx8fHx8fHx8XG4gICAgICBmb3IgKGxldCB4ID0gMDsgeCA8IGhvd01hbnlYOyB4KyspIHtcbiAgICAgICAgY29sb3IgPSB0aGlzLl9ncmlkQ29sb3I7XG4gICAgICAgIGlmICh0aGlzLl91c2VEeW5hbWljQ29sb3IgJiYgKHggKiBncmlkU2l6ZSArIG9mZnNldFggKyAoYWxpZ25lZFggPyBncmlkU2l6ZSA6IDApKSAlIHVwcGVyR3JpZFNpemUpIHtcbiAgICAgICAgICBjb2xvciA9IGR5bkNvbG9yO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fcHJpbWl0aXZlQmF0Y2guc3RvcmVMaW5lKFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHg6IHggKiBncmlkU2l6ZSArIGxlZnQgLSBsZWZ0ICUgZ3JpZFNpemUgKyBvZmZzZXRYLFxuICAgICAgICAgICAgeTogYm90dG9tICsgZ3JpZFNpemUgKyBvZmZzZXRZXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB4OiB4ICogZ3JpZFNpemUgKyBsZWZ0IC0gbGVmdCAlIGdyaWRTaXplICsgb2Zmc2V0WCxcbiAgICAgICAgICAgIHk6IHRvcCAtIGdyaWRTaXplICsgb2Zmc2V0WVxuICAgICAgICAgIH0sXG4gICAgICAgICAgY29sb3JcbiAgICAgICAgKTtcbiAgICAgIH1cblxuICAgICAgLy8gdmVydGljYWwgc2hpZnQgXyBfIF8gXyBfXG4gICAgICBmb3IgKGxldCB5ID0gMDsgeSA8IGhvd01hbnlZOyB5KyspIHtcbiAgICAgICAgY29sb3IgPSB0aGlzLl9ncmlkQ29sb3I7XG4gICAgICAgIGlmICh0aGlzLl91c2VEeW5hbWljQ29sb3IgJiYgKHkgKiBncmlkU2l6ZSArIG9mZnNldFkgKyAoYWxpZ25lZFkgPyBncmlkU2l6ZSA6IDApKSAlIHVwcGVyR3JpZFNpemUpIHtcbiAgICAgICAgICBjb2xvciA9IGR5bkNvbG9yO1xuICAgICAgICB9XG5cbiAgICAgICAgdGhpcy5fcHJpbWl0aXZlQmF0Y2guc3RvcmVMaW5lKFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHg6IHJpZ2h0ICsgdGhpcy5fZ3JpZFNpemUgKyBvZmZzZXRYLFxuICAgICAgICAgICAgeTogeSAqIGdyaWRTaXplICsgdG9wIC0gdG9wICUgZ3JpZFNpemUgKyBvZmZzZXRZXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICB4OiBsZWZ0IC0gZ3JpZFNpemUgKyBvZmZzZXRYLFxuICAgICAgICAgICAgeTogeSAqIGdyaWRTaXplICsgdG9wIC0gdG9wICUgZ3JpZFNpemUgKyBvZmZzZXRZXG4gICAgICAgICAgfSxcbiAgICAgICAgICBjb2xvclxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9wcmltaXRpdmVCYXRjaC5mbHVzaExpbmVzKCk7XG5cbiAgICAgIC8vIG1haW4gXCJsaW5lc1wiIChvcmlnaW4pXG4gICAgICBpZiAodGhpcy5fb3JpZ2luTGluZXMpIHtcbiAgICAgICAgLy8gdmVydGljYWxcbiAgICAgICAgdGhpcy5fcHJpbWl0aXZlUmVuZGVyLmRyYXdSZWN0YW5nbGUoXG4gICAgICAgICAgbmV3IFJlY3RhbmdsZSgtMiwgdG9wIC0gdGhpcy5fZ3JpZFNpemUgKyBvZmZzZXRZLCA0LCBzY3JlZW5SZXNvbHV0aW9uLmhlaWdodCArIHpvb21EaWZZKSxcbiAgICAgICAgICB0aGlzLl9ncmlkQ29sb3JcbiAgICAgICAgKTtcblxuICAgICAgICAvLyBob3Jpem9udGFsXG4gICAgICAgIHRoaXMuX3ByaW1pdGl2ZVJlbmRlci5kcmF3UmVjdGFuZ2xlKFxuICAgICAgICAgIG5ldyBSZWN0YW5nbGUobGVmdCAtIHRoaXMuX2dyaWRTaXplICsgb2Zmc2V0WCwgLTIsIHNjcmVlblJlc29sdXRpb24ud2lkdGggKyB6b29tRGlmWCwgNCksXG4gICAgICAgICAgdGhpcy5fZ3JpZENvbG9yXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgLy8jZW5kcmVnaW9uXG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL2V4dGVuc2lvbnMvcmVuZGVyL2dyaWRFeHQuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRkE7QUFLQTtBQUNBO0FBRkE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFGQTtBQUtBO0FBQ0E7QUFGQTtBQU1BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBaktBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 90 */
/* exports provided: KeyboardState, Keyboard, Keys */
/* exports used: KeyboardState, Keyboard, Keys */
/*!****************************!*\
  !*** ./src/input/index.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__keyboardState__ = __webpack_require__(/*! ./keyboardState */ 50);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__keyboardState__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__keyboard__ = __webpack_require__(/*! ./keyboard */ 49);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__keyboard__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__keys__ = __webpack_require__(/*! ./keys */ 51);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__keys__[\"a\"]; });\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTAuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL2lucHV0L2luZGV4LmpzPzJiNWEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCBhcyBLZXlib2FyZFN0YXRlIH0gZnJvbSBcIi4va2V5Ym9hcmRTdGF0ZVwiO1xyXG5leHBvcnQgeyBLZXlib2FyZCB9IGZyb20gXCIuL2tleWJvYXJkXCI7XHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgS2V5cyB9IGZyb20gXCIuL2tleXNcIjtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9pbnB1dC9pbmRleC5qcyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 91 */
/* exports provided: Boundary, MathHelper, Matrix3, Matrix4, Ray, Rectangle, Vector2, Vector3, Vector4 */
/* exports used: Boundary, MathHelper, Matrix3, Matrix4, Ray, Rectangle, Vector2, Vector3, Vector4 */
/*!***************************!*\
  !*** ./src/math/index.js ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__boundary__ = __webpack_require__(/*! ./boundary */ 52);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__boundary__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__mathHelper__ = __webpack_require__(/*! ./mathHelper */ 15);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__mathHelper__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__matrix3__ = __webpack_require__(/*! ./matrix3 */ 92);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__matrix3__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__matrix4__ = __webpack_require__(/*! ./matrix4 */ 16);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__matrix4__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__ray__ = __webpack_require__(/*! ./ray */ 93);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_4__ray__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__rectangle__ = __webpack_require__(/*! ./rectangle */ 28);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_5__rectangle__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__vector2__ = __webpack_require__(/*! ./vector2 */ 5);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return __WEBPACK_IMPORTED_MODULE_6__vector2__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__vector3__ = __webpack_require__(/*! ./vector3 */ 94);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return __WEBPACK_IMPORTED_MODULE_7__vector3__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__vector4__ = __webpack_require__(/*! ./vector4 */ 95);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return __WEBPACK_IMPORTED_MODULE_8__vector4__[\"a\"]; });\n\n\n\n\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTEuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdGgvaW5kZXguanM/Mzg1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIEJvdW5kYXJ5IH0gZnJvbSBcIi4vYm91bmRhcnlcIjtcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBNYXRoSGVscGVyIH0gZnJvbSBcIi4vbWF0aEhlbHBlclwiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIE1hdHJpeDMgfSBmcm9tIFwiLi9tYXRyaXgzXCI7XHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgTWF0cml4NCB9IGZyb20gXCIuL21hdHJpeDRcIjtcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBSYXkgfSBmcm9tIFwiLi9yYXlcIjtcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBSZWN0YW5nbGUgfSBmcm9tIFwiLi9yZWN0YW5nbGVcIjtcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBWZWN0b3IyIH0gZnJvbSBcIi4vdmVjdG9yMlwiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFZlY3RvcjMgfSBmcm9tIFwiLi92ZWN0b3IzXCI7XHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgVmVjdG9yNCB9IGZyb20gXCIuL3ZlY3RvcjRcIjtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9tYXRoL2luZGV4LmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 92 */
/* exports provided: default */
/* exports used: default */
/*!*****************************!*\
  !*** ./src/math/matrix3.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/**\r\n * Matrix3 class @ based on Tdl.Math\r\n * https://github.com/greggman/tdl/blob/master/tdl/math.js\r\n */\nclass Matrix3 {\n  /**\r\n     * Class constructor\r\n     * @param {Array|Float32Array=} array\r\n     */\n  constructor(array) {\n    if ((array instanceof Array || array instanceof Float32Array) && array.length === 9) {\n      this._matrix = new Float32Array(array);\n    } else {\n      this._matrix = new Float32Array(9);\n    }\n  }\n\n  /**\r\n     * Copies the content of the current matrix to another\r\n     * @param {Matrix3} outMatrix\r\n     */\n  copy(outMatrix) {\n    if (outMatrix instanceof Matrix3) {\n      outMatrix.setFromArray(this.asArray());\n    }\n  }\n\n  /**\r\n     *\r\n     * @param {Array|Float32Array} array\r\n     */\n  setFromArray(array) {\n    if ((array instanceof Array || array instanceof Float32Array) && array.length === 9) {\n      this._matrix = new Float32Array(array);\n    }\n  }\n\n  /**\r\n     * Returns a cloned Matrix\r\n     */\n  clone() {\n    return new Matrix3(this._matrix.asArray());\n  }\n\n  /**\r\n     * Returns the matrix array value\r\n     * @returns {Float32Array}\r\n     */\n  asArray() {\n    return this._matrix;\n  }\n\n  /**\r\n     * Calculates the inverse matrix\r\n     * @returns {Float32Array}\r\n     */\n  invert() {\n    let t00 = this._matrix[1 * 3 + 1] * this._matrix[2 * 3 + 2] - this._matrix[1 * 3 + 2] * this._matrix[2 * 3 + 1];\n    let t10 = this._matrix[0 * 3 + 1] * this._matrix[2 * 3 + 2] - this._matrix[0 * 3 + 2] * this._matrix[2 * 3 + 1];\n    let t20 = this._matrix[0 * 3 + 1] * this._matrix[1 * 3 + 2] - this._matrix[0 * 3 + 2] * this._matrix[1 * 3 + 1];\n    let d = 1.0 / (this._matrix[0 * 3 + 0] * t00 - this._matrix[1 * 3 + 0] * t10 + this._matrix[2 * 3 + 0] * t20);\n\n    this._matrix[0] = d * t00;\n    this._matrix[1] = -d * t10;\n    this._matrix[2] = d * t20;\n    this._matrix[3] = -d * (this._matrix[1 * 3 + 0] * this._matrix[2 * 3 + 2] - this._matrix[1 * 3 + 2] * this._matrix[2 * 3 + 0]);\n    this._matrix[4] = d * (this._matrix[0 * 3 + 0] * this._matrix[2 * 3 + 2] - this._matrix[0 * 3 + 2] * this._matrix[2 * 3 + 0]);\n    this._matrix[5] = -d * (this._matrix[0 * 3 + 0] * this._matrix[1 * 3 + 2] - this._matrix[0 * 3 + 2] * this._matrix[1 * 3 + 0]);\n    this._matrix[6] = d * (this._matrix[1 * 3 + 0] * this._matrix[2 * 3 + 1] - this._matrix[1 * 3 + 1] * this._matrix[2 * 3 + 0]);\n    this._matrix[7] = -d * (this._matrix[0 * 3 + 0] * this._matrix[2 * 3 + 1] - this._matrix[0 * 3 + 1] * this._matrix[2 * 3 + 0]);\n    this._matrix[8] = d * (this._matrix[0 * 3 + 0] * this._matrix[1 * 3 + 1] - this._matrix[0 * 3 + 1] * this._matrix[1 * 3 + 0]);\n\n    return this._matrix;\n  }\n\n  /**\r\n     * Multiples the current Matrix3 by another Matrix3\r\n     * @param matrix3\r\n     */\n  multiply(matrix3) {\n    let a00 = this._matrix[0 * 3 + 0];\n    let a01 = this._matrix[0 * 3 + 1];\n    let a02 = this._matrix[0 * 3 + 2];\n    let a10 = this._matrix[1 * 3 + 0];\n    let a11 = this._matrix[1 * 3 + 1];\n    let a12 = this._matrix[1 * 3 + 2];\n    let a20 = this._matrix[2 * 3 + 0];\n    let a21 = this._matrix[2 * 3 + 1];\n    let a22 = this._matrix[2 * 3 + 2];\n\n    let b00 = matrix3[0 * 3 + 0];\n    let b01 = matrix3[0 * 3 + 1];\n    let b02 = matrix3[0 * 3 + 2];\n    let b10 = matrix3[1 * 3 + 0];\n    let b11 = matrix3[1 * 3 + 1];\n    let b12 = matrix3[1 * 3 + 2];\n    let b20 = matrix3[2 * 3 + 0];\n    let b21 = matrix3[2 * 3 + 1];\n    let b22 = matrix3[2 * 3 + 2];\n\n    this._matrix[0] = a00 * b00 + a01 * b10 + a02 * b20;\n    this._matrix[1] = a00 * b01 + a01 * b11 + a02 * b21;\n    this._matrix[2] = a00 * b02 + a01 * b12 + a02 * b22;\n    this._matrix[3] = a10 * b00 + a11 * b10 + a12 * b20;\n    this._matrix[4] = a10 * b01 + a11 * b11 + a12 * b21;\n    this._matrix[5] = a10 * b02 + a11 * b12 + a12 * b22;\n    this._matrix[6] = a20 * b00 + a21 * b10 + a22 * b20;\n    this._matrix[7] = a20 * b01 + a21 * b11 + a22 * b21;\n    this._matrix[8] = a20 * b02 + a21 * b12 + a22 * b22;\n\n    return this._matrix;\n  }\n\n  /**\r\n     * Set Matrix identity\r\n     * @returns {Float32Array}\r\n     */\n  identity() {\n    this._matrix[0] = 1;\n    this._matrix[1] = 0;\n    this._matrix[2] = 0;\n    this._matrix[3] = 0;\n    this._matrix[4] = 1;\n    this._matrix[5] = 0;\n    this._matrix[6] = 0;\n    this._matrix[7] = 0;\n    this._matrix[8] = 1;\n\n    return this._matrix;\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Matrix3;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTIuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdGgvbWF0cml4My5qcz83NDljIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBNYXRyaXgzIGNsYXNzIEAgYmFzZWQgb24gVGRsLk1hdGhcclxuICogaHR0cHM6Ly9naXRodWIuY29tL2dyZWdnbWFuL3RkbC9ibG9iL21hc3Rlci90ZGwvbWF0aC5qc1xyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWF0cml4MyB7XHJcbiAgLyoqXHJcbiAgICAgKiBDbGFzcyBjb25zdHJ1Y3RvclxyXG4gICAgICogQHBhcmFtIHtBcnJheXxGbG9hdDMyQXJyYXk9fSBhcnJheVxyXG4gICAgICovXHJcbiAgY29uc3RydWN0b3IoYXJyYXkpIHtcclxuICAgIGlmICgoYXJyYXkgaW5zdGFuY2VvZiBBcnJheSB8fCBhcnJheSBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheSkgJiYgYXJyYXkubGVuZ3RoID09PSA5KSB7XHJcbiAgICAgIHRoaXMuX21hdHJpeCA9IG5ldyBGbG9hdDMyQXJyYXkoYXJyYXkpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5fbWF0cml4ID0gbmV3IEZsb2F0MzJBcnJheSg5KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogQ29waWVzIHRoZSBjb250ZW50IG9mIHRoZSBjdXJyZW50IG1hdHJpeCB0byBhbm90aGVyXHJcbiAgICAgKiBAcGFyYW0ge01hdHJpeDN9IG91dE1hdHJpeFxyXG4gICAgICovXHJcbiAgY29weShvdXRNYXRyaXgpIHtcclxuICAgIGlmIChvdXRNYXRyaXggaW5zdGFuY2VvZiBNYXRyaXgzKSB7XHJcbiAgICAgIG91dE1hdHJpeC5zZXRGcm9tQXJyYXkodGhpcy5hc0FycmF5KCkpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKlxyXG4gICAgICogQHBhcmFtIHtBcnJheXxGbG9hdDMyQXJyYXl9IGFycmF5XHJcbiAgICAgKi9cclxuICBzZXRGcm9tQXJyYXkoYXJyYXkpIHtcclxuICAgIGlmICgoYXJyYXkgaW5zdGFuY2VvZiBBcnJheSB8fCBhcnJheSBpbnN0YW5jZW9mIEZsb2F0MzJBcnJheSkgJiYgYXJyYXkubGVuZ3RoID09PSA5KSB7XHJcbiAgICAgIHRoaXMuX21hdHJpeCA9IG5ldyBGbG9hdDMyQXJyYXkoYXJyYXkpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBSZXR1cm5zIGEgY2xvbmVkIE1hdHJpeFxyXG4gICAgICovXHJcbiAgY2xvbmUoKSB7XHJcbiAgICByZXR1cm4gbmV3IE1hdHJpeDModGhpcy5fbWF0cml4LmFzQXJyYXkoKSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgICAqIFJldHVybnMgdGhlIG1hdHJpeCBhcnJheSB2YWx1ZVxyXG4gICAgICogQHJldHVybnMge0Zsb2F0MzJBcnJheX1cclxuICAgICAqL1xyXG4gIGFzQXJyYXkoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fbWF0cml4O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBDYWxjdWxhdGVzIHRoZSBpbnZlcnNlIG1hdHJpeFxyXG4gICAgICogQHJldHVybnMge0Zsb2F0MzJBcnJheX1cclxuICAgICAqL1xyXG4gIGludmVydCgpIHtcclxuICAgIGxldCB0MDAgPSB0aGlzLl9tYXRyaXhbMSAqIDMgKyAxXSAqIHRoaXMuX21hdHJpeFsyICogMyArIDJdIC0gdGhpcy5fbWF0cml4WzEgKiAzICsgMl0gKiB0aGlzLl9tYXRyaXhbMiAqIDMgKyAxXTtcclxuICAgIGxldCB0MTAgPSB0aGlzLl9tYXRyaXhbMCAqIDMgKyAxXSAqIHRoaXMuX21hdHJpeFsyICogMyArIDJdIC0gdGhpcy5fbWF0cml4WzAgKiAzICsgMl0gKiB0aGlzLl9tYXRyaXhbMiAqIDMgKyAxXTtcclxuICAgIGxldCB0MjAgPSB0aGlzLl9tYXRyaXhbMCAqIDMgKyAxXSAqIHRoaXMuX21hdHJpeFsxICogMyArIDJdIC0gdGhpcy5fbWF0cml4WzAgKiAzICsgMl0gKiB0aGlzLl9tYXRyaXhbMSAqIDMgKyAxXTtcclxuICAgIGxldCBkID0gMS4wIC8gKHRoaXMuX21hdHJpeFswICogMyArIDBdICogdDAwIC0gdGhpcy5fbWF0cml4WzEgKiAzICsgMF0gKiB0MTAgKyB0aGlzLl9tYXRyaXhbMiAqIDMgKyAwXSAqIHQyMCk7XHJcblxyXG4gICAgdGhpcy5fbWF0cml4WzBdID0gZCAqIHQwMDtcclxuICAgIHRoaXMuX21hdHJpeFsxXSA9IC1kICogdDEwO1xyXG4gICAgdGhpcy5fbWF0cml4WzJdID0gZCAqIHQyMDtcclxuICAgIHRoaXMuX21hdHJpeFszXSA9XHJcbiAgICAgIC1kICogKHRoaXMuX21hdHJpeFsxICogMyArIDBdICogdGhpcy5fbWF0cml4WzIgKiAzICsgMl0gLSB0aGlzLl9tYXRyaXhbMSAqIDMgKyAyXSAqIHRoaXMuX21hdHJpeFsyICogMyArIDBdKTtcclxuICAgIHRoaXMuX21hdHJpeFs0XSA9XHJcbiAgICAgIGQgKiAodGhpcy5fbWF0cml4WzAgKiAzICsgMF0gKiB0aGlzLl9tYXRyaXhbMiAqIDMgKyAyXSAtIHRoaXMuX21hdHJpeFswICogMyArIDJdICogdGhpcy5fbWF0cml4WzIgKiAzICsgMF0pO1xyXG4gICAgdGhpcy5fbWF0cml4WzVdID1cclxuICAgICAgLWQgKiAodGhpcy5fbWF0cml4WzAgKiAzICsgMF0gKiB0aGlzLl9tYXRyaXhbMSAqIDMgKyAyXSAtIHRoaXMuX21hdHJpeFswICogMyArIDJdICogdGhpcy5fbWF0cml4WzEgKiAzICsgMF0pO1xyXG4gICAgdGhpcy5fbWF0cml4WzZdID1cclxuICAgICAgZCAqICh0aGlzLl9tYXRyaXhbMSAqIDMgKyAwXSAqIHRoaXMuX21hdHJpeFsyICogMyArIDFdIC0gdGhpcy5fbWF0cml4WzEgKiAzICsgMV0gKiB0aGlzLl9tYXRyaXhbMiAqIDMgKyAwXSk7XHJcbiAgICB0aGlzLl9tYXRyaXhbN10gPVxyXG4gICAgICAtZCAqICh0aGlzLl9tYXRyaXhbMCAqIDMgKyAwXSAqIHRoaXMuX21hdHJpeFsyICogMyArIDFdIC0gdGhpcy5fbWF0cml4WzAgKiAzICsgMV0gKiB0aGlzLl9tYXRyaXhbMiAqIDMgKyAwXSk7XHJcbiAgICB0aGlzLl9tYXRyaXhbOF0gPVxyXG4gICAgICBkICogKHRoaXMuX21hdHJpeFswICogMyArIDBdICogdGhpcy5fbWF0cml4WzEgKiAzICsgMV0gLSB0aGlzLl9tYXRyaXhbMCAqIDMgKyAxXSAqIHRoaXMuX21hdHJpeFsxICogMyArIDBdKTtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5fbWF0cml4O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBNdWx0aXBsZXMgdGhlIGN1cnJlbnQgTWF0cml4MyBieSBhbm90aGVyIE1hdHJpeDNcclxuICAgICAqIEBwYXJhbSBtYXRyaXgzXHJcbiAgICAgKi9cclxuICBtdWx0aXBseShtYXRyaXgzKSB7XHJcbiAgICBsZXQgYTAwID0gdGhpcy5fbWF0cml4WzAgKiAzICsgMF07XHJcbiAgICBsZXQgYTAxID0gdGhpcy5fbWF0cml4WzAgKiAzICsgMV07XHJcbiAgICBsZXQgYTAyID0gdGhpcy5fbWF0cml4WzAgKiAzICsgMl07XHJcbiAgICBsZXQgYTEwID0gdGhpcy5fbWF0cml4WzEgKiAzICsgMF07XHJcbiAgICBsZXQgYTExID0gdGhpcy5fbWF0cml4WzEgKiAzICsgMV07XHJcbiAgICBsZXQgYTEyID0gdGhpcy5fbWF0cml4WzEgKiAzICsgMl07XHJcbiAgICBsZXQgYTIwID0gdGhpcy5fbWF0cml4WzIgKiAzICsgMF07XHJcbiAgICBsZXQgYTIxID0gdGhpcy5fbWF0cml4WzIgKiAzICsgMV07XHJcbiAgICBsZXQgYTIyID0gdGhpcy5fbWF0cml4WzIgKiAzICsgMl07XHJcblxyXG4gICAgbGV0IGIwMCA9IG1hdHJpeDNbMCAqIDMgKyAwXTtcclxuICAgIGxldCBiMDEgPSBtYXRyaXgzWzAgKiAzICsgMV07XHJcbiAgICBsZXQgYjAyID0gbWF0cml4M1swICogMyArIDJdO1xyXG4gICAgbGV0IGIxMCA9IG1hdHJpeDNbMSAqIDMgKyAwXTtcclxuICAgIGxldCBiMTEgPSBtYXRyaXgzWzEgKiAzICsgMV07XHJcbiAgICBsZXQgYjEyID0gbWF0cml4M1sxICogMyArIDJdO1xyXG4gICAgbGV0IGIyMCA9IG1hdHJpeDNbMiAqIDMgKyAwXTtcclxuICAgIGxldCBiMjEgPSBtYXRyaXgzWzIgKiAzICsgMV07XHJcbiAgICBsZXQgYjIyID0gbWF0cml4M1syICogMyArIDJdO1xyXG5cclxuICAgIHRoaXMuX21hdHJpeFswXSA9IGEwMCAqIGIwMCArIGEwMSAqIGIxMCArIGEwMiAqIGIyMDtcclxuICAgIHRoaXMuX21hdHJpeFsxXSA9IGEwMCAqIGIwMSArIGEwMSAqIGIxMSArIGEwMiAqIGIyMTtcclxuICAgIHRoaXMuX21hdHJpeFsyXSA9IGEwMCAqIGIwMiArIGEwMSAqIGIxMiArIGEwMiAqIGIyMjtcclxuICAgIHRoaXMuX21hdHJpeFszXSA9IGExMCAqIGIwMCArIGExMSAqIGIxMCArIGExMiAqIGIyMDtcclxuICAgIHRoaXMuX21hdHJpeFs0XSA9IGExMCAqIGIwMSArIGExMSAqIGIxMSArIGExMiAqIGIyMTtcclxuICAgIHRoaXMuX21hdHJpeFs1XSA9IGExMCAqIGIwMiArIGExMSAqIGIxMiArIGExMiAqIGIyMjtcclxuICAgIHRoaXMuX21hdHJpeFs2XSA9IGEyMCAqIGIwMCArIGEyMSAqIGIxMCArIGEyMiAqIGIyMDtcclxuICAgIHRoaXMuX21hdHJpeFs3XSA9IGEyMCAqIGIwMSArIGEyMSAqIGIxMSArIGEyMiAqIGIyMTtcclxuICAgIHRoaXMuX21hdHJpeFs4XSA9IGEyMCAqIGIwMiArIGEyMSAqIGIxMiArIGEyMiAqIGIyMjtcclxuXHJcbiAgICByZXR1cm4gdGhpcy5fbWF0cml4O1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBTZXQgTWF0cml4IGlkZW50aXR5XHJcbiAgICAgKiBAcmV0dXJucyB7RmxvYXQzMkFycmF5fVxyXG4gICAgICovXHJcbiAgaWRlbnRpdHkoKSB7XHJcbiAgICB0aGlzLl9tYXRyaXhbMF0gPSAxO1xyXG4gICAgdGhpcy5fbWF0cml4WzFdID0gMDtcclxuICAgIHRoaXMuX21hdHJpeFsyXSA9IDA7XHJcbiAgICB0aGlzLl9tYXRyaXhbM10gPSAwO1xyXG4gICAgdGhpcy5fbWF0cml4WzRdID0gMTtcclxuICAgIHRoaXMuX21hdHJpeFs1XSA9IDA7XHJcbiAgICB0aGlzLl9tYXRyaXhbNl0gPSAwO1xyXG4gICAgdGhpcy5fbWF0cml4WzddID0gMDtcclxuICAgIHRoaXMuX21hdHJpeFs4XSA9IDE7XHJcblxyXG4gICAgcmV0dXJuIHRoaXMuX21hdHJpeDtcclxuICB9XHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9tYXRoL21hdHJpeDMuanMiXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBSUE7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7O0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBRUE7QUFFQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7OztBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQW5JQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 93 */
/* exports provided: default */
/* exports used: default */
/*!*************************!*\
  !*** ./src/math/ray.js ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__ = __webpack_require__(/*! common/setterDictionary */ 10);\n\n\n__WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__[\"a\" /* SetterDictionary */].addRule(\"ray\", [\"origin\", \"direction\"]);\n\n/**\r\n * Ray Class (TODO: this class is not yet working!)\r\n */\nclass Ray {\n  //#region Constructors\n\n  constructor(origin, direction) {\n    this.origin = 0;\n    this.direction = 0;\n\n    this.set(origin, direction);\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static restore(data) {\n    return new Ray(data.origin, data.direction);\n  }\n\n  //#endregion\n\n  set(origin, direction) {\n    this.origin = origin || 0;\n    this.direction = direction || 0;\n  }\n\n  objectify() {\n    return {\n      origin: this.origin,\n      direction: this.direction\n    };\n  }\n\n  equals(obj) {\n    return obj.origin === this.origin && obj.direction === this.direction;\n  }\n\n  unload() {}\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Ray;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdGgvcmF5LmpzP2I0MDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2V0dGVyRGljdGlvbmFyeSB9IGZyb20gXCJjb21tb24vc2V0dGVyRGljdGlvbmFyeVwiO1xyXG5cclxuU2V0dGVyRGljdGlvbmFyeS5hZGRSdWxlKFwicmF5XCIsIFtcIm9yaWdpblwiLCBcImRpcmVjdGlvblwiXSk7XHJcblxyXG4vKipcclxuICogUmF5IENsYXNzIChUT0RPOiB0aGlzIGNsYXNzIGlzIG5vdCB5ZXQgd29ya2luZyEpXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSYXkge1xyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcclxuXHJcbiAgY29uc3RydWN0b3Iob3JpZ2luLCBkaXJlY3Rpb24pIHtcclxuICAgIHRoaXMub3JpZ2luID0gMDtcclxuICAgIHRoaXMuZGlyZWN0aW9uID0gMDtcclxuXHJcbiAgICB0aGlzLnNldChvcmlnaW4sIGRpcmVjdGlvbik7XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIE1ldGhvZHNcclxuXHJcbiAgLy8jcmVnaW9uIFN0YXRpYyBNZXRob2RzXHJcblxyXG4gIHN0YXRpYyByZXN0b3JlKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgUmF5KGRhdGEub3JpZ2luLCBkYXRhLmRpcmVjdGlvbik7XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgc2V0KG9yaWdpbiwgZGlyZWN0aW9uKSB7XHJcbiAgICB0aGlzLm9yaWdpbiA9IG9yaWdpbiB8fCAwO1xyXG4gICAgdGhpcy5kaXJlY3Rpb24gPSBkaXJlY3Rpb24gfHwgMDtcclxuICB9XHJcblxyXG4gIG9iamVjdGlmeSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG9yaWdpbjogdGhpcy5vcmlnaW4sXHJcbiAgICAgIGRpcmVjdGlvbjogdGhpcy5kaXJlY3Rpb25cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBlcXVhbHMob2JqKSB7XHJcbiAgICByZXR1cm4gb2JqLm9yaWdpbiA9PT0gdGhpcy5vcmlnaW4gJiYgb2JqLmRpcmVjdGlvbiA9PT0gdGhpcy5kaXJlY3Rpb247XHJcbiAgfVxyXG5cclxuICB1bmxvYWQoKSB7fVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL21hdGgvcmF5LmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRkE7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF4Q0E7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 94 */
/* exports provided: default */
/* exports used: default */
/*!*****************************!*\
  !*** ./src/math/vector3.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__ = __webpack_require__(/*! common/setterDictionary */ 10);\n\n\n__WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__[\"a\" /* SetterDictionary */].addRule(\"vector3\", [\"x\", \"y\", \"z\"]);\n\n/**\r\n * Vector3 Class for tri dimensional point references\r\n */\nclass Vector3 {\n  //#region Constructors\n\n  constructor(x, y, z) {\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n\n    this.set(x, y, z);\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static restore(data) {\n    return new Vector3(data.x, data.y, data.z);\n  }\n\n  //#endregion\n\n  set(x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n  }\n\n  objectify() {\n    return {\n      x: this.x,\n      y: this.y,\n      z: this.z\n    };\n  }\n\n  equals(obj) {\n    return obj.x === this.x && obj.y === this.y && obj.z === this.z;\n  }\n\n  unload() {}\n\n  /**\r\n     * The magnitude, or length, of this vector.\r\n     * The magnitude is the L2 norm, \r\n     * or Euclidean distance between the origin and\r\n     * the point represented by the (x, y, z) components of this Vector object.\r\n     * @returns {number}\r\n     */\n  magnitude() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n\n  /**\r\n     * The square of the magnitude, or length, of this vector.\r\n     * See http://docs.unity3d.com/ScriptReference/Vector3-sqrMagnitude.html\r\n     * @returns {number}\r\n     */\n  sqrMagnitude() {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  }\n\n  /**\r\n     * The distance between the point represented by this Vector\r\n     * object and a point represented by the given Vector object.\r\n     * @param {Vector3} vector\r\n     * @returns {number}\r\n     */\n  distanceTo(vector) {\n    return Math.sqrt((this.x - vector.x) * (this.x - vector.x) + (this.y - vector.y) * (this.y - vector.y) + (this.z - vector.z) * (this.z - vector.z));\n  }\n\n  /**\r\n     * The dot product of this vector with another vector.\r\n     * @param {Vector3} vector\r\n     * @returns {number}\r\n     */\n  dot(vector) {\n    return this.x * vector.x + this.y * vector.y + this.z * vector.z;\n  }\n\n  /**\r\n     * The cross product of this vector and the given vector.\r\n     *\r\n     * The cross product is a vector orthogonal to both original vectors.\r\n     * It has a magnitude equal to the area of a parallelogram having the\r\n     * two vectors as sides. The direction of the returned vector is\r\n     * determined by the right-hand rule.\r\n     * @param {Vector3} vector\r\n     */\n  cross(vector) {\n    return new Vector3(this.y * vector.z - this.z * vector.y, this.z * vector.x - this.x * vector.z, this.x * vector.y - this.y * vector.x);\n  }\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Vector3;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTQuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdGgvdmVjdG9yMy5qcz9mMTEwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNldHRlckRpY3Rpb25hcnkgfSBmcm9tIFwiY29tbW9uL3NldHRlckRpY3Rpb25hcnlcIjtcclxuXHJcblNldHRlckRpY3Rpb25hcnkuYWRkUnVsZShcInZlY3RvcjNcIiwgW1wieFwiLCBcInlcIiwgXCJ6XCJdKTtcclxuXHJcbi8qKlxyXG4gKiBWZWN0b3IzIENsYXNzIGZvciB0cmkgZGltZW5zaW9uYWwgcG9pbnQgcmVmZXJlbmNlc1xyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmVjdG9yMyB7XHJcbiAgLy8jcmVnaW9uIENvbnN0cnVjdG9yc1xyXG5cclxuICBjb25zdHJ1Y3Rvcih4LCB5LCB6KSB7XHJcbiAgICB0aGlzLnggPSAwO1xyXG4gICAgdGhpcy55ID0gMDtcclxuICAgIHRoaXMueiA9IDA7XHJcblxyXG4gICAgdGhpcy5zZXQoeCwgeSwgeik7XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgLy8jcmVnaW9uIE1ldGhvZHNcclxuXHJcbiAgLy8jcmVnaW9uIFN0YXRpYyBNZXRob2RzXHJcblxyXG4gIHN0YXRpYyByZXN0b3JlKGRhdGEpIHtcclxuICAgIHJldHVybiBuZXcgVmVjdG9yMyhkYXRhLngsIGRhdGEueSwgZGF0YS56KTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICBzZXQoeCwgeSwgeikge1xyXG4gICAgdGhpcy54ID0geCB8fCAwO1xyXG4gICAgdGhpcy55ID0geSB8fCAwO1xyXG4gICAgdGhpcy56ID0geiB8fCAwO1xyXG4gIH1cclxuXHJcbiAgb2JqZWN0aWZ5KCkge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgeDogdGhpcy54LFxyXG4gICAgICB5OiB0aGlzLnksXHJcbiAgICAgIHo6IHRoaXMuelxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGVxdWFscyhvYmopIHtcclxuICAgIHJldHVybiBvYmoueCA9PT0gdGhpcy54ICYmIG9iai55ID09PSB0aGlzLnkgJiYgb2JqLnogPT09IHRoaXMuejtcclxuICB9XHJcblxyXG4gIHVubG9hZCgpIHt9XHJcblxyXG4gIC8qKlxyXG4gICAgICogVGhlIG1hZ25pdHVkZSwgb3IgbGVuZ3RoLCBvZiB0aGlzIHZlY3Rvci5cclxuICAgICAqIFRoZSBtYWduaXR1ZGUgaXMgdGhlIEwyIG5vcm0sIFxyXG4gICAgICogb3IgRXVjbGlkZWFuIGRpc3RhbmNlIGJldHdlZW4gdGhlIG9yaWdpbiBhbmRcclxuICAgICAqIHRoZSBwb2ludCByZXByZXNlbnRlZCBieSB0aGUgKHgsIHksIHopIGNvbXBvbmVudHMgb2YgdGhpcyBWZWN0b3Igb2JqZWN0LlxyXG4gICAgICogQHJldHVybnMge251bWJlcn1cclxuICAgICAqL1xyXG4gIG1hZ25pdHVkZSgpIHtcclxuICAgIHJldHVybiBNYXRoLnNxcnQodGhpcy54ICogdGhpcy54ICsgdGhpcy55ICogdGhpcy55ICsgdGhpcy56ICogdGhpcy56KTtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogVGhlIHNxdWFyZSBvZiB0aGUgbWFnbml0dWRlLCBvciBsZW5ndGgsIG9mIHRoaXMgdmVjdG9yLlxyXG4gICAgICogU2VlIGh0dHA6Ly9kb2NzLnVuaXR5M2QuY29tL1NjcmlwdFJlZmVyZW5jZS9WZWN0b3IzLXNxck1hZ25pdHVkZS5odG1sXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfVxyXG4gICAgICovXHJcbiAgc3FyTWFnbml0dWRlKCkge1xyXG4gICAgcmV0dXJuIHRoaXMueCAqIHRoaXMueCArIHRoaXMueSAqIHRoaXMueSArIHRoaXMueiAqIHRoaXMuejtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogVGhlIGRpc3RhbmNlIGJldHdlZW4gdGhlIHBvaW50IHJlcHJlc2VudGVkIGJ5IHRoaXMgVmVjdG9yXHJcbiAgICAgKiBvYmplY3QgYW5kIGEgcG9pbnQgcmVwcmVzZW50ZWQgYnkgdGhlIGdpdmVuIFZlY3RvciBvYmplY3QuXHJcbiAgICAgKiBAcGFyYW0ge1ZlY3RvcjN9IHZlY3RvclxyXG4gICAgICogQHJldHVybnMge251bWJlcn1cclxuICAgICAqL1xyXG4gIGRpc3RhbmNlVG8odmVjdG9yKSB7XHJcbiAgICByZXR1cm4gTWF0aC5zcXJ0KFxyXG4gICAgICAodGhpcy54IC0gdmVjdG9yLngpICogKHRoaXMueCAtIHZlY3Rvci54KSArXHJcbiAgICAgICAgKHRoaXMueSAtIHZlY3Rvci55KSAqICh0aGlzLnkgLSB2ZWN0b3IueSkgK1xyXG4gICAgICAgICh0aGlzLnogLSB2ZWN0b3IueikgKiAodGhpcy56IC0gdmVjdG9yLnopXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICAgKiBUaGUgZG90IHByb2R1Y3Qgb2YgdGhpcyB2ZWN0b3Igd2l0aCBhbm90aGVyIHZlY3Rvci5cclxuICAgICAqIEBwYXJhbSB7VmVjdG9yM30gdmVjdG9yXHJcbiAgICAgKiBAcmV0dXJucyB7bnVtYmVyfVxyXG4gICAgICovXHJcbiAgZG90KHZlY3Rvcikge1xyXG4gICAgcmV0dXJuIHRoaXMueCAqIHZlY3Rvci54ICsgdGhpcy55ICogdmVjdG9yLnkgKyB0aGlzLnogKiB2ZWN0b3IuejtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAgICogVGhlIGNyb3NzIHByb2R1Y3Qgb2YgdGhpcyB2ZWN0b3IgYW5kIHRoZSBnaXZlbiB2ZWN0b3IuXHJcbiAgICAgKlxyXG4gICAgICogVGhlIGNyb3NzIHByb2R1Y3QgaXMgYSB2ZWN0b3Igb3J0aG9nb25hbCB0byBib3RoIG9yaWdpbmFsIHZlY3RvcnMuXHJcbiAgICAgKiBJdCBoYXMgYSBtYWduaXR1ZGUgZXF1YWwgdG8gdGhlIGFyZWEgb2YgYSBwYXJhbGxlbG9ncmFtIGhhdmluZyB0aGVcclxuICAgICAqIHR3byB2ZWN0b3JzIGFzIHNpZGVzLiBUaGUgZGlyZWN0aW9uIG9mIHRoZSByZXR1cm5lZCB2ZWN0b3IgaXNcclxuICAgICAqIGRldGVybWluZWQgYnkgdGhlIHJpZ2h0LWhhbmQgcnVsZS5cclxuICAgICAqIEBwYXJhbSB7VmVjdG9yM30gdmVjdG9yXHJcbiAgICAgKi9cclxuICBjcm9zcyh2ZWN0b3IpIHtcclxuICAgIHJldHVybiBuZXcgVmVjdG9yMyhcclxuICAgICAgdGhpcy55ICogdmVjdG9yLnogLSB0aGlzLnogKiB2ZWN0b3IueSxcclxuICAgICAgdGhpcy56ICogdmVjdG9yLnggLSB0aGlzLnggKiB2ZWN0b3IueixcclxuICAgICAgdGhpcy54ICogdmVjdG9yLnkgLSB0aGlzLnkgKiB2ZWN0b3IueFxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG59XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvbWF0aC92ZWN0b3IzLmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFLQTtBQUNBO0FBQ0E7Ozs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7Ozs7O0FBU0E7QUFDQTtBQUtBO0FBQ0E7QUFDQTtBQXZHQTs7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 95 */
/* exports provided: default */
/* exports used: default */
/*!*****************************!*\
  !*** ./src/math/vector4.js ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__ = __webpack_require__(/*! common/setterDictionary */ 10);\n\n\n__WEBPACK_IMPORTED_MODULE_0_common_setterDictionary__[\"a\" /* SetterDictionary */].addRule(\"vector4\", [\"x\", \"y\", \"z\", \"w\"]);\n\n/**\r\n * Vector4 Class for tri dimensional point references\r\n */\nclass Vector4 {\n  //#region Constructors\n\n  constructor(x, y, z, w) {\n    // just because they 'should' be declared here\n    this.x = 0;\n    this.y = 0;\n    this.z = 0;\n    this.w = 0;\n\n    this.set(x, y, z, w);\n  }\n\n  //#endregion\n\n  //#region Methods\n\n  //#region Static Methods\n\n  static restore(data) {\n    return new Vector4(data.x, data.y, data.z, data.w);\n  }\n\n  //#endregion\n\n  set(x, y, z, w) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n    this.w = w || 0;\n  }\n\n  objectify() {\n    return {\n      x: this.x,\n      y: this.y,\n      z: this.z,\n      w: this.w\n    };\n  }\n\n  equals(obj) {\n    return obj.x === this.x && obj.y === this.y && obj.z === this.z && obj.w === this.w;\n  }\n\n  unload() {}\n\n  //#endregion\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = Vector4;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTUuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL21hdGgvdmVjdG9yNC5qcz8zNjdkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNldHRlckRpY3Rpb25hcnkgfSBmcm9tIFwiY29tbW9uL3NldHRlckRpY3Rpb25hcnlcIjtcclxuXHJcblNldHRlckRpY3Rpb25hcnkuYWRkUnVsZShcInZlY3RvcjRcIiwgW1wieFwiLCBcInlcIiwgXCJ6XCIsIFwid1wiXSk7XHJcblxyXG4vKipcclxuICogVmVjdG9yNCBDbGFzcyBmb3IgdHJpIGRpbWVuc2lvbmFsIHBvaW50IHJlZmVyZW5jZXNcclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZlY3RvcjQge1xyXG4gIC8vI3JlZ2lvbiBDb25zdHJ1Y3RvcnNcclxuXHJcbiAgY29uc3RydWN0b3IoeCwgeSwgeiwgdykge1xyXG4gICAgLy8ganVzdCBiZWNhdXNlIHRoZXkgJ3Nob3VsZCcgYmUgZGVjbGFyZWQgaGVyZVxyXG4gICAgdGhpcy54ID0gMDtcclxuICAgIHRoaXMueSA9IDA7XHJcbiAgICB0aGlzLnogPSAwO1xyXG4gICAgdGhpcy53ID0gMDtcclxuXHJcbiAgICB0aGlzLnNldCh4LCB5LCB6LCB3KTtcclxuICB9XHJcblxyXG4gIC8vI2VuZHJlZ2lvblxyXG5cclxuICAvLyNyZWdpb24gTWV0aG9kc1xyXG5cclxuICAvLyNyZWdpb24gU3RhdGljIE1ldGhvZHNcclxuXHJcbiAgc3RhdGljIHJlc3RvcmUoZGF0YSkge1xyXG4gICAgcmV0dXJuIG5ldyBWZWN0b3I0KGRhdGEueCwgZGF0YS55LCBkYXRhLnosIGRhdGEudyk7XHJcbiAgfVxyXG5cclxuICAvLyNlbmRyZWdpb25cclxuXHJcbiAgc2V0KHgsIHksIHosIHcpIHtcclxuICAgIHRoaXMueCA9IHggfHwgMDtcclxuICAgIHRoaXMueSA9IHkgfHwgMDtcclxuICAgIHRoaXMueiA9IHogfHwgMDtcclxuICAgIHRoaXMudyA9IHcgfHwgMDtcclxuICB9XHJcblxyXG4gIG9iamVjdGlmeSgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHg6IHRoaXMueCxcclxuICAgICAgeTogdGhpcy55LFxyXG4gICAgICB6OiB0aGlzLnosXHJcbiAgICAgIHc6IHRoaXMud1xyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIGVxdWFscyhvYmopIHtcclxuICAgIHJldHVybiBvYmoueCA9PT0gdGhpcy54ICYmIG9iai55ID09PSB0aGlzLnkgJiYgb2JqLnogPT09IHRoaXMueiAmJiBvYmoudyA9PT0gdGhpcy53O1xyXG4gIH1cclxuXHJcbiAgdW5sb2FkKCkge31cclxuXHJcbiAgLy8jZW5kcmVnaW9uXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9tYXRoL3ZlY3RvcjQuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUpBO0FBTUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBL0NBOzsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 96 */
/* exports provided: Shader, PrimitiveShader, ShaderManager, TestShader, TextShader, TextureShader */
/* exports used: Shader, PrimitiveShader, ShaderManager, TestShader, TextShader, TextureShader */
/*!******************************!*\
  !*** ./src/shaders/index.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shader__ = __webpack_require__(/*! ./shader */ 17);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__shader__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__primitiveShader_shader__ = __webpack_require__(/*! ./primitiveShader.shader */ 29);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__primitiveShader_shader__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shaderManager__ = __webpack_require__(/*! ./shaderManager */ 53);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__shaderManager__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__testShader_shader__ = __webpack_require__(/*! ./testShader.shader */ 97);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__testShader_shader__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__textShader_shader__ = __webpack_require__(/*! ./textShader.shader */ 54);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_4__textShader_shader__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__textureShader_shader__ = __webpack_require__(/*! ./textureShader.shader */ 55);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_5__textureShader_shader__[\"a\"]; });\n\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTYuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NoYWRlcnMvaW5kZXguanM/ODA3MSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIFNoYWRlciB9IGZyb20gXCIuL3NoYWRlclwiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFByaW1pdGl2ZVNoYWRlciB9IGZyb20gXCIuL3ByaW1pdGl2ZVNoYWRlci5zaGFkZXJcIjtcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBTaGFkZXJNYW5hZ2VyIH0gZnJvbSBcIi4vc2hhZGVyTWFuYWdlclwiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFRlc3RTaGFkZXIgfSBmcm9tIFwiLi90ZXN0U2hhZGVyLnNoYWRlclwiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFRleHRTaGFkZXIgfSBmcm9tIFwiLi90ZXh0U2hhZGVyLnNoYWRlclwiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFRleHR1cmVTaGFkZXIgfSBmcm9tIFwiLi90ZXh0dXJlU2hhZGVyLnNoYWRlclwiO1xyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3NoYWRlcnMvaW5kZXguanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 97 */
/* exports provided: default */
/* exports used: default */
/*!******************************************!*\
  !*** ./src/shaders/testShader.shader.js ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__shader__ = __webpack_require__(/*! ./shader */ 17);\n/**\r\n * Created by Luis on 16/12/2016.\r\n */\n\n\n\n/**\r\n * TestShader Class\r\n */\nclass TestShader extends __WEBPACK_IMPORTED_MODULE_0__shader__[\"a\" /* default */] {\n  static get shaderContent() {\n    return {\n      vertex: [\n      // an attribute will receive data from a buffer\n      \"attribute vec4 a_position;\",\n\n      // all shaders have a main function\n      \"void main() {\",\n      // gl_Position is a special variable a vertex shader\n      // is responsible for setting\n      \"gl_Position = a_position;\", \"}\"].join(\"\\n\"),\n      fragment: [\n      // fragment shaders don't have a default precision so we need\n      // to pick one. mediump is a good default\n      \"precision mediump float;\", \"void main() {\",\n      // gl_FragColor is a special variable a fragment shader\n      // is responsible for setting\n      \"gl_FragColor = vec4(1, 0, 0.5, 1);\", \"}\"].join(\"\\n\"),\n      uniforms: {},\n      attributes: {\n        a_position: 0\n      }\n    };\n  }\n\n  constructor() {\n    let content = TestShader.shaderContent;\n\n    super(content.vertex, content.fragment, content.uniforms, content.attributes);\n  }\n}\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = TestShader;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTcuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3NoYWRlcnMvdGVzdFNoYWRlci5zaGFkZXIuanM/NjI5YyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ3JlYXRlZCBieSBMdWlzIG9uIDE2LzEyLzIwMTYuXHJcbiAqL1xyXG5cclxuaW1wb3J0IFNoYWRlciBmcm9tIFwiLi9zaGFkZXJcIjtcclxuXHJcbi8qKlxyXG4gKiBUZXN0U2hhZGVyIENsYXNzXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUZXN0U2hhZGVyIGV4dGVuZHMgU2hhZGVyIHtcclxuICBzdGF0aWMgZ2V0IHNoYWRlckNvbnRlbnQoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB2ZXJ0ZXg6IFtcclxuICAgICAgICAvLyBhbiBhdHRyaWJ1dGUgd2lsbCByZWNlaXZlIGRhdGEgZnJvbSBhIGJ1ZmZlclxyXG4gICAgICAgIFwiYXR0cmlidXRlIHZlYzQgYV9wb3NpdGlvbjtcIixcclxuXHJcbiAgICAgICAgLy8gYWxsIHNoYWRlcnMgaGF2ZSBhIG1haW4gZnVuY3Rpb25cclxuICAgICAgICBcInZvaWQgbWFpbigpIHtcIixcclxuICAgICAgICAvLyBnbF9Qb3NpdGlvbiBpcyBhIHNwZWNpYWwgdmFyaWFibGUgYSB2ZXJ0ZXggc2hhZGVyXHJcbiAgICAgICAgLy8gaXMgcmVzcG9uc2libGUgZm9yIHNldHRpbmdcclxuICAgICAgICBcImdsX1Bvc2l0aW9uID0gYV9wb3NpdGlvbjtcIixcclxuICAgICAgICBcIn1cIlxyXG4gICAgICBdLmpvaW4oXCJcXG5cIiksXHJcbiAgICAgIGZyYWdtZW50OiBbXHJcbiAgICAgICAgLy8gZnJhZ21lbnQgc2hhZGVycyBkb24ndCBoYXZlIGEgZGVmYXVsdCBwcmVjaXNpb24gc28gd2UgbmVlZFxyXG4gICAgICAgIC8vIHRvIHBpY2sgb25lLiBtZWRpdW1wIGlzIGEgZ29vZCBkZWZhdWx0XHJcbiAgICAgICAgXCJwcmVjaXNpb24gbWVkaXVtcCBmbG9hdDtcIixcclxuXHJcbiAgICAgICAgXCJ2b2lkIG1haW4oKSB7XCIsXHJcbiAgICAgICAgLy8gZ2xfRnJhZ0NvbG9yIGlzIGEgc3BlY2lhbCB2YXJpYWJsZSBhIGZyYWdtZW50IHNoYWRlclxyXG4gICAgICAgIC8vIGlzIHJlc3BvbnNpYmxlIGZvciBzZXR0aW5nXHJcbiAgICAgICAgXCJnbF9GcmFnQ29sb3IgPSB2ZWM0KDEsIDAsIDAuNSwgMSk7XCIsXHJcbiAgICAgICAgXCJ9XCJcclxuICAgICAgXS5qb2luKFwiXFxuXCIpLFxyXG4gICAgICB1bmlmb3Jtczoge30sXHJcbiAgICAgIGF0dHJpYnV0ZXM6IHtcclxuICAgICAgICBhX3Bvc2l0aW9uOiAwXHJcbiAgICAgIH1cclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3RvcigpIHtcclxuICAgIGxldCBjb250ZW50ID0gVGVzdFNoYWRlci5zaGFkZXJDb250ZW50O1xyXG5cclxuICAgIHN1cGVyKGNvbnRlbnQudmVydGV4LCBjb250ZW50LmZyYWdtZW50LCBjb250ZW50LnVuaWZvcm1zLCBjb250ZW50LmF0dHJpYnV0ZXMpO1xyXG4gIH1cclxufVxyXG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gc3JjL3NoYWRlcnMvdGVzdFNoYWRlci5zaGFkZXIuanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7Ozs7QUFJQTtBQUNBO0FBQ0E7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBR0E7QUFDQTtBQUNBO0FBREE7QUF4QkE7QUE0QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFwQ0E7OyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 98 */
/* exports provided: Objectify, Path, Utils, TextUtils, BMFontParser, BMFontParserAscii */
/* exports used: Objectify, Path, Utils, TextUtils, BMFontParser, BMFontParserAscii */
/*!******************************!*\
  !*** ./src/utility/index.js ***!
  \******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__objectify__ = __webpack_require__(/*! ./objectify */ 18);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__objectify__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__path__ = __webpack_require__(/*! ./path */ 58);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__path__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils__ = __webpack_require__(/*! ./utils */ 12);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_2__utils__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__textUtils__ = __webpack_require__(/*! ./textUtils */ 59);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return __WEBPACK_IMPORTED_MODULE_3__textUtils__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__bmFontParser__ = __webpack_require__(/*! ./bmFontParser */ 56);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return __WEBPACK_IMPORTED_MODULE_4__bmFontParser__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__bmFontParserAscii__ = __webpack_require__(/*! ./bmFontParserAscii */ 57);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return __WEBPACK_IMPORTED_MODULE_5__bmFontParserAscii__[\"a\"]; });\n\n\n\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTguanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3V0aWxpdHkvaW5kZXguanM/OGRmMSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBkZWZhdWx0IGFzIE9iamVjdGlmeSB9IGZyb20gXCIuL29iamVjdGlmeVwiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFBhdGggfSBmcm9tIFwiLi9wYXRoXCI7XHJcbmV4cG9ydCB7IGRlZmF1bHQgYXMgVXRpbHMgfSBmcm9tIFwiLi91dGlsc1wiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIFRleHRVdGlscyB9IGZyb20gXCIuL3RleHRVdGlsc1wiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIEJNRm9udFBhcnNlciB9IGZyb20gXCIuL2JtRm9udFBhcnNlclwiO1xyXG5leHBvcnQgeyBkZWZhdWx0IGFzIEJNRm9udFBhcnNlckFzY2lpIH0gZnJvbSBcIi4vYm1Gb250UGFyc2VyQXNjaWlcIjtcclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy91dGlsaXR5L2luZGV4LmpzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 99 */
/* exports provided: WebGLContext, WebGLUtils, GLU */
/* exports used: WebGLContext, WebGLUtils, GLU */
/*!****************************!*\
  !*** ./src/webgl/index.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__webGLContext__ = __webpack_require__(/*! ./webGLContext */ 60);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_0__webGLContext__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__webGLUtils__ = __webpack_require__(/*! ./webGLUtils */ 61);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__webGLUtils__[\"a\"]; });\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return __WEBPACK_IMPORTED_MODULE_1__webGLUtils__[\"b\"]; });\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiOTkuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vc3JjL3dlYmdsL2luZGV4LmpzPzcwMzMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCBhcyBXZWJHTENvbnRleHQgfSBmcm9tIFwiLi93ZWJHTENvbnRleHRcIjtcclxuZXhwb3J0IHsgZGVmYXVsdCBhcyBXZWJHTFV0aWxzLCBHTFUgfSBmcm9tIFwiLi93ZWJHTFV0aWxzXCI7XHJcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyBzcmMvd2ViZ2wvaW5kZXguanMiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 100 */
/* no static exports found */
/* all exports used */
/*!**********************************!*\
  !*** ./~/lodash/_arrayReduce.js ***!
  \**********************************/
/***/ (function(module, exports) {

eval("/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvX2FycmF5UmVkdWNlLmpzPzU4OGUiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIHNwZWNpYWxpemVkIHZlcnNpb24gb2YgYF8ucmVkdWNlYCBmb3IgYXJyYXlzIHdpdGhvdXQgc3VwcG9ydCBmb3JcbiAqIGl0ZXJhdGVlIHNob3J0aGFuZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IFthcnJheV0gVGhlIGFycmF5IHRvIGl0ZXJhdGUgb3Zlci5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGl0ZXJhdGVlIFRoZSBmdW5jdGlvbiBpbnZva2VkIHBlciBpdGVyYXRpb24uXG4gKiBAcGFyYW0geyp9IFthY2N1bXVsYXRvcl0gVGhlIGluaXRpYWwgdmFsdWUuXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtpbml0QWNjdW1dIFNwZWNpZnkgdXNpbmcgdGhlIGZpcnN0IGVsZW1lbnQgb2YgYGFycmF5YCBhc1xuICogIHRoZSBpbml0aWFsIHZhbHVlLlxuICogQHJldHVybnMgeyp9IFJldHVybnMgdGhlIGFjY3VtdWxhdGVkIHZhbHVlLlxuICovXG5mdW5jdGlvbiBhcnJheVJlZHVjZShhcnJheSwgaXRlcmF0ZWUsIGFjY3VtdWxhdG9yLCBpbml0QWNjdW0pIHtcbiAgdmFyIGluZGV4ID0gLTEsXG4gICAgICBsZW5ndGggPSBhcnJheSA9PSBudWxsID8gMCA6IGFycmF5Lmxlbmd0aDtcblxuICBpZiAoaW5pdEFjY3VtICYmIGxlbmd0aCkge1xuICAgIGFjY3VtdWxhdG9yID0gYXJyYXlbKytpbmRleF07XG4gIH1cbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICBhY2N1bXVsYXRvciA9IGl0ZXJhdGVlKGFjY3VtdWxhdG9yLCBhcnJheVtpbmRleF0sIGluZGV4LCBhcnJheSk7XG4gIH1cbiAgcmV0dXJuIGFjY3VtdWxhdG9yO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGFycmF5UmVkdWNlO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2xvZGFzaC9fYXJyYXlSZWR1Y2UuanNcbi8vIG1vZHVsZSBpZCA9IDEwMFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 101 */
/* no static exports found */
/* all exports used */
/*!***********************************!*\
  !*** ./~/lodash/_asciiToArray.js ***!
  \***********************************/
/***/ (function(module, exports) {

eval("/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAxLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvX2FzY2lpVG9BcnJheS5qcz9kODEyIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ29udmVydHMgYW4gQVNDSUkgYHN0cmluZ2AgdG8gYW4gYXJyYXkuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgVGhlIHN0cmluZyB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIGFzY2lpVG9BcnJheShzdHJpbmcpIHtcbiAgcmV0dXJuIHN0cmluZy5zcGxpdCgnJyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXNjaWlUb0FycmF5O1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2xvZGFzaC9fYXNjaWlUb0FycmF5LmpzXG4vLyBtb2R1bGUgaWQgPSAxMDFcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 102 */
/* no static exports found */
/* all exports used */
/*!*********************************!*\
  !*** ./~/lodash/_asciiWords.js ***!
  \*********************************/
/***/ (function(module, exports) {

eval("/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvX2FzY2lpV29yZHMuanM/MTg0MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiogVXNlZCB0byBtYXRjaCB3b3JkcyBjb21wb3NlZCBvZiBhbHBoYW51bWVyaWMgY2hhcmFjdGVycy4gKi9cbnZhciByZUFzY2lpV29yZCA9IC9bXlxceDAwLVxceDJmXFx4M2EtXFx4NDBcXHg1Yi1cXHg2MFxceDdiLVxceDdmXSsvZztcblxuLyoqXG4gKiBTcGxpdHMgYW4gQVNDSUkgYHN0cmluZ2AgaW50byBhbiBhcnJheSBvZiBpdHMgd29yZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBUaGUgc3RyaW5nIHRvIGluc3BlY3QuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIHdvcmRzIG9mIGBzdHJpbmdgLlxuICovXG5mdW5jdGlvbiBhc2NpaVdvcmRzKHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLm1hdGNoKHJlQXNjaWlXb3JkKSB8fCBbXTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBhc2NpaVdvcmRzO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2xvZGFzaC9fYXNjaWlXb3Jkcy5qc1xuLy8gbW9kdWxlIGlkID0gMTAyXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 103 */
/* no static exports found */
/* all exports used */
/*!********************************!*\
  !*** ./~/lodash/_baseSlice.js ***!
  \********************************/
/***/ (function(module, exports) {

eval("/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTAzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvX2Jhc2VTbGljZS5qcz9lNWVjIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGJhc2UgaW1wbGVtZW50YXRpb24gb2YgYF8uc2xpY2VgIHdpdGhvdXQgYW4gaXRlcmF0ZWUgY2FsbCBndWFyZC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtBcnJheX0gYXJyYXkgVGhlIGFycmF5IHRvIHNsaWNlLlxuICogQHBhcmFtIHtudW1iZXJ9IFtzdGFydD0wXSBUaGUgc3RhcnQgcG9zaXRpb24uXG4gKiBAcGFyYW0ge251bWJlcn0gW2VuZD1hcnJheS5sZW5ndGhdIFRoZSBlbmQgcG9zaXRpb24uXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIHNsaWNlIG9mIGBhcnJheWAuXG4gKi9cbmZ1bmN0aW9uIGJhc2VTbGljZShhcnJheSwgc3RhcnQsIGVuZCkge1xuICB2YXIgaW5kZXggPSAtMSxcbiAgICAgIGxlbmd0aCA9IGFycmF5Lmxlbmd0aDtcblxuICBpZiAoc3RhcnQgPCAwKSB7XG4gICAgc3RhcnQgPSAtc3RhcnQgPiBsZW5ndGggPyAwIDogKGxlbmd0aCArIHN0YXJ0KTtcbiAgfVxuICBlbmQgPSBlbmQgPiBsZW5ndGggPyBsZW5ndGggOiBlbmQ7XG4gIGlmIChlbmQgPCAwKSB7XG4gICAgZW5kICs9IGxlbmd0aDtcbiAgfVxuICBsZW5ndGggPSBzdGFydCA+IGVuZCA/IDAgOiAoKGVuZCAtIHN0YXJ0KSA+Pj4gMCk7XG4gIHN0YXJ0ID4+Pj0gMDtcblxuICB2YXIgcmVzdWx0ID0gQXJyYXkobGVuZ3RoKTtcbiAgd2hpbGUgKCsraW5kZXggPCBsZW5ndGgpIHtcbiAgICByZXN1bHRbaW5kZXhdID0gYXJyYXlbaW5kZXggKyBzdGFydF07XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBiYXNlU2xpY2U7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL19iYXNlU2xpY2UuanNcbi8vIG1vZHVsZSBpZCA9IDEwM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 104 */
/* no static exports found */
/* all exports used */
/*!********************************!*\
  !*** ./~/lodash/_castSlice.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var baseSlice = __webpack_require__(/*! ./_baseSlice */ 103);\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nmodule.exports = castSlice;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvX2Nhc3RTbGljZS5qcz9mMzBlIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBiYXNlU2xpY2UgPSByZXF1aXJlKCcuL19iYXNlU2xpY2UnKTtcblxuLyoqXG4gKiBDYXN0cyBgYXJyYXlgIHRvIGEgc2xpY2UgaWYgaXQncyBuZWVkZWQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7QXJyYXl9IGFycmF5IFRoZSBhcnJheSB0byBpbnNwZWN0LlxuICogQHBhcmFtIHtudW1iZXJ9IHN0YXJ0IFRoZSBzdGFydCBwb3NpdGlvbi5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbZW5kPWFycmF5Lmxlbmd0aF0gVGhlIGVuZCBwb3NpdGlvbi5cbiAqIEByZXR1cm5zIHtBcnJheX0gUmV0dXJucyB0aGUgY2FzdCBzbGljZS5cbiAqL1xuZnVuY3Rpb24gY2FzdFNsaWNlKGFycmF5LCBzdGFydCwgZW5kKSB7XG4gIHZhciBsZW5ndGggPSBhcnJheS5sZW5ndGg7XG4gIGVuZCA9IGVuZCA9PT0gdW5kZWZpbmVkID8gbGVuZ3RoIDogZW5kO1xuICByZXR1cm4gKCFzdGFydCAmJiBlbmQgPj0gbGVuZ3RoKSA/IGFycmF5IDogYmFzZVNsaWNlKGFycmF5LCBzdGFydCwgZW5kKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjYXN0U2xpY2U7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL19jYXN0U2xpY2UuanNcbi8vIG1vZHVsZSBpZCA9IDEwNFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 105 */
/* no static exports found */
/* all exports used */
/*!**************************************!*\
  !*** ./~/lodash/_createCaseFirst.js ***!
  \**************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var castSlice = __webpack_require__(/*! ./_castSlice */ 104),\n    hasUnicode = __webpack_require__(/*! ./_hasUnicode */ 63),\n    stringToArray = __webpack_require__(/*! ./_stringToArray */ 108),\n    toString = __webpack_require__(/*! ./toString */ 30);\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nmodule.exports = createCaseFirst;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvX2NyZWF0ZUNhc2VGaXJzdC5qcz8wYzZhIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBjYXN0U2xpY2UgPSByZXF1aXJlKCcuL19jYXN0U2xpY2UnKSxcbiAgICBoYXNVbmljb2RlID0gcmVxdWlyZSgnLi9faGFzVW5pY29kZScpLFxuICAgIHN0cmluZ1RvQXJyYXkgPSByZXF1aXJlKCcuL19zdHJpbmdUb0FycmF5JyksXG4gICAgdG9TdHJpbmcgPSByZXF1aXJlKCcuL3RvU3RyaW5nJyk7XG5cbi8qKlxuICogQ3JlYXRlcyBhIGZ1bmN0aW9uIGxpa2UgYF8ubG93ZXJGaXJzdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBtZXRob2ROYW1lIFRoZSBuYW1lIG9mIHRoZSBgU3RyaW5nYCBjYXNlIG1ldGhvZCB0byB1c2UuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBjYXNlIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBjcmVhdGVDYXNlRmlyc3QobWV0aG9kTmFtZSkge1xuICByZXR1cm4gZnVuY3Rpb24oc3RyaW5nKSB7XG4gICAgc3RyaW5nID0gdG9TdHJpbmcoc3RyaW5nKTtcblxuICAgIHZhciBzdHJTeW1ib2xzID0gaGFzVW5pY29kZShzdHJpbmcpXG4gICAgICA/IHN0cmluZ1RvQXJyYXkoc3RyaW5nKVxuICAgICAgOiB1bmRlZmluZWQ7XG5cbiAgICB2YXIgY2hyID0gc3RyU3ltYm9sc1xuICAgICAgPyBzdHJTeW1ib2xzWzBdXG4gICAgICA6IHN0cmluZy5jaGFyQXQoMCk7XG5cbiAgICB2YXIgdHJhaWxpbmcgPSBzdHJTeW1ib2xzXG4gICAgICA/IGNhc3RTbGljZShzdHJTeW1ib2xzLCAxKS5qb2luKCcnKVxuICAgICAgOiBzdHJpbmcuc2xpY2UoMSk7XG5cbiAgICByZXR1cm4gY2hyW21ldGhvZE5hbWVdKCkgKyB0cmFpbGluZztcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBjcmVhdGVDYXNlRmlyc3Q7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL19jcmVhdGVDYXNlRmlyc3QuanNcbi8vIG1vZHVsZSBpZCA9IDEwNVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 106 */
/* no static exports found */
/* all exports used */
/*!***************************************!*\
  !*** ./~/lodash/_createCompounder.js ***!
  \***************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var arrayReduce = __webpack_require__(/*! ./_arrayReduce */ 100),\n    deburr = __webpack_require__(/*! ./deburr */ 112),\n    words = __webpack_require__(/*! ./words */ 117);\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvX2NyZWF0ZUNvbXBvdW5kZXIuanM/ZTFjMyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXJyYXlSZWR1Y2UgPSByZXF1aXJlKCcuL19hcnJheVJlZHVjZScpLFxuICAgIGRlYnVyciA9IHJlcXVpcmUoJy4vZGVidXJyJyksXG4gICAgd29yZHMgPSByZXF1aXJlKCcuL3dvcmRzJyk7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgdW5pY29kZSBjYXB0dXJlIGdyb3Vwcy4gKi9cbnZhciByc0Fwb3MgPSBcIlsnXFx1MjAxOV1cIjtcblxuLyoqIFVzZWQgdG8gbWF0Y2ggYXBvc3Ryb3BoZXMuICovXG52YXIgcmVBcG9zID0gUmVnRXhwKHJzQXBvcywgJ2cnKTtcblxuLyoqXG4gKiBDcmVhdGVzIGEgZnVuY3Rpb24gbGlrZSBgXy5jYW1lbENhc2VgLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBUaGUgZnVuY3Rpb24gdG8gY29tYmluZSBlYWNoIHdvcmQuXG4gKiBAcmV0dXJucyB7RnVuY3Rpb259IFJldHVybnMgdGhlIG5ldyBjb21wb3VuZGVyIGZ1bmN0aW9uLlxuICovXG5mdW5jdGlvbiBjcmVhdGVDb21wb3VuZGVyKGNhbGxiYWNrKSB7XG4gIHJldHVybiBmdW5jdGlvbihzdHJpbmcpIHtcbiAgICByZXR1cm4gYXJyYXlSZWR1Y2Uod29yZHMoZGVidXJyKHN0cmluZykucmVwbGFjZShyZUFwb3MsICcnKSksIGNhbGxiYWNrLCAnJyk7XG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY3JlYXRlQ29tcG91bmRlcjtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9sb2Rhc2gvX2NyZWF0ZUNvbXBvdW5kZXIuanNcbi8vIG1vZHVsZSBpZCA9IDEwNlxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 107 */
/* no static exports found */
/* all exports used */
/*!*************************************!*\
  !*** ./~/lodash/_hasUnicodeWord.js ***!
  \*************************************/
/***/ (function(module, exports) {

eval("/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvX2hhc1VuaWNvZGVXb3JkLmpzPzQ3YjIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgdG8gZGV0ZWN0IHN0cmluZ3MgdGhhdCBuZWVkIGEgbW9yZSByb2J1c3QgcmVnZXhwIHRvIG1hdGNoIHdvcmRzLiAqL1xudmFyIHJlSGFzVW5pY29kZVdvcmQgPSAvW2Etel1bQS1aXXxbQS1aXXsyLH1bYS16XXxbMC05XVthLXpBLVpdfFthLXpBLVpdWzAtOV18W15hLXpBLVowLTkgXS87XG5cbi8qKlxuICogQ2hlY2tzIGlmIGBzdHJpbmdgIGNvbnRhaW5zIGEgd29yZCBjb21wb3NlZCBvZiBVbmljb2RlIHN5bWJvbHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgVGhlIHN0cmluZyB0byBpbnNwZWN0LlxuICogQHJldHVybnMge2Jvb2xlYW59IFJldHVybnMgYHRydWVgIGlmIGEgd29yZCBpcyBmb3VuZCwgZWxzZSBgZmFsc2VgLlxuICovXG5mdW5jdGlvbiBoYXNVbmljb2RlV29yZChzdHJpbmcpIHtcbiAgcmV0dXJuIHJlSGFzVW5pY29kZVdvcmQudGVzdChzdHJpbmcpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGhhc1VuaWNvZGVXb3JkO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2xvZGFzaC9faGFzVW5pY29kZVdvcmQuanNcbi8vIG1vZHVsZSBpZCA9IDEwN1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 108 */
/* no static exports found */
/* all exports used */
/*!************************************!*\
  !*** ./~/lodash/_stringToArray.js ***!
  \************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var asciiToArray = __webpack_require__(/*! ./_asciiToArray */ 101),\n    hasUnicode = __webpack_require__(/*! ./_hasUnicode */ 63),\n    unicodeToArray = __webpack_require__(/*! ./_unicodeToArray */ 109);\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvX3N0cmluZ1RvQXJyYXkuanM/MDFiZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNjaWlUb0FycmF5ID0gcmVxdWlyZSgnLi9fYXNjaWlUb0FycmF5JyksXG4gICAgaGFzVW5pY29kZSA9IHJlcXVpcmUoJy4vX2hhc1VuaWNvZGUnKSxcbiAgICB1bmljb2RlVG9BcnJheSA9IHJlcXVpcmUoJy4vX3VuaWNvZGVUb0FycmF5Jyk7XG5cbi8qKlxuICogQ29udmVydHMgYHN0cmluZ2AgdG8gYW4gYXJyYXkuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgVGhlIHN0cmluZyB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIHN0cmluZ1RvQXJyYXkoc3RyaW5nKSB7XG4gIHJldHVybiBoYXNVbmljb2RlKHN0cmluZylcbiAgICA/IHVuaWNvZGVUb0FycmF5KHN0cmluZylcbiAgICA6IGFzY2lpVG9BcnJheShzdHJpbmcpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHN0cmluZ1RvQXJyYXk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL19zdHJpbmdUb0FycmF5LmpzXG4vLyBtb2R1bGUgaWQgPSAxMDhcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 109 */
/* no static exports found */
/* all exports used */
/*!*************************************!*\
  !*** ./~/lodash/_unicodeToArray.js ***!
  \*************************************/
/***/ (function(module, exports) {

eval("/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTA5LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvX3VuaWNvZGVUb0FycmF5LmpzPzgyZDIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqIFVzZWQgdG8gY29tcG9zZSB1bmljb2RlIGNoYXJhY3RlciBjbGFzc2VzLiAqL1xudmFyIHJzQXN0cmFsUmFuZ2UgPSAnXFxcXHVkODAwLVxcXFx1ZGZmZicsXG4gICAgcnNDb21ib01hcmtzUmFuZ2UgPSAnXFxcXHUwMzAwLVxcXFx1MDM2ZicsXG4gICAgcmVDb21ib0hhbGZNYXJrc1JhbmdlID0gJ1xcXFx1ZmUyMC1cXFxcdWZlMmYnLFxuICAgIHJzQ29tYm9TeW1ib2xzUmFuZ2UgPSAnXFxcXHUyMGQwLVxcXFx1MjBmZicsXG4gICAgcnNDb21ib1JhbmdlID0gcnNDb21ib01hcmtzUmFuZ2UgKyByZUNvbWJvSGFsZk1hcmtzUmFuZ2UgKyByc0NvbWJvU3ltYm9sc1JhbmdlLFxuICAgIHJzVmFyUmFuZ2UgPSAnXFxcXHVmZTBlXFxcXHVmZTBmJztcblxuLyoqIFVzZWQgdG8gY29tcG9zZSB1bmljb2RlIGNhcHR1cmUgZ3JvdXBzLiAqL1xudmFyIHJzQXN0cmFsID0gJ1snICsgcnNBc3RyYWxSYW5nZSArICddJyxcbiAgICByc0NvbWJvID0gJ1snICsgcnNDb21ib1JhbmdlICsgJ10nLFxuICAgIHJzRml0eiA9ICdcXFxcdWQ4M2NbXFxcXHVkZmZiLVxcXFx1ZGZmZl0nLFxuICAgIHJzTW9kaWZpZXIgPSAnKD86JyArIHJzQ29tYm8gKyAnfCcgKyByc0ZpdHogKyAnKScsXG4gICAgcnNOb25Bc3RyYWwgPSAnW14nICsgcnNBc3RyYWxSYW5nZSArICddJyxcbiAgICByc1JlZ2lvbmFsID0gJyg/OlxcXFx1ZDgzY1tcXFxcdWRkZTYtXFxcXHVkZGZmXSl7Mn0nLFxuICAgIHJzU3VyclBhaXIgPSAnW1xcXFx1ZDgwMC1cXFxcdWRiZmZdW1xcXFx1ZGMwMC1cXFxcdWRmZmZdJyxcbiAgICByc1pXSiA9ICdcXFxcdTIwMGQnO1xuXG4vKiogVXNlZCB0byBjb21wb3NlIHVuaWNvZGUgcmVnZXhlcy4gKi9cbnZhciByZU9wdE1vZCA9IHJzTW9kaWZpZXIgKyAnPycsXG4gICAgcnNPcHRWYXIgPSAnWycgKyByc1ZhclJhbmdlICsgJ10/JyxcbiAgICByc09wdEpvaW4gPSAnKD86JyArIHJzWldKICsgJyg/OicgKyBbcnNOb25Bc3RyYWwsIHJzUmVnaW9uYWwsIHJzU3VyclBhaXJdLmpvaW4oJ3wnKSArICcpJyArIHJzT3B0VmFyICsgcmVPcHRNb2QgKyAnKSonLFxuICAgIHJzU2VxID0gcnNPcHRWYXIgKyByZU9wdE1vZCArIHJzT3B0Sm9pbixcbiAgICByc1N5bWJvbCA9ICcoPzonICsgW3JzTm9uQXN0cmFsICsgcnNDb21ibyArICc/JywgcnNDb21ibywgcnNSZWdpb25hbCwgcnNTdXJyUGFpciwgcnNBc3RyYWxdLmpvaW4oJ3wnKSArICcpJztcblxuLyoqIFVzZWQgdG8gbWF0Y2ggW3N0cmluZyBzeW1ib2xzXShodHRwczovL21hdGhpYXNieW5lbnMuYmUvbm90ZXMvamF2YXNjcmlwdC11bmljb2RlKS4gKi9cbnZhciByZVVuaWNvZGUgPSBSZWdFeHAocnNGaXR6ICsgJyg/PScgKyByc0ZpdHogKyAnKXwnICsgcnNTeW1ib2wgKyByc1NlcSwgJ2cnKTtcblxuLyoqXG4gKiBDb252ZXJ0cyBhIFVuaWNvZGUgYHN0cmluZ2AgdG8gYW4gYXJyYXkuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBzdHJpbmcgVGhlIHN0cmluZyB0byBjb252ZXJ0LlxuICogQHJldHVybnMge0FycmF5fSBSZXR1cm5zIHRoZSBjb252ZXJ0ZWQgYXJyYXkuXG4gKi9cbmZ1bmN0aW9uIHVuaWNvZGVUb0FycmF5KHN0cmluZykge1xuICByZXR1cm4gc3RyaW5nLm1hdGNoKHJlVW5pY29kZSkgfHwgW107XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdW5pY29kZVRvQXJyYXk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL191bmljb2RlVG9BcnJheS5qc1xuLy8gbW9kdWxlIGlkID0gMTA5XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 110 */
/* no static exports found */
/* all exports used */
/*!***********************************!*\
  !*** ./~/lodash/_unicodeWords.js ***!
  \***********************************/
/***/ (function(module, exports) {

eval("/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n    rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvX3VuaWNvZGVXb3Jkcy5qcz9hYzEzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKiBVc2VkIHRvIGNvbXBvc2UgdW5pY29kZSBjaGFyYWN0ZXIgY2xhc3Nlcy4gKi9cbnZhciByc0FzdHJhbFJhbmdlID0gJ1xcXFx1ZDgwMC1cXFxcdWRmZmYnLFxuICAgIHJzQ29tYm9NYXJrc1JhbmdlID0gJ1xcXFx1MDMwMC1cXFxcdTAzNmYnLFxuICAgIHJlQ29tYm9IYWxmTWFya3NSYW5nZSA9ICdcXFxcdWZlMjAtXFxcXHVmZTJmJyxcbiAgICByc0NvbWJvU3ltYm9sc1JhbmdlID0gJ1xcXFx1MjBkMC1cXFxcdTIwZmYnLFxuICAgIHJzQ29tYm9SYW5nZSA9IHJzQ29tYm9NYXJrc1JhbmdlICsgcmVDb21ib0hhbGZNYXJrc1JhbmdlICsgcnNDb21ib1N5bWJvbHNSYW5nZSxcbiAgICByc0RpbmdiYXRSYW5nZSA9ICdcXFxcdTI3MDAtXFxcXHUyN2JmJyxcbiAgICByc0xvd2VyUmFuZ2UgPSAnYS16XFxcXHhkZi1cXFxceGY2XFxcXHhmOC1cXFxceGZmJyxcbiAgICByc01hdGhPcFJhbmdlID0gJ1xcXFx4YWNcXFxceGIxXFxcXHhkN1xcXFx4ZjcnLFxuICAgIHJzTm9uQ2hhclJhbmdlID0gJ1xcXFx4MDAtXFxcXHgyZlxcXFx4M2EtXFxcXHg0MFxcXFx4NWItXFxcXHg2MFxcXFx4N2ItXFxcXHhiZicsXG4gICAgcnNQdW5jdHVhdGlvblJhbmdlID0gJ1xcXFx1MjAwMC1cXFxcdTIwNmYnLFxuICAgIHJzU3BhY2VSYW5nZSA9ICcgXFxcXHRcXFxceDBiXFxcXGZcXFxceGEwXFxcXHVmZWZmXFxcXG5cXFxcclxcXFx1MjAyOFxcXFx1MjAyOVxcXFx1MTY4MFxcXFx1MTgwZVxcXFx1MjAwMFxcXFx1MjAwMVxcXFx1MjAwMlxcXFx1MjAwM1xcXFx1MjAwNFxcXFx1MjAwNVxcXFx1MjAwNlxcXFx1MjAwN1xcXFx1MjAwOFxcXFx1MjAwOVxcXFx1MjAwYVxcXFx1MjAyZlxcXFx1MjA1ZlxcXFx1MzAwMCcsXG4gICAgcnNVcHBlclJhbmdlID0gJ0EtWlxcXFx4YzAtXFxcXHhkNlxcXFx4ZDgtXFxcXHhkZScsXG4gICAgcnNWYXJSYW5nZSA9ICdcXFxcdWZlMGVcXFxcdWZlMGYnLFxuICAgIHJzQnJlYWtSYW5nZSA9IHJzTWF0aE9wUmFuZ2UgKyByc05vbkNoYXJSYW5nZSArIHJzUHVuY3R1YXRpb25SYW5nZSArIHJzU3BhY2VSYW5nZTtcblxuLyoqIFVzZWQgdG8gY29tcG9zZSB1bmljb2RlIGNhcHR1cmUgZ3JvdXBzLiAqL1xudmFyIHJzQXBvcyA9IFwiWydcXHUyMDE5XVwiLFxuICAgIHJzQnJlYWsgPSAnWycgKyByc0JyZWFrUmFuZ2UgKyAnXScsXG4gICAgcnNDb21ibyA9ICdbJyArIHJzQ29tYm9SYW5nZSArICddJyxcbiAgICByc0RpZ2l0cyA9ICdcXFxcZCsnLFxuICAgIHJzRGluZ2JhdCA9ICdbJyArIHJzRGluZ2JhdFJhbmdlICsgJ10nLFxuICAgIHJzTG93ZXIgPSAnWycgKyByc0xvd2VyUmFuZ2UgKyAnXScsXG4gICAgcnNNaXNjID0gJ1teJyArIHJzQXN0cmFsUmFuZ2UgKyByc0JyZWFrUmFuZ2UgKyByc0RpZ2l0cyArIHJzRGluZ2JhdFJhbmdlICsgcnNMb3dlclJhbmdlICsgcnNVcHBlclJhbmdlICsgJ10nLFxuICAgIHJzRml0eiA9ICdcXFxcdWQ4M2NbXFxcXHVkZmZiLVxcXFx1ZGZmZl0nLFxuICAgIHJzTW9kaWZpZXIgPSAnKD86JyArIHJzQ29tYm8gKyAnfCcgKyByc0ZpdHogKyAnKScsXG4gICAgcnNOb25Bc3RyYWwgPSAnW14nICsgcnNBc3RyYWxSYW5nZSArICddJyxcbiAgICByc1JlZ2lvbmFsID0gJyg/OlxcXFx1ZDgzY1tcXFxcdWRkZTYtXFxcXHVkZGZmXSl7Mn0nLFxuICAgIHJzU3VyclBhaXIgPSAnW1xcXFx1ZDgwMC1cXFxcdWRiZmZdW1xcXFx1ZGMwMC1cXFxcdWRmZmZdJyxcbiAgICByc1VwcGVyID0gJ1snICsgcnNVcHBlclJhbmdlICsgJ10nLFxuICAgIHJzWldKID0gJ1xcXFx1MjAwZCc7XG5cbi8qKiBVc2VkIHRvIGNvbXBvc2UgdW5pY29kZSByZWdleGVzLiAqL1xudmFyIHJzTWlzY0xvd2VyID0gJyg/OicgKyByc0xvd2VyICsgJ3wnICsgcnNNaXNjICsgJyknLFxuICAgIHJzTWlzY1VwcGVyID0gJyg/OicgKyByc1VwcGVyICsgJ3wnICsgcnNNaXNjICsgJyknLFxuICAgIHJzT3B0Q29udHJMb3dlciA9ICcoPzonICsgcnNBcG9zICsgJyg/OmR8bGx8bXxyZXxzfHR8dmUpKT8nLFxuICAgIHJzT3B0Q29udHJVcHBlciA9ICcoPzonICsgcnNBcG9zICsgJyg/OkR8TEx8TXxSRXxTfFR8VkUpKT8nLFxuICAgIHJlT3B0TW9kID0gcnNNb2RpZmllciArICc/JyxcbiAgICByc09wdFZhciA9ICdbJyArIHJzVmFyUmFuZ2UgKyAnXT8nLFxuICAgIHJzT3B0Sm9pbiA9ICcoPzonICsgcnNaV0ogKyAnKD86JyArIFtyc05vbkFzdHJhbCwgcnNSZWdpb25hbCwgcnNTdXJyUGFpcl0uam9pbignfCcpICsgJyknICsgcnNPcHRWYXIgKyByZU9wdE1vZCArICcpKicsXG4gICAgcnNPcmRMb3dlciA9ICdcXFxcZCooPzooPzoxc3R8Mm5kfDNyZHwoPyFbMTIzXSlcXFxcZHRoKVxcXFxiKScsXG4gICAgcnNPcmRVcHBlciA9ICdcXFxcZCooPzooPzoxU1R8Mk5EfDNSRHwoPyFbMTIzXSlcXFxcZFRIKVxcXFxiKScsXG4gICAgcnNTZXEgPSByc09wdFZhciArIHJlT3B0TW9kICsgcnNPcHRKb2luLFxuICAgIHJzRW1vamkgPSAnKD86JyArIFtyc0RpbmdiYXQsIHJzUmVnaW9uYWwsIHJzU3VyclBhaXJdLmpvaW4oJ3wnKSArICcpJyArIHJzU2VxO1xuXG4vKiogVXNlZCB0byBtYXRjaCBjb21wbGV4IG9yIGNvbXBvdW5kIHdvcmRzLiAqL1xudmFyIHJlVW5pY29kZVdvcmQgPSBSZWdFeHAoW1xuICByc1VwcGVyICsgJz8nICsgcnNMb3dlciArICcrJyArIHJzT3B0Q29udHJMb3dlciArICcoPz0nICsgW3JzQnJlYWssIHJzVXBwZXIsICckJ10uam9pbignfCcpICsgJyknLFxuICByc01pc2NVcHBlciArICcrJyArIHJzT3B0Q29udHJVcHBlciArICcoPz0nICsgW3JzQnJlYWssIHJzVXBwZXIgKyByc01pc2NMb3dlciwgJyQnXS5qb2luKCd8JykgKyAnKScsXG4gIHJzVXBwZXIgKyAnPycgKyByc01pc2NMb3dlciArICcrJyArIHJzT3B0Q29udHJMb3dlcixcbiAgcnNVcHBlciArICcrJyArIHJzT3B0Q29udHJVcHBlcixcbiAgcnNPcmRVcHBlcixcbiAgcnNPcmRMb3dlcixcbiAgcnNEaWdpdHMsXG4gIHJzRW1vamlcbl0uam9pbignfCcpLCAnZycpO1xuXG4vKipcbiAqIFNwbGl0cyBhIFVuaWNvZGUgYHN0cmluZ2AgaW50byBhbiBhcnJheSBvZiBpdHMgd29yZHMuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7c3RyaW5nfSBUaGUgc3RyaW5nIHRvIGluc3BlY3QuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIHdvcmRzIG9mIGBzdHJpbmdgLlxuICovXG5mdW5jdGlvbiB1bmljb2RlV29yZHMoc3RyaW5nKSB7XG4gIHJldHVybiBzdHJpbmcubWF0Y2gocmVVbmljb2RlV29yZCkgfHwgW107XG59XG5cbm1vZHVsZS5leHBvcnRzID0gdW5pY29kZVdvcmRzO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2xvZGFzaC9fdW5pY29kZVdvcmRzLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 111 */
/* no static exports found */
/* exports used: default */
/*!********************************!*\
  !*** ./~/lodash/capitalize.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var toString = __webpack_require__(/*! ./toString */ 30),\n    upperFirst = __webpack_require__(/*! ./upperFirst */ 65);\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nmodule.exports = capitalize;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTExLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvY2FwaXRhbGl6ZS5qcz84ZTMzIl0sInNvdXJjZXNDb250ZW50IjpbInZhciB0b1N0cmluZyA9IHJlcXVpcmUoJy4vdG9TdHJpbmcnKSxcbiAgICB1cHBlckZpcnN0ID0gcmVxdWlyZSgnLi91cHBlckZpcnN0Jyk7XG5cbi8qKlxuICogQ29udmVydHMgdGhlIGZpcnN0IGNoYXJhY3RlciBvZiBgc3RyaW5nYCB0byB1cHBlciBjYXNlIGFuZCB0aGUgcmVtYWluaW5nXG4gKiB0byBsb3dlciBjYXNlLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy4wLjBcbiAqIEBjYXRlZ29yeSBTdHJpbmdcbiAqIEBwYXJhbSB7c3RyaW5nfSBbc3RyaW5nPScnXSBUaGUgc3RyaW5nIHRvIGNhcGl0YWxpemUuXG4gKiBAcmV0dXJucyB7c3RyaW5nfSBSZXR1cm5zIHRoZSBjYXBpdGFsaXplZCBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uY2FwaXRhbGl6ZSgnRlJFRCcpO1xuICogLy8gPT4gJ0ZyZWQnXG4gKi9cbmZ1bmN0aW9uIGNhcGl0YWxpemUoc3RyaW5nKSB7XG4gIHJldHVybiB1cHBlckZpcnN0KHRvU3RyaW5nKHN0cmluZykudG9Mb3dlckNhc2UoKSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gY2FwaXRhbGl6ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9sb2Rhc2gvY2FwaXRhbGl6ZS5qc1xuLy8gbW9kdWxlIGlkID0gMTExXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 112 */
/* no static exports found */
/* all exports used */
/*!****************************!*\
  !*** ./~/lodash/deburr.js ***!
  \****************************/
/***/ (function(module, exports) {

eval("/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEyLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvZGVidXJyLmpzPzEwYmIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUaGlzIG1ldGhvZCByZXR1cm5zIHRoZSBmaXJzdCBhcmd1bWVudCBpdCByZWNlaXZlcy5cbiAqXG4gKiBAc3RhdGljXG4gKiBAc2luY2UgMC4xLjBcbiAqIEBtZW1iZXJPZiBfXG4gKiBAY2F0ZWdvcnkgVXRpbFxuICogQHBhcmFtIHsqfSB2YWx1ZSBBbnkgdmFsdWUuXG4gKiBAcmV0dXJucyB7Kn0gUmV0dXJucyBgdmFsdWVgLlxuICogQGV4YW1wbGVcbiAqXG4gKiB2YXIgb2JqZWN0ID0geyAnYSc6IDEgfTtcbiAqXG4gKiBjb25zb2xlLmxvZyhfLmlkZW50aXR5KG9iamVjdCkgPT09IG9iamVjdCk7XG4gKiAvLyA9PiB0cnVlXG4gKi9cbmZ1bmN0aW9uIGlkZW50aXR5KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpZGVudGl0eTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9sb2Rhc2gvZGVidXJyLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTJcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 113 */
/* no static exports found */
/* all exports used */
/*!*****************************!*\
  !*** ./~/lodash/isArray.js ***!
  \*****************************/
/***/ (function(module, exports) {

eval("/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTEzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvaXNBcnJheS5qcz8wZDIwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhbiBgQXJyYXlgIG9iamVjdC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhbiBhcnJheSwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzQXJyYXkoWzEsIDIsIDNdKTtcbiAqIC8vID0+IHRydWVcbiAqXG4gKiBfLmlzQXJyYXkoZG9jdW1lbnQuYm9keS5jaGlsZHJlbik7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNBcnJheSgnYWJjJyk7XG4gKiAvLyA9PiBmYWxzZVxuICpcbiAqIF8uaXNBcnJheShfLm5vb3ApO1xuICogLy8gPT4gZmFsc2VcbiAqL1xudmFyIGlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGlzQXJyYXk7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL2lzQXJyYXkuanNcbi8vIG1vZHVsZSBpZCA9IDExM1xuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 114 */
/* no static exports found */
/* exports used: default */
/*!******************************!*\
  !*** ./~/lodash/isNumber.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 62),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 64);\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvaXNOdW1iZXIuanM/ODRmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICBpc09iamVjdExpa2UgPSByZXF1aXJlKCcuL2lzT2JqZWN0TGlrZScpO1xuXG4vKiogYE9iamVjdCN0b1N0cmluZ2AgcmVzdWx0IHJlZmVyZW5jZXMuICovXG52YXIgbnVtYmVyVGFnID0gJ1tvYmplY3QgTnVtYmVyXSc7XG5cbi8qKlxuICogQ2hlY2tzIGlmIGB2YWx1ZWAgaXMgY2xhc3NpZmllZCBhcyBhIGBOdW1iZXJgIHByaW1pdGl2ZSBvciBvYmplY3QuXG4gKlxuICogKipOb3RlOioqIFRvIGV4Y2x1ZGUgYEluZmluaXR5YCwgYC1JbmZpbml0eWAsIGFuZCBgTmFOYCwgd2hpY2ggYXJlXG4gKiBjbGFzc2lmaWVkIGFzIG51bWJlcnMsIHVzZSB0aGUgYF8uaXNGaW5pdGVgIG1ldGhvZC5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDAuMS4wXG4gKiBAY2F0ZWdvcnkgTGFuZ1xuICogQHBhcmFtIHsqfSB2YWx1ZSBUaGUgdmFsdWUgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn0gUmV0dXJucyBgdHJ1ZWAgaWYgYHZhbHVlYCBpcyBhIG51bWJlciwgZWxzZSBgZmFsc2VgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLmlzTnVtYmVyKDMpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNOdW1iZXIoTnVtYmVyLk1JTl9WQUxVRSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc051bWJlcihJbmZpbml0eSk7XG4gKiAvLyA9PiB0cnVlXG4gKlxuICogXy5pc051bWJlcignMycpO1xuICogLy8gPT4gZmFsc2VcbiAqL1xuZnVuY3Rpb24gaXNOdW1iZXIodmFsdWUpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PSAnbnVtYmVyJyB8fFxuICAgIChpc09iamVjdExpa2UodmFsdWUpICYmIGJhc2VHZXRUYWcodmFsdWUpID09IG51bWJlclRhZyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNOdW1iZXI7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL2lzTnVtYmVyLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTRcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==");

/***/ }),
/* 115 */
/* no static exports found */
/* exports used: default */
/*!******************************!*\
  !*** ./~/lodash/isString.js ***!
  \******************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var baseGetTag = __webpack_require__(/*! ./_baseGetTag */ 62),\n    isArray = __webpack_require__(/*! ./isArray */ 113),\n    isObjectLike = __webpack_require__(/*! ./isObjectLike */ 64);\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvaXNTdHJpbmcuanM/NjkwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYmFzZUdldFRhZyA9IHJlcXVpcmUoJy4vX2Jhc2VHZXRUYWcnKSxcbiAgICBpc0FycmF5ID0gcmVxdWlyZSgnLi9pc0FycmF5JyksXG4gICAgaXNPYmplY3RMaWtlID0gcmVxdWlyZSgnLi9pc09iamVjdExpa2UnKTtcblxuLyoqIGBPYmplY3QjdG9TdHJpbmdgIHJlc3VsdCByZWZlcmVuY2VzLiAqL1xudmFyIHN0cmluZ1RhZyA9ICdbb2JqZWN0IFN0cmluZ10nO1xuXG4vKipcbiAqIENoZWNrcyBpZiBgdmFsdWVgIGlzIGNsYXNzaWZpZWQgYXMgYSBgU3RyaW5nYCBwcmltaXRpdmUgb3Igb2JqZWN0LlxuICpcbiAqIEBzdGF0aWNcbiAqIEBzaW5jZSAwLjEuMFxuICogQG1lbWJlck9mIF9cbiAqIEBjYXRlZ29yeSBMYW5nXG4gKiBAcGFyYW0geyp9IHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVjay5cbiAqIEByZXR1cm5zIHtib29sZWFufSBSZXR1cm5zIGB0cnVlYCBpZiBgdmFsdWVgIGlzIGEgc3RyaW5nLCBlbHNlIGBmYWxzZWAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIF8uaXNTdHJpbmcoJ2FiYycpO1xuICogLy8gPT4gdHJ1ZVxuICpcbiAqIF8uaXNTdHJpbmcoMSk7XG4gKiAvLyA9PiBmYWxzZVxuICovXG5mdW5jdGlvbiBpc1N0cmluZyh2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09ICdzdHJpbmcnIHx8XG4gICAgKCFpc0FycmF5KHZhbHVlKSAmJiBpc09iamVjdExpa2UodmFsdWUpICYmIGJhc2VHZXRUYWcodmFsdWUpID09IHN0cmluZ1RhZyk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaXNTdHJpbmc7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL2lzU3RyaW5nLmpzXG4vLyBtb2R1bGUgaWQgPSAxMTVcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9");

/***/ }),
/* 116 */
/* no static exports found */
/* exports used: default */
/*!*******************************!*\
  !*** ./~/lodash/startCase.js ***!
  \*******************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var createCompounder = __webpack_require__(/*! ./_createCompounder */ 106),\n    upperFirst = __webpack_require__(/*! ./upperFirst */ 65);\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nmodule.exports = startCase;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE2LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvc3RhcnRDYXNlLmpzPzJmZTgiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGNyZWF0ZUNvbXBvdW5kZXIgPSByZXF1aXJlKCcuL19jcmVhdGVDb21wb3VuZGVyJyksXG4gICAgdXBwZXJGaXJzdCA9IHJlcXVpcmUoJy4vdXBwZXJGaXJzdCcpO1xuXG4vKipcbiAqIENvbnZlcnRzIGBzdHJpbmdgIHRvXG4gKiBbc3RhcnQgY2FzZV0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvTGV0dGVyX2Nhc2UjU3R5bGlzdGljX29yX3NwZWNpYWxpc2VkX3VzYWdlKS5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgX1xuICogQHNpbmNlIDMuMS4wXG4gKiBAY2F0ZWdvcnkgU3RyaW5nXG4gKiBAcGFyYW0ge3N0cmluZ30gW3N0cmluZz0nJ10gVGhlIHN0cmluZyB0byBjb252ZXJ0LlxuICogQHJldHVybnMge3N0cmluZ30gUmV0dXJucyB0aGUgc3RhcnQgY2FzZWQgc3RyaW5nLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLnN0YXJ0Q2FzZSgnLS1mb28tYmFyLS0nKTtcbiAqIC8vID0+ICdGb28gQmFyJ1xuICpcbiAqIF8uc3RhcnRDYXNlKCdmb29CYXInKTtcbiAqIC8vID0+ICdGb28gQmFyJ1xuICpcbiAqIF8uc3RhcnRDYXNlKCdfX0ZPT19CQVJfXycpO1xuICogLy8gPT4gJ0ZPTyBCQVInXG4gKi9cbnZhciBzdGFydENhc2UgPSBjcmVhdGVDb21wb3VuZGVyKGZ1bmN0aW9uKHJlc3VsdCwgd29yZCwgaW5kZXgpIHtcbiAgcmV0dXJuIHJlc3VsdCArIChpbmRleCA/ICcgJyA6ICcnKSArIHVwcGVyRmlyc3Qod29yZCk7XG59KTtcblxubW9kdWxlLmV4cG9ydHMgPSBzdGFydENhc2U7XG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL34vbG9kYXNoL3N0YXJ0Q2FzZS5qc1xuLy8gbW9kdWxlIGlkID0gMTE2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 117 */
/* no static exports found */
/* all exports used */
/*!***************************!*\
  !*** ./~/lodash/words.js ***!
  \***************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var asciiWords = __webpack_require__(/*! ./_asciiWords */ 102),\n    hasUnicodeWord = __webpack_require__(/*! ./_hasUnicodeWord */ 107),\n    toString = __webpack_require__(/*! ./toString */ 30),\n    unicodeWords = __webpack_require__(/*! ./_unicodeWords */ 110);\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9sb2Rhc2gvd29yZHMuanM/MjE0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXNjaWlXb3JkcyA9IHJlcXVpcmUoJy4vX2FzY2lpV29yZHMnKSxcbiAgICBoYXNVbmljb2RlV29yZCA9IHJlcXVpcmUoJy4vX2hhc1VuaWNvZGVXb3JkJyksXG4gICAgdG9TdHJpbmcgPSByZXF1aXJlKCcuL3RvU3RyaW5nJyksXG4gICAgdW5pY29kZVdvcmRzID0gcmVxdWlyZSgnLi9fdW5pY29kZVdvcmRzJyk7XG5cbi8qKlxuICogU3BsaXRzIGBzdHJpbmdgIGludG8gYW4gYXJyYXkgb2YgaXRzIHdvcmRzLlxuICpcbiAqIEBzdGF0aWNcbiAqIEBtZW1iZXJPZiBfXG4gKiBAc2luY2UgMy4wLjBcbiAqIEBjYXRlZ29yeSBTdHJpbmdcbiAqIEBwYXJhbSB7c3RyaW5nfSBbc3RyaW5nPScnXSBUaGUgc3RyaW5nIHRvIGluc3BlY3QuXG4gKiBAcGFyYW0ge1JlZ0V4cHxzdHJpbmd9IFtwYXR0ZXJuXSBUaGUgcGF0dGVybiB0byBtYXRjaCB3b3Jkcy5cbiAqIEBwYXJhbS0ge09iamVjdH0gW2d1YXJkXSBFbmFibGVzIHVzZSBhcyBhbiBpdGVyYXRlZSBmb3IgbWV0aG9kcyBsaWtlIGBfLm1hcGAuXG4gKiBAcmV0dXJucyB7QXJyYXl9IFJldHVybnMgdGhlIHdvcmRzIG9mIGBzdHJpbmdgLlxuICogQGV4YW1wbGVcbiAqXG4gKiBfLndvcmRzKCdmcmVkLCBiYXJuZXksICYgcGViYmxlcycpO1xuICogLy8gPT4gWydmcmVkJywgJ2Jhcm5leScsICdwZWJibGVzJ11cbiAqXG4gKiBfLndvcmRzKCdmcmVkLCBiYXJuZXksICYgcGViYmxlcycsIC9bXiwgXSsvZyk7XG4gKiAvLyA9PiBbJ2ZyZWQnLCAnYmFybmV5JywgJyYnLCAncGViYmxlcyddXG4gKi9cbmZ1bmN0aW9uIHdvcmRzKHN0cmluZywgcGF0dGVybiwgZ3VhcmQpIHtcbiAgc3RyaW5nID0gdG9TdHJpbmcoc3RyaW5nKTtcbiAgcGF0dGVybiA9IGd1YXJkID8gdW5kZWZpbmVkIDogcGF0dGVybjtcblxuICBpZiAocGF0dGVybiA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIGhhc1VuaWNvZGVXb3JkKHN0cmluZykgPyB1bmljb2RlV29yZHMoc3RyaW5nKSA6IGFzY2lpV29yZHMoc3RyaW5nKTtcbiAgfVxuICByZXR1cm4gc3RyaW5nLm1hdGNoKHBhdHRlcm4pIHx8IFtdO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHdvcmRzO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L2xvZGFzaC93b3Jkcy5qc1xuLy8gbW9kdWxlIGlkID0gMTE3XG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 118 */
/* no static exports found */
/* all exports used */
/*!********************************************!*\
  !*** ./~/matter-js/src/collision/Query.js ***!
  \********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = __webpack_require__(/*! ../geometry/Vector */ 3);\nvar SAT = __webpack_require__(/*! ./SAT */ 33);\nvar Bounds = __webpack_require__(/*! ../geometry/Bounds */ 2);\nvar Bodies = __webpack_require__(/*! ../factory/Bodies */ 34);\nvar Vertices = __webpack_require__(/*! ../geometry/Vertices */ 7);\n\n(function() {\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, ray.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, ray.bounds)) {\n                        var collision = SAT.collides(part, ray);\n                        if (collision.collided) {\n                            collision.body = collision.bodyA = collision.bodyB = bodyA;\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMTE4LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vfi9tYXR0ZXItanMvc3JjL2NvbGxpc2lvbi9RdWVyeS5qcz83ZmY4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuKiBUaGUgYE1hdHRlci5RdWVyeWAgbW9kdWxlIGNvbnRhaW5zIG1ldGhvZHMgZm9yIHBlcmZvcm1pbmcgY29sbGlzaW9uIHF1ZXJpZXMuXG4qXG4qIFNlZSB0aGUgaW5jbHVkZWQgdXNhZ2UgW2V4YW1wbGVzXShodHRwczovL2dpdGh1Yi5jb20vbGlhYnJ1L21hdHRlci1qcy90cmVlL21hc3Rlci9leGFtcGxlcykuXG4qXG4qIEBjbGFzcyBRdWVyeVxuKi9cblxudmFyIFF1ZXJ5ID0ge307XG5cbm1vZHVsZS5leHBvcnRzID0gUXVlcnk7XG5cbnZhciBWZWN0b3IgPSByZXF1aXJlKCcuLi9nZW9tZXRyeS9WZWN0b3InKTtcbnZhciBTQVQgPSByZXF1aXJlKCcuL1NBVCcpO1xudmFyIEJvdW5kcyA9IHJlcXVpcmUoJy4uL2dlb21ldHJ5L0JvdW5kcycpO1xudmFyIEJvZGllcyA9IHJlcXVpcmUoJy4uL2ZhY3RvcnkvQm9kaWVzJyk7XG52YXIgVmVydGljZXMgPSByZXF1aXJlKCcuLi9nZW9tZXRyeS9WZXJ0aWNlcycpO1xuXG4oZnVuY3Rpb24oKSB7XG5cbiAgICAvKipcbiAgICAgKiBDYXN0cyBhIHJheSBzZWdtZW50IGFnYWluc3QgYSBzZXQgb2YgYm9kaWVzIGFuZCByZXR1cm5zIGFsbCBjb2xsaXNpb25zLCByYXkgd2lkdGggaXMgb3B0aW9uYWwuIEludGVyc2VjdGlvbiBwb2ludHMgYXJlIG5vdCBwcm92aWRlZC5cbiAgICAgKiBAbWV0aG9kIHJheVxuICAgICAqIEBwYXJhbSB7Ym9keVtdfSBib2RpZXNcbiAgICAgKiBAcGFyYW0ge3ZlY3Rvcn0gc3RhcnRQb2ludFxuICAgICAqIEBwYXJhbSB7dmVjdG9yfSBlbmRQb2ludFxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbcmF5V2lkdGhdXG4gICAgICogQHJldHVybiB7b2JqZWN0W119IENvbGxpc2lvbnNcbiAgICAgKi9cbiAgICBRdWVyeS5yYXkgPSBmdW5jdGlvbihib2RpZXMsIHN0YXJ0UG9pbnQsIGVuZFBvaW50LCByYXlXaWR0aCkge1xuICAgICAgICByYXlXaWR0aCA9IHJheVdpZHRoIHx8IDFlLTEwMDtcblxuICAgICAgICB2YXIgcmF5QW5nbGUgPSBWZWN0b3IuYW5nbGUoc3RhcnRQb2ludCwgZW5kUG9pbnQpLFxuICAgICAgICAgICAgcmF5TGVuZ3RoID0gVmVjdG9yLm1hZ25pdHVkZShWZWN0b3Iuc3ViKHN0YXJ0UG9pbnQsIGVuZFBvaW50KSksXG4gICAgICAgICAgICByYXlYID0gKGVuZFBvaW50LnggKyBzdGFydFBvaW50LngpICogMC41LFxuICAgICAgICAgICAgcmF5WSA9IChlbmRQb2ludC55ICsgc3RhcnRQb2ludC55KSAqIDAuNSxcbiAgICAgICAgICAgIHJheSA9IEJvZGllcy5yZWN0YW5nbGUocmF5WCwgcmF5WSwgcmF5TGVuZ3RoLCByYXlXaWR0aCwgeyBhbmdsZTogcmF5QW5nbGUgfSksXG4gICAgICAgICAgICBjb2xsaXNpb25zID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2RpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBib2R5QSA9IGJvZGllc1tpXTtcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgaWYgKEJvdW5kcy5vdmVybGFwcyhib2R5QS5ib3VuZHMsIHJheS5ib3VuZHMpKSB7XG4gICAgICAgICAgICAgICAgZm9yICh2YXIgaiA9IGJvZHlBLnBhcnRzLmxlbmd0aCA9PT0gMSA/IDAgOiAxOyBqIDwgYm9keUEucGFydHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcnQgPSBib2R5QS5wYXJ0c1tqXTtcblxuICAgICAgICAgICAgICAgICAgICBpZiAoQm91bmRzLm92ZXJsYXBzKHBhcnQuYm91bmRzLCByYXkuYm91bmRzKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIGNvbGxpc2lvbiA9IFNBVC5jb2xsaWRlcyhwYXJ0LCByYXkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNvbGxpc2lvbi5jb2xsaWRlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxpc2lvbi5ib2R5ID0gY29sbGlzaW9uLmJvZHlBID0gY29sbGlzaW9uLmJvZHlCID0gYm9keUE7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sbGlzaW9ucy5wdXNoKGNvbGxpc2lvbik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gY29sbGlzaW9ucztcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbGwgYm9kaWVzIHdob3NlIGJvdW5kcyBhcmUgaW5zaWRlIChvciBvdXRzaWRlIGlmIHNldCkgdGhlIGdpdmVuIHNldCBvZiBib3VuZHMsIGZyb20gdGhlIGdpdmVuIHNldCBvZiBib2RpZXMuXG4gICAgICogQG1ldGhvZCByZWdpb25cbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICogQHBhcmFtIHtib3VuZHN9IGJvdW5kc1xuICAgICAqIEBwYXJhbSB7Ym9vbH0gW291dHNpZGU9ZmFsc2VdXG4gICAgICogQHJldHVybiB7Ym9keVtdfSBUaGUgYm9kaWVzIG1hdGNoaW5nIHRoZSBxdWVyeVxuICAgICAqL1xuICAgIFF1ZXJ5LnJlZ2lvbiA9IGZ1bmN0aW9uKGJvZGllcywgYm91bmRzLCBvdXRzaWRlKSB7XG4gICAgICAgIHZhciByZXN1bHQgPSBbXTtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGJvZGllcy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdmFyIGJvZHkgPSBib2RpZXNbaV0sXG4gICAgICAgICAgICAgICAgb3ZlcmxhcHMgPSBCb3VuZHMub3ZlcmxhcHMoYm9keS5ib3VuZHMsIGJvdW5kcyk7XG4gICAgICAgICAgICBpZiAoKG92ZXJsYXBzICYmICFvdXRzaWRlKSB8fCAoIW92ZXJsYXBzICYmIG91dHNpZGUpKVxuICAgICAgICAgICAgICAgIHJlc3VsdC5wdXNoKGJvZHkpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbGwgYm9kaWVzIHdob3NlIHZlcnRpY2VzIGNvbnRhaW4gdGhlIGdpdmVuIHBvaW50LCBmcm9tIHRoZSBnaXZlbiBzZXQgb2YgYm9kaWVzLlxuICAgICAqIEBtZXRob2QgcG9pbnRcbiAgICAgKiBAcGFyYW0ge2JvZHlbXX0gYm9kaWVzXG4gICAgICogQHBhcmFtIHt2ZWN0b3J9IHBvaW50XG4gICAgICogQHJldHVybiB7Ym9keVtdfSBUaGUgYm9kaWVzIG1hdGNoaW5nIHRoZSBxdWVyeVxuICAgICAqL1xuICAgIFF1ZXJ5LnBvaW50ID0gZnVuY3Rpb24oYm9kaWVzLCBwb2ludCkge1xuICAgICAgICB2YXIgcmVzdWx0ID0gW107XG5cbiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBib2RpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHZhciBib2R5ID0gYm9kaWVzW2ldO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoQm91bmRzLmNvbnRhaW5zKGJvZHkuYm91bmRzLCBwb2ludCkpIHtcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBqID0gYm9keS5wYXJ0cy5sZW5ndGggPT09IDEgPyAwIDogMTsgaiA8IGJvZHkucGFydHMubGVuZ3RoOyBqKyspIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcnQgPSBib2R5LnBhcnRzW2pdO1xuXG4gICAgICAgICAgICAgICAgICAgIGlmIChCb3VuZHMuY29udGFpbnMocGFydC5ib3VuZHMsIHBvaW50KVxuICAgICAgICAgICAgICAgICAgICAgICAgJiYgVmVydGljZXMuY29udGFpbnMocGFydC52ZXJ0aWNlcywgcG9pbnQpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXN1bHQucHVzaChib2R5KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9O1xuXG59KSgpO1xuXG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gLi9+L21hdHRlci1qcy9zcmMvY29sbGlzaW9uL1F1ZXJ5LmpzXG4vLyBtb2R1bGUgaWQgPSAxMThcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=");

/***/ }),
/* 119 */
/* no static exports found */
/* all exports used */
/*!*******************************************************!*\
  !*** ./~/matter-js/src/constraint/MouseConstraint.js ***!
  \*******************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = __webpack_require__(/*! ../geometry/Vertices */ 7);\nvar Sleeping = __webpack_require__(/*! ../core/Sleeping */ 21);\nvar Mouse = __webpack_require__(/*! ../core/Mouse */ 72);\nvar Events = __webpack_require__(/*! ../core/Events */ 13);\nvar Detector = __webpack_require__(/*! ../collision/Detector */ 31);\nvar Constraint = __webpack_require__(/*! ./Constraint */ 20);\nvar Composite = __webpack_require__(/*! ../body/Composite */ 6);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\nvar Bounds = __webpack_require__(/*! ../geometry/Bounds */ 2);\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.log('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected', 'warn');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'tick', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            _triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    var _triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 120 */
/* no static exports found */
/* all exports used */
/*!****************************************!*\
  !*** ./~/matter-js/src/core/Runner.js ***!
  \****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = __webpack_require__(/*! ./Events */ 13);\nvar Engine = __webpack_require__(/*! ./Engine */ 70);\nvar Common = __webpack_require__(/*! ./Common */ 1);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render);\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 121 */
/* no static exports found */
/* all exports used */
/*!***********************************************!*\
  !*** ./~/matter-js/src/factory/Composites.js ***!
  \***********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = __webpack_require__(/*! ../body/Composite */ 6);\nvar Constraint = __webpack_require__(/*! ../constraint/Constraint */ 20);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\nvar Body = __webpack_require__(/*! ../body/Body */ 19);\nvar Bodies = __webpack_require__(/*! ./Bodies */ 34);\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = -20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.trapezoid(xx, yy, width, height, 0.3, { \n                collisionFilter: {\n                    group: group\n                },\n                friction: 0.01,\n                chamfer: {\n                    radius: 10\n                }\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8,\n            density: 0.01\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8,\n            density: 0.01\n        });\n                    \n        var axelA = Constraint.create({\n            bodyA: body,\n            pointA: { x: wheelAOffset, y: wheelYOffset },\n            bodyB: wheelA,\n            stiffness: 0.2\n        });\n                        \n        var axelB = Constraint.create({\n            bodyA: body,\n            pointA: { x: wheelBOffset, y: wheelYOffset },\n            bodyB: wheelB,\n            stiffness: 0.2\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.4 }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 122 */
/* no static exports found */
/* all exports used */
/*!*****************************************!*\
  !*** ./~/matter-js/src/geometry/Svg.js ***!
  \*****************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = __webpack_require__(/*! ../geometry/Bounds */ 2);\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        _svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    var _svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 123 */
/* no static exports found */
/* all exports used */
/*!**********************************************!*\
  !*** ./~/matter-js/src/render/RenderPixi.js ***!
  \**********************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Composite = __webpack_require__(/*! ../body/Composite */ 6);\nvar Common = __webpack_require__(/*! ../core/Common */ 1);\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.log('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)', 'warn');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.log('No \"render.element\" passed, \"render.canvas\" was not inserted into document.', 'warn');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }),
/* 124 */
/* no static exports found */
/* all exports used */
/*!********************************!*\
  !*** multi matter-js index.js ***!
  \********************************/
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(/*! matter-js */22);
module.exports = __webpack_require__(/*! index.js */73);


/***/ })
/******/ ]);